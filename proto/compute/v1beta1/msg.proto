syntax = "proto3";
package trst.x.compute.v1beta1;

option go_package = "github.com/trstlabs/trst/x/compute/internal/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

//import "x/compute/internal/types/types.proto";



//StoreCode is used so we can upload code for testing, will be removed on mainnet
message MsgStoreCode {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  // WASMByteCode can be raw or gzip compressed
  bytes wasm_byte_code = 2 [(gogoproto.customname) = "WASMByteCode"];
  // Source is a valid absolute HTTPS URI to the contract's source code, optional
  string source = 3;
  // Builder is a valid docker image name with tag, optional
  string builder = 4;
  // InstantiatePermission to apply on contract creation, optional
  //  AccessConfig InstantiatePermission = 5;
  string contract_duration = 5;
  string title = 6;
  string description = 7;
}

message MsgInstantiateContract {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  string code_hash = 2;
  uint64 code_id = 3 [(gogoproto.customname) = "CodeID"];
  //contract_id is a unique name for the contract
  string contract_id = 4;
  //msg instantiates a new contract instance
  bytes msg = 5;
  //auto_msg is a message sent after a set period of time
  bytes auto_msg = 6;
  repeated cosmos.base.v1beta1.Coin funds = 7 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  //contract_duration defines the time that the code should run for
  string contract_duration = 8;
  //interval defines the interval between auto_msg calls
  string interval = 9;
  bytes callback_sig = 10 [(gogoproto.customname) = "CallbackSig"];
}

message MsgExecuteContract {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  string contract = 2;
  bytes msg = 3;
  string code_hash = 4;
  repeated cosmos.base.v1beta1.Coin funds = 5 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  bytes callback_sig = 6 [(gogoproto.customname) = "CallbackSig"];
}

message MsgDiscardAutoMsg {
  option (gogoproto.goproto_getters) = false;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  bytes contract_address = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

/*
message MsgMigrateContract {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  bytes contract = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  uint64 code_id = 3 [(gogoproto.customname) = "CodeID"];
  bytes migrate_msg = 4 [(gogoproto.casttype) = "encoding/json.RawMessage"];
}

message MsgUpdateAdmin {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  bytes new_admin = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  bytes contract = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message MsgClearAdmin {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  bytes contract = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}


 */


