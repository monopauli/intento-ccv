syntax = "proto3";
package trst.x.compute.v1beta1;

import "gogoproto/gogo.proto";
import "compute/v1beta1/types.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "cosmos/base/abci/v1beta1/abci.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/trstlabs/trst/x/compute/internal/types";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = true;

// Query provides defines the gRPC querier service
service Query {
    rpc ContractInfo (QueryContractInfoRequest) returns (QueryContractInfoResponse) {
        option (google.api.http).get = "/compute/v1beta1/contract/{address}";
    }
     rpc ContractPublicState (QueryContractPublicStateRequest) returns (QueryContractPublicStateResponse) {
        option (google.api.http).get = "/compute/v1beta1/contract/{address}/public-state";
    }
    rpc ContractPublicStateForAccount (QueryContractPublicStateForAccountRequest) returns (QueryContractPublicStateForAccountResponse) {
        option (google.api.http).get = "/compute/v1beta1/contract/{address}/public-state/{account}";
    }
    rpc ContractPublicStateByKey(QueryContractPublicStateByKeyRequest) returns (QueryContractPublicStateByKeyResponse) {
        option (google.api.http).get = "/compute/v1beta1/contract/{address}/public-state/{key}";
    }
    rpc ContractsByCode (QueryContractsByCodeRequest) returns (QueryContractsByCodeResponse) {
        option (google.api.http).get = "/compute/v1beta1/code/{code_id}/contracts";
    }
    rpc ContractPrivateState (QueryContractPrivateStateRequest) returns (QueryContractPrivateStateResponse) {
        option (google.api.http).get = "/compute/v1beta1/contract/{address}/private-state";
    }
    rpc Code (QueryCodeRequest) returns (QueryCodeResponse) {
        option (google.api.http).get = "/compute/v1beta1/code/{code_id}";
    }
    rpc Codes (google.protobuf.Empty) returns (QueryCodesResponse) {
        option (google.api.http).get = "/compute/v1beta1/code";
    }
    rpc CodeHash(QueryCodeHashRequest) returns (QueryCodeHashResponse) {
		option (google.api.http).get = "/compute/v1beta1/code-hash/{code_id}";
	}
}

// QueryContractInfoRequest is the request type for the Query/ContractInfo RPC method
message QueryContractInfoRequest {
    // address is the address of the contract to query
    string address = 1;
}
// QueryContractInfoResponse is the response type for the Query/ContractInfo RPC method
message QueryContractInfoResponse {

    ContractInfo ContractInfo = 2 [(gogoproto.embed) = true, (gogoproto.jsontag) = ""];
}


// QueryContractPublicStateRequest is the request type for the Query/ContractPublicState RPC method
message QueryContractPublicStateRequest {
    // address is the address of the contract to query
    string address = 1;
}
// QueryContractPublicStateResponse is the response type for the Query/ContractPublicState RPC method
message QueryContractPublicStateResponse {
    repeated KeyPair public_contract_state = 1;
}

// QueryContractPublicStateForAccountRequest is the request type for the Query/QueryContractPublicStateForAccountRequest RPC method
message QueryContractPublicStateForAccountRequest {
    // address is the address of the contract to query
    string address = 1;
    // address is the address of the contract to query
    string account = 2;
}
// QueryContractPublicStateForAccountResponse is the response type for the Query/QueryContractPublicStateForAccountResponse RPC method
message QueryContractPublicStateForAccountResponse {
    repeated KeyPair public_contract_state = 1;
}

// QueryContractPublicStateByKeyRequest is the request type for the Query/QueryContractPublicStateByKeyRequest RPC method
message QueryContractPublicStateByKeyRequest {
    // address is the address of the contract to query
    string address = 1;
    // address is the address of the contract to query
    string key = 2;
}
// QueryContractPublicStateByKeyResponse is the response type for the Query/QueryContractPublicStateByKeyResponse RPC method
message QueryContractPublicStateByKeyResponse {
     KeyPair key_pair = 1;
}

message QueryContractsByCodeRequest {
    uint64 code_id = 1; // grpc-gateway_out does not support Go style CodID
}

message QueryContractsByCodeResponse {
    repeated ContractInfoWithAddress contract_infos = 1 [(gogoproto.nullable) = false];
}


message QueryContractPrivateStateRequest {
    // address is the address of the contract
    string address = 1;
    bytes query_data = 2;
}

message QueryContractAddressByContractIdRequest {
    string contract_id = 1;
}

message QueryContractKeyRequest {
    // address is the address of the contract
    bytes address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message QueryContractHashRequest {
    // address is the address of the contract
    bytes address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message QueryContractPrivateStateResponse {
    bytes data = 1 [(gogoproto.casttype) = "encoding/json.RawMessage"];
}

message QueryCodeRequest {
    uint64 code_id = 1; // grpc-gateway_out does not support Go style CodID
}

message CodeInfoResponse {
    uint64 code_id = 1 [(gogoproto.customname) = "CodeID", (gogoproto.jsontag) = "id"]; // id for legacy support
    bytes creator = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    bytes code_hash = 3 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
    string source = 4;
    string builder = 5;
     google.protobuf.Duration default_duration = 6 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag)     = "default_duration,omitempty"
  ];
    string title = 7;
    string description = 8;
    uint64 instances = 9;
}

message QueryCodeResponse {
    CodeInfoResponse code_info = 1 [(gogoproto.embed) = true, (gogoproto.jsontag) = ""];
    bytes data = 2 [(gogoproto.jsontag) = "data"];
}

message QueryCodesResponse {
    repeated CodeInfoResponse code_infos = 1 [(gogoproto.nullable) = false];
}

message QueryContractAddressByContractIdResponse {
    // address is the address of the contract
    bytes address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message QueryContractKeyResponse {
    // address is the address of the contract
    bytes key = 1 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
}

message QueryContractHashResponse {
    bytes code_hash = 1 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
}

message QueryCodeHashRequest {
	uint64 code_id = 1;
}

message QueryCodeHashResponse {
	bytes code_hash = 1;
	string code_hash_string = 2;
	
}
// DecryptedAnswer is a struct that represents a decrypted tx-query
message DecryptedAnswer {
    option (gogoproto.equal) = false;

    string type = 1;
    string input = 2;
    string output_data = 3;
    string output_data_as_string = 4;
    repeated cosmos.base.abci.v1beta1.StringEvent output_logs = 5 [(gogoproto.nullable) = false];
    bytes output_error = 6 [(gogoproto.casttype) = "encoding/json.RawMessage"];
    string plaintext_error = 7;
}
