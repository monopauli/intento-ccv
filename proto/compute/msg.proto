syntax = "proto3";
package trst.x.compute.v1beta1;

option go_package = "github.com/trstlabs/trst/x/compute/internal/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

//import "x/compute/internal/types/types.proto";


message MsgStoreCode {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  // WASMByteCode can be raw or gzip compressed
  bytes wasm_byte_code = 2 [(gogoproto.customname) = "WASMByteCode"];
  // Source is a valid absolute HTTPS URI to the contract's source code, optional
  string source = 3;
  // Builder is a valid docker image name with tag, optional
  string builder = 4;
  // InstantiatePermission to apply on contract creation, optional
//  AccessConfig InstantiatePermission = 5;
    int64 contract_period = 5;
    string title = 6;
     string description = 7;
    uint64 instances = 8;
}

message MsgInstantiateContract {
  option (gogoproto.goproto_getters) = false;

  string sender = 1 ;
  // Admin is an optional address that can execute migrations
//  bytes admin = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string callback_code_hash = 2;
  uint64 code_id = 3 [(gogoproto.customname) = "CodeID"];
  string contract_id = 4;
  bytes init_msg = 5;
   bytes last_msg = 6;
  repeated cosmos.base.v1beta1.Coin init_funds = 7 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
   bytes callback_sig = 8 [(gogoproto.customname) = "CallbackSig"];
}

message MsgExecuteContract {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  bytes contract = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  bytes msg = 3;
  string callback_code_hash = 4;
  repeated cosmos.base.v1beta1.Coin sent_funds = 5 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  bytes callback_sig = 6 [(gogoproto.customname) = "CallbackSig"];
}

/*
message MsgMigrateContract {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  bytes contract = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  uint64 code_id = 3 [(gogoproto.customname) = "CodeID"];
  bytes migrate_msg = 4 [(gogoproto.casttype) = "encoding/json.RawMessage"];
}

message MsgUpdateAdmin {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  bytes new_admin = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  bytes contract = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message MsgClearAdmin {
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  bytes contract = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}
 */
