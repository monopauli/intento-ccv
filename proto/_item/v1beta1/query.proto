syntax = "proto3";
package trstlabs.trst.item.v1beta1;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "_item/v1beta1/estimator.proto";
//import "item/buyer.proto";
import "_item/v1beta1/item.proto";

// option go_package = "github.com/trstlabs/trst/x/item/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2
	rpc Profile(QueryGetProfileRequest) returns (QueryGetProfileResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/profiles/{owner}";
	}
	rpc AllProfiles(QueryAllProfilesRequest) returns (QueryAllProfilesResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/profiles";
	}
	rpc Item(QueryGetItemRequest) returns (QueryGetItemResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/item/{id}";
	}
	rpc ItemAll(QueryAllItemsRequest) returns (QueryAllItemsResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/item";
	}
	rpc ItemOwner(QueryGetItemOwnerRequest) returns (QueryGetItemOwnerResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/item/{id}/owner";
	}
	rpc ListedItemsAll(QueryAllListedItemsRequest) returns (QueryAllListedItemsResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/listeditems";
	}
	rpc SellerItems(QuerySellerItemsRequest) returns (QuerySellerItemsResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/selleritems/{seller}";
	}
	rpc BuyerItems(QueryBuyerItemsRequest) returns (QueryBuyerItemsResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/buyeritems/{buyer}";
	}

	rpc CodeHash(QueryCodeHashRequest) returns (QueryCodeHashResponse) {
		option (google.api.http).get = "/trstlabs/trst/trst/codehash/{codeid}";
	}


}

// this line is used by starport scaffolding # 3
message QueryGetProfileRequest {
	string owner = 1;
}

message QueryGetProfileResponse {
	Profile Profile = 1;
}

message QueryAllProfilesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProfilesResponse {
	repeated Profile Profile = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetItemRequest {
	uint64 id = 1;
}
message QueryGetItemResponse {
	Item Item = 1;
}
message QueryGetItemOwnerRequest {
	uint64 id = 1;
}
message QueryGetItemOwnerResponse {
	string Owner = 1;
}

message QueryAllItemsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllItemsResponse {
	repeated Item Item = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllListedItemsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllListedItemsResponse {
	repeated Item Item = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


message QuerySellerItemsRequest {
	string seller = 1;
}

message QuerySellerItemsResponse {
	repeated Item Item = 1;
	
}

message QueryBuyerItemsRequest {
	string buyer = 1;
}

message QueryBuyerItemsResponse {
	repeated Item Item = 1;
	
}

message QueryCodeHashRequest {
	uint64 codeid = 1;
}

message QueryCodeHashResponse {
	bytes codehash = 1;
	string codehash_string = 2;
	
}



