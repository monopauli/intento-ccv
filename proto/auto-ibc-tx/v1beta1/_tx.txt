syntax = "proto3";

package trst.x.autoibctx._v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "auto-ibc-tx/v1beta1/_types.proto";
option go_package = "github.com/trstlabs/trst/x/auto-ibc-tx/types";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = true;

// Msg defines the ica-authentication Msg service.
service Msg {
  // Register defines a rpc handler for MsgRegisterAccount
  rpc RegisterAccount(MsgRegisterAccount) returns (MsgRegisterAccountResponse) {
    option (google.api.http).post = "/auto-ibc-tx/v1beta1/register-account";
  };
  rpc SubmitTx(MsgSubmitTx) returns (MsgSubmitTxResponse) {
    option (google.api.http).post = "/auto-ibc-tx/v1beta1/submit-tx";
  };
  rpc SubmitAutoTx(MsgSubmitAutoTx) returns (MsgSubmitAutoTxResponse) {
    option (google.api.http).post = "/auto-ibc-tx/v1beta1/submit-auto-tx";
  };
  rpc RegisterAccountAndSubmitAutoTx(MsgRegisterAccountAndSubmitAutoTx) returns (MsgRegisterAccountAndSubmitAutoTxResponse) {
    option (google.api.http).post = "/auto-ibc-tx/v1beta1/register-account-submit-auto-tx";
  };
  rpc UpdateAutoTx(MsgUpdateAutoTx) returns (MsgUpdateAutoTxResponse) {
    option (google.api.http).post = "/auto-ibc-tx/v1beta1/update-auto-tx";
  };
}

// MsgRegisterAccount registers an interchain account for the given owner over the specified connection pair
message MsgRegisterAccount {
  string owner                      = 1;
  string connection_id              = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string version                    = 3;
}

// MsgRegisterAccountResponse is the response type for Msg/RegisterAccount
message MsgRegisterAccountResponse {}

// MsgSubmitTx creates and submits an arbitrary transaction msg to be executed locally or using an interchain account
message MsgSubmitTx {
  string owner                      = 1;
  string connection_id              = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  google.protobuf.Any msg           = 3;
}

// MsgSubmitTxResponse defines the MsgSubmitTx response type
message MsgSubmitTxResponse {}

// MsgSubmitAutoTx creates, submits and schedules an arbitrary transaction msg to be executed locally or using an interchain account
message MsgSubmitAutoTx {
  string owner                      = 1;
  string connection_id              = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string label                      = 3;
  repeated google.protobuf.Any msgs           = 4  [(cosmos_proto.accepts_interface) = "sdk.Msg"];
  // duration defines the time that the code should run for
  string duration = 5;
  // start_at when set as a unix time after block inclusion, creates a custom start time for execution
  uint64 start_at = 6;
  //interval defines the interval between auto_msg calls
  string interval = 7;
  //optional fees to be used for auto tx execution limiting the amount of fees incurred
  repeated cosmos.base.v1beta1.Coin fee_funds = 8 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"fee_funds\""
  ];
  //optional parameters for creating interdependent execution
  ExecutionConditions conditions = 9;
  //if execution of depended tx has not happend yet
  //uint64 retries = 10;
}

// MsgSubmitTxResponse defines the MsgSubmitTx response type
message MsgSubmitAutoTxResponse {}

// MsgRegisterAccountAndSubmitAutoTx creates an interchain account, submits and schedules an arbitrary transaction msg to be executed by this interchain account
message MsgRegisterAccountAndSubmitAutoTx {
  string owner                      = 1;
  string connection_id              = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string label                      = 3;
  repeated google.protobuf.Any msgs           = 4  [(cosmos_proto.accepts_interface) = "sdk.Msg"];
  // duration defines the time that the code should run for
  string duration = 5;
  // start_at when set as a unix time after block inclusion, creates a custom start time for execution
  uint64 start_at = 6;
  //interval defines the interval between auto_msg calls
  string interval = 7;
  //optional fees to be used for auto tx execution limiting the amount of fees incurred
  repeated cosmos.base.v1beta1.Coin fee_funds = 8 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"fee_funds\""
  ];
  //optional array of dependent txs that should be executed before execution is allowed
  ExecutionConditions conditions = 9;
  string version                    = 10;
}

// MsgRegisterAccountAndSubmitAutoTxResponse defines the MsgSubmitTx response type
message MsgRegisterAccountAndSubmitAutoTxResponse {}



// MsgUpdateAutoTx updates an arbitrary transaction msg to be executed locally or using an interchain account
message MsgUpdateAutoTx {
  string owner                      = 1;
  uint64 tx_id = 2;
  string connection_id              = 3 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string label                      = 4;
  repeated google.protobuf.Any msgs           = 5 [(cosmos_proto.accepts_interface) = "sdk.Msg"];
  // end_time when set defines the time that the code should run for
  uint64 end_time = 6;
  // start_at when set as a unix time after block inclusion, creates a custom start time for execution
  uint64 start_at = 7;
  //interval defines the interval between auto_msg calls
  string interval = 8;
  //optional fees to be used for auto tx execution limiting the amount of fees incurred
  repeated cosmos.base.v1beta1.Coin fee_funds = 9 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"fee_funds\""
  ];
  //optional array of dependent txs that should be executed before execution is allowed
  repeated uint64 depends_on_tx_ids = 10;
  ExecutionConditions conditions = 11;
}

// MsgUpdateTxResponse defines the MsgUpdateTx response type
message MsgUpdateAutoTxResponse {}