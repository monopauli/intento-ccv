name: Build and Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: "Specify the INTO version tag"

permissions:
  contents: write
  packages: write  # Required for pushing to GitHub Container Registry (GHCR)

jobs:
  fetch-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Get Version
        run: |
          version=${{ github.event.inputs.version || github.ref }}
          version=${version#refs/tags/}
          echo "version=$version" >> $GITHUB_ENV
          echo "Version: $version"

      - name: Download Intento Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: intentod_linux_amd64
          path: build/
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/intentod_linux_amd64
          asset_name: intentod_linux_amd64_${{ github.event.release.tag_name }}
          asset_content_type: application/octet-stream

  build-image:
    runs-on: ubuntu-latest
    needs: fetch-artifact
    steps:
      - name: Get Version
        run: |
          version=${{ github.event.inputs.version || github.ref }}
          version=${version#refs/tags/}
          echo "version=$version" >> $GITHUB_ENV
          echo "Version: $version"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Image
        env:
          DOCKER_BUILDKIT: 1
        shell: bash
        run: |
          tag=ghcr.io/trstlabs/intento:${{ env.version }}
          docker build -t $tag .
          docker push $tag
