Module: 
govModule addr: trust10d07y265gmmuvt4z0w9aw880jnsr700jnldszs 
Module: 
transferModule addr: trust1yl6hdjhmkf37639730gffanpzndzdpmh8zgurq 
Module: 
computeModule addr: trust1kp9p9ajg863y5urtl5xpqxt6dp75u4yxeegmg8 
Module: 
claimModule addr: trust1m5dncvfv7lvpvycr23zja93fecun2kcvtvhda3 
Module: 
allocModule addr: trust1hnfmrp9k0lmepmt0rsktkjj4aqh3w40m9qy4ay 
Module: 
fee_collectorModule addr: trust17xpfvakm2amg962yls6f84z3kell8c5leya4l7 
Module: 
distributionModule addr: trust1jv65s3grqf6v6jl3dp4t6c9t9rk99cd8wz6fau 
Module: 
mintModule addr: trust1m3h30wlvsf8llruxtpukdvsy0km2kum8pvednr 
Module: 
bonded_tokens_poolModule addr: trust1fl48vsnmsdzcv85q5d2q4z5ajdha8yu3uxh6d5 
Module: 
not_bonded_tokens_poolModule addr: trust1tygms3xhhs3yv487phx3dw4a95jn7t7lgxttmq 
2022-07-02 12:39:39,620 INFO  [cosmwasm_sgx_vm::enclave] Setting up enclave doorbell for up to 8 threads
DEBUG  [enclave_contract_engine::external::ecalls] inside ecall_configure_runtime: 5
DEBUG  [enclave_contract_engine::module_cache] configuring module cache: 5
2022-07-02 12:39:57,487 INFO  [cosmwasm_sgx_vm::enclave] Setting up enclave doorbell for up to 4 threads
Initializing claims genesis...
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [75 141 136 103 89 213 144 93 85 238 64 226 246 79 180 171 90 109 208 93 82 41 12 40 231 228 11 95 226 80 26 134] 
TRACE  [enclave_crypto::key_manager] consensus_seed_exchange_keypair: "7a523d50c21047e71ef971913a6545549bdd0daa6fe5ae522427fa70683d2c17"
TRACE  [enclave_crypto::key_manager] consensus_io_exchange_keypair: "70ba76a9693a0f9df753121cd58b10f9ac6ddafac4110c7a819bd0cee9be974b"
TRACE  [enclave_crypto::key_manager] consensus_state_ikm: "85de29b985a3f693a0b80c47c09c959422ab8d3e833b0f91b5783138e25377e8"
TRACE  [enclave_crypto::key_manager] consensus_state_ikm: "85de29b985a3f693a0b80c47c09c959422ab8d3e833b0f91b5783138e25377e8"
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "a4c3233a81fae81bd8ba8e99a25ac562629e793cf581c831e7b94e55531f67b41683e1698966481104e563bfd79c7965b73d8aaea55278b6ad2036a0027c3a3e"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "0lKSJyAvin4x80xyaq3TGWc6rvEXFYg6FFi8OqFkClRmIb5+pzf7SjrtTsA+UTrRvWe/UfrwRgeW5GuAbMGPVhPmOSFtb7SVOvXQvVcLrahsp6da74ZRx5Z87MSQvn4sui0dwXiIyuDfocW3Z0ZNVTeCAKuNHxJ4jXhCy0Guz65Wm5Zf2umVudHHKo9sul8lRQ15NivIcyvF6Fbujj6z2oBDnEPp8Gez22jYBUia6mRdEGvCC3nUvd2BgWyGSabq9W5Z8Dl4W8LVr2SFq8RCYXyMaxERO0dXo5CUPQ50yr4Ensz0pIwLrRQe27V9c6qieSSs0fuPEItIIK6L7tiDffI+KCtrf1JTqfduQTo45QWMXJ6Rmpbq8hLVmo58FUuD/zWi2jxSmiI/RmWdIebxW4J9eHYMpRUaZqaS5kJZ+BV2bwi+CzKtAc5OkWbquGEwCsx7YgnWFNCITh5IuaTjWpC4p2vqQNQy4pwwxr83L12sZREJnR90qfeaZVljf9cY41Kuu9Fxv+j3"
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [210, 82, 146, 39, 32, 47, 138, 126, 49, 243, 76, 114, 106, 173, 211, 25, 103, 58, 174, 241, 23, 21, 136, 58, 20, 88, 188, 58, 161, 100, 10, 84] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 248, 3, 10, 245, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 194, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 4, 112, 69, 84, 72, 42, 137, 3, 210, 82, 146, 39, 32, 47, 138, 126, 49, 243, 76, 114, 106, 173, 211, 25, 103, 58, 174, 241, 23, 21, 136, 58, 20, 88, 188, 58, 161, 100, 10, 84, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 19, 230, 57, 33, 109, 111, 180, 149, 58, 245, 208, 189, 87, 11, 173, 168, 108, 167, 167, 90, 239, 134, 81, 199, 150, 124, 236, 196, 144, 190, 126, 44, 186, 45, 29, 193, 120, 136, 202, 224, 223, 161, 197, 183, 103, 70, 77, 85, 55, 130, 0, 171, 141, 31, 18, 120, 141, 120, 66, 203, 65, 174, 207, 174, 86, 155, 150, 95, 218, 233, 149, 185, 209, 199, 42, 143, 108, 186, 95, 37, 69, 13, 121, 54, 43, 200, 115, 43, 197, 232, 86, 238, 142, 62, 179, 218, 128, 67, 156, 67, 233, 240, 103, 179, 219, 104, 216, 5, 72, 154, 234, 100, 93, 16, 107, 194, 11, 121, 212, 189, 221, 129, 129, 108, 134, 73, 166, 234, 245, 110, 89, 240, 57, 120, 91, 194, 213, 175, 100, 133, 171, 196, 66, 97, 124, 140, 107, 17, 17, 59, 71, 87, 163, 144, 148, 61, 14, 116, 202, 190, 4, 158, 204, 244, 164, 140, 11, 173, 20, 30, 219, 181, 125, 115, 170, 162, 121, 36, 172, 209, 251, 143, 16, 139, 72, 32, 174, 139, 238, 216, 131, 125, 242, 62, 40, 43, 107, 127, 82, 83, 169, 247, 110, 65, 58, 56, 229, 5, 140, 92, 158, 145, 154, 150, 234, 242, 18, 213, 154, 142, 124, 21, 75, 131, 255, 53, 162, 218, 60, 82, 154, 34, 63, 70, 101, 157, 33, 230, 241, 91, 130, 125, 120, 118, 12, 165, 21, 26, 102, 166, 146, 230, 66, 89, 248, 21, 118, 111, 8, 190, 11, 50, 173, 1, 206, 78, 145, 102, 234, 184, 97, 48, 10, 204, 123, 98, 9, 214, 20, 208, 136, 78, 30, 72, 185, 164, 227, 90, 144, 184, 167, 107, 234, 64, 212, 50, 226, 156, 48, 198, 191, 55, 47, 93, 172, 101, 17, 9, 157, 31, 116, 169, 247, 154, 101, 89, 99, 127, 215, 24, 227, 82, 174, 187, 209, 113, 191, 232, 247, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 5, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 113, 224, 11, 118, 16, 150, 196, 11, 37, 63, 198, 61, 236, 162, 56, 233, 237, 89, 227, 105, 179, 90, 41, 124, 170, 233, 129, 230, 52, 248, 91, 51, 106, 110, 185, 245, 118, 56, 123, 33, 186, 55, 193, 105, 113, 245, 10, 23, 105, 235, 97, 147, 44, 195, 212, 75, 183, 130, 37, 57, 233, 129, 136, 138]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([113, 224, 11, 118, 16, 150, 196, 11, 37, 63, 198, 61, 236, 162, 56, 233, 237, 89, 227, 105, 179, 90, 41, 124, 170, 233, 129, 230, 52, 248, 91, 51, 106, 110, 185, 245, 118, 56, 123, 33, 186, 55, 193, 105, 113, 245, 10, 23, 105, 235, 97, 147, 44, 195, 212, 75, 183, 130, 37, 57, 233, 129, 136, 138]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{4}pETH*�\u{3}�R�\' /�~1�Lrj��\u{19}g:��\u{17}\u{15}�:\u{14}X�:�d\nTf!�~�7�J:�N�>Q:ѽg�Q��F\u{7}��k�l��V\u{13}�9!mo��:�нW\u{b}��l��Z�Qǖ|�Đ�~,�-\u{1d}�x���ߡŷgFMU7�\u{0}��\u{1f}\u{12}x�xB�A�ϮV��_�镹��*�l�_%E\ry6+�s+��V�>�ڀC�C��g��h�\u{5}H��d]\u{10}k�\u{b}yԽ\u{741}�l�I���nY�9x[�կd���Ba|�k\u{11}\u{11};GW���=\u{e}tʾ\u{4}�����\u{b}�\u{14}\u{1e}۵}s��y$����\u{10}�H ���\u{603}}�>(+k\u{7f}RS��nA:8�\u{5}�\\������\u{12}՚�|\u{15}K��5��<R�\"?Fe�!��[�}xv\u{c}�\u{15}\u{1a}f���BY�\u{15}vo\u{8}�\u{b}2�\u{1}�N�f�a0\n�{b\t�\u{14}ЈN\u{1e}H���Z���k�@�2�0ƿ7/]�e\u{11}\t�\u{1f}t���eYc\u{7f}�\u{18}�R���q���\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{5}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [210, 82, 146, 39, 32, 47, 138, 126, 49, 243, 76, 114, 106, 173, 211, 25, 103, 58, 174, 241, 23, 21, 136, 58, 20, 88, 188, 58, 161, 100, 10, 84, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 19, 230, 57, 33, 109, 111, 180, 149, 58, 245, 208, 189, 87, 11, 173, 168, 108, 167, 167, 90, 239, 134, 81, 199, 150, 124, 236, 196, 144, 190, 126, 44, 186, 45, 29, 193, 120, 136, 202, 224, 223, 161, 197, 183, 103, 70, 77, 85, 55, 130, 0, 171, 141, 31, 18, 120, 141, 120, 66, 203, 65, 174, 207, 174, 86, 155, 150, 95, 218, 233, 149, 185, 209, 199, 42, 143, 108, 186, 95, 37, 69, 13, 121, 54, 43, 200, 115, 43, 197, 232, 86, 238, 142, 62, 179, 218, 128, 67, 156, 67, 233, 240, 103, 179, 219, 104, 216, 5, 72, 154, 234, 100, 93, 16, 107, 194, 11, 121, 212, 189, 221, 129, 129, 108, 134, 73, 166, 234, 245, 110, 89, 240, 57, 120, 91, 194, 213, 175, 100, 133, 171, 196, 66, 97, 124, 140, 107, 17, 17, 59, 71, 87, 163, 144, 148, 61, 14, 116, 202, 190, 4, 158, 204, 244, 164, 140, 11, 173, 20, 30, 219, 181, 125, 115, 170, 162, 121, 36, 172, 209, 251, 143, 16, 139, 72, 32, 174, 139, 238, 216, 131, 125, 242, 62, 40, 43, 107, 127, 82, 83, 169, 247, 110, 65, 58, 56, 229, 5, 140, 92, 158, 145, 154, 150, 234, 242, 18, 213, 154, 142, 124, 21, 75, 131, 255, 53, 162, 218, 60, 82, 154, 34, 63, 70, 101, 157, 33, 230, 241, 91, 130, 125, 120, 118, 12, 165, 21, 26, 102, 166, 146, 230, 66, 89, 248, 21, 118, 111, 8, 190, 11, 50, 173, 1, 206, 78, 145, 102, 234, 184, 97, 48, 10, 204, 123, 98, 9, 214, 20, 208, 136, 78, 30, 72, 185, 164, 227, 90, 144, 184, 167, 107, 234, 64, 212, 50, 226, 156, 48, 198, 191, 55, 47, 93, 172, 101, 17, 9, 157, 31, 116, 169, 247, 154, 101, 89, 99, 127, 215, 24, 227, 82, 174, 187, 209, 113, 191, 232, 247], auto_msg: [], init_funds: [], contract_id: "pETH", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 5 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [113, 224, 11, 118, 16, 150, 196, 11, 37, 63, 198, 61, 236, 162, 56, 233, 237, 89, 227, 105, 179, 90, 41, 124, 170, 233, 129, 230, 52, 248, 91, 51, 106, 110, 185, 245, 118, 56, 123, 33, 186, 55, 193, 105, 113, 245, 10, 23, 105, 235, 97, 147, 44, 195, 212, 75, 183, 130, 37, 57, 233, 129, 136, 138]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [43, 153, 59, 110, 172, 217, 74, 1, 99, 181, 34, 177, 123, 74, 37, 193, 159, 187, 171, 60, 200, 222, 39, 204, 246, 183, 185, 34, 254, 175, 39, 213]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"PETH\", \"decimals\": 18, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"100000000000000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] instance not found in cache. building a new one
INFO  [enclave_contract_engine::module_cache] Deserializing Wasm contract
INFO  [enclave_contract_engine::module_cache] Deserialized Wasm contract
INFO  [enclave_contract_engine::module_cache] Validating WASM memory demands
INFO  [enclave_contract_engine::module_cache] Validated WASM memory demands
INFO  [enclave_contract_engine::module_cache] Trying to create Wasmi module from parity...
INFO  [enclave_contract_engine::module_cache] Created Wasmi module from parity. Now checking for floating points...
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] storing module in cache
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [12, 110, 150, 59, 191, 86, 77, 130, 167, 254, 169, 15, 13, 6, 121, 240, 135, 206, 137, 68, 246, 77, 13, 187, 151, 207, 63, 45, 28, 115, 166, 236]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [48, 201, 84, 197, 67, 53, 59, 141, 209, 225, 129, 60, 161, 186, 135, 235, 122, 193, 211, 99, 139, 71, 249, 235, 86, 101, 41, 120, 221, 118, 156, 230]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [48, 201, 84, 197, 67, 53, 59, 141, 209, 225, 129, 60, 161, 186, 135, 235, 122, 193, 211, 99, 139, 71, 249, 235, 86, 101, 41, 120, 221, 118, 156, 230]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [208, 13, 88, 193, 2, 154, 61, 249, 166, 80, 197, 178, 135, 20, 237, 254, 30, 235, 118, 209, 190, 152, 121, 119, 239, 26, 196, 245, 4, 112, 218, 213]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [208, 13, 88, 193, 2, 154, 61, 249, 166, 80, 197, 178, 135, 20, 237, 254, 30, 235, 118, 209, 190, 152, 121, 119, 239, 26, 196, 245, 4, 112, 218, 213]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PETH\u{18}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}100000000000000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance%\"�b\u{0}\u{0}\u{0}\u{0}P\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [93, 200, 97, 129, 58, 251, 64, 137, 25, 249, 108, 15, 162, 144, 50, 17, 52, 58, 101, 88, 220, 50, 255, 125, 205, 100, 251, 214, 254, 78, 79, 27]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [208, 13, 88, 193, 2, 154, 61, 249, 166, 80, 197, 178, 135, 20, 237, 254, 30, 235, 118, 209, 190, 152, 121, 119, 239, 26, 196, 245, 4, 112, 218, 213]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PETH\u{12} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [133, 46, 76, 217, 104, 42, 159, 116, 76, 156, 225, 223, 169, 84, 112, 220, 96, 51, 85, 131, 131, 19, 34, 227, 38, 180, 145, 195, 208, 152, 187, 119]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [188, 29, 56, 192, 137, 138, 205, 25, 152, 121, 214, 232, 103, 88, 42, 117, 160, 13, 196, 225, 113, 224, 191, 182, 83, 110, 244, 27, 171, 193, 203, 180]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [134, 182, 185, 155, 174, 30, 162, 143, 111, 218, 38, 124, 252, 146, 182, 236, 110, 0, 63, 229, 123, 22, 96, 255, 131, 86, 1, 142, 250, 234, 156, 133]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [218, 101, 245, 91, 143, 230, 223, 167, 213, 36, 236, 91, 118, 142, 38, 145, 88, 196, 144, 26, 185, 200, 90, 1, 187, 157, 145, 252, 197, 4, 21, 234]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [43, 153, 59, 110, 172, 217, 74, 1, 99, 181, 34, 177, 123, 74, 37, 193, 159, 187, 171, 60, 200, 222, 39, 204, 246, 183, 185, 34, 254, 175, 39, 213]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [75 141 136 103 89 213 144 93 85 238 64 226 246 79 180 171 90 109 208 93 82 41 12 40 231 228 11 95 226 80 26 134] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "a0c77cbe01795d69ec6cb5f699ab916eb12dab86d7fd4fd8626136a2968f704db7137bfefaaf89cd20b8614ae67fb8e751067b1750e216b7884f39fd4afa5a00"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "UGgr3S+Me/Pd37BDFTPPYO82HORPbE+4KbiTxf4ACEZmIb5+pzf7SjrtTsA+UTrRvWe/UfrwRgeW5GuAbMGPVj+1KDEM+9dq9sEKQtyYXIXdSrIEcL9gZqaq9nW17ANZNdCDn2cvmQcNXEjHNzWX3hP3uky28mCjWNiXExvw9ltXjkHxyovA+58NEhNljipMszA6yLN/atYSpklZi/x0DQ/LFFJFMLCb1lyOtVWvl17wvwrTC7Fc5sxPHoBzL/zvB04WlPcAQNaVoC7MwVFJVN2fN2N8HQCraelt/4JVf0Sb67/LknO4Kz+mKio6w3a8fgsh+sX2Qxd+rZ5zntMUKpkTRXAv5+kqGq3MfqzuTKvukW7rkF3SUHrUq3BNGqRNb9ETlXOUOWy41P+wuc59xTKzzRPvyd4sknckPfeZB9SqxZfet8aPvy0Vyjx9HAIIiPIe0zEexYZxaaMEe6NvqKQc9+9yRJyy/C031V86XvlOPfJLvKXg20+VjnkdJB/ZH4pNfrKGp1BsYA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [80, 104, 43, 221, 47, 140, 123, 243, 221, 223, 176, 67, 21, 51, 207, 96, 239, 54, 28, 228, 79, 108, 79, 184, 41, 184, 147, 197, 254, 0, 8, 70] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 250, 3, 10, 247, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 196, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 5, 112, 65, 84, 79, 77, 42, 138, 3, 80, 104, 43, 221, 47, 140, 123, 243, 221, 223, 176, 67, 21, 51, 207, 96, 239, 54, 28, 228, 79, 108, 79, 184, 41, 184, 147, 197, 254, 0, 8, 70, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 63, 181, 40, 49, 12, 251, 215, 106, 246, 193, 10, 66, 220, 152, 92, 133, 221, 74, 178, 4, 112, 191, 96, 102, 166, 170, 246, 117, 181, 236, 3, 89, 53, 208, 131, 159, 103, 47, 153, 7, 13, 92, 72, 199, 55, 53, 151, 222, 19, 247, 186, 76, 182, 242, 96, 163, 88, 216, 151, 19, 27, 240, 246, 91, 87, 142, 65, 241, 202, 139, 192, 251, 159, 13, 18, 19, 101, 142, 42, 76, 179, 48, 58, 200, 179, 127, 106, 214, 18, 166, 73, 89, 139, 252, 116, 13, 15, 203, 20, 82, 69, 48, 176, 155, 214, 92, 142, 181, 85, 175, 151, 94, 240, 191, 10, 211, 11, 177, 92, 230, 204, 79, 30, 128, 115, 47, 252, 239, 7, 78, 22, 148, 247, 0, 64, 214, 149, 160, 46, 204, 193, 81, 73, 84, 221, 159, 55, 99, 124, 29, 0, 171, 105, 233, 109, 255, 130, 85, 127, 68, 155, 235, 191, 203, 146, 115, 184, 43, 63, 166, 42, 42, 58, 195, 118, 188, 126, 11, 33, 250, 197, 246, 67, 23, 126, 173, 158, 115, 158, 211, 20, 42, 153, 19, 69, 112, 47, 231, 233, 42, 26, 173, 204, 126, 172, 238, 76, 171, 238, 145, 110, 235, 144, 93, 210, 80, 122, 212, 171, 112, 77, 26, 164, 77, 111, 209, 19, 149, 115, 148, 57, 108, 184, 212, 255, 176, 185, 206, 125, 197, 50, 179, 205, 19, 239, 201, 222, 44, 146, 119, 36, 61, 247, 153, 7, 212, 170, 197, 151, 222, 183, 198, 143, 191, 45, 21, 202, 60, 125, 28, 2, 8, 136, 242, 30, 211, 49, 30, 197, 134, 113, 105, 163, 4, 123, 163, 111, 168, 164, 28, 247, 239, 114, 68, 156, 178, 252, 45, 55, 213, 95, 58, 94, 249, 78, 61, 242, 75, 188, 165, 224, 219, 79, 149, 142, 121, 29, 36, 31, 217, 31, 138, 77, 126, 178, 134, 167, 80, 108, 96, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 6, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 120, 236, 76, 174, 199, 73, 228, 112, 71, 187, 58, 11, 147, 14, 94, 112, 54, 162, 252, 112, 31, 113, 184, 161, 211, 83, 164, 111, 110, 72, 46, 7, 17, 182, 83, 52, 161, 193, 67, 234, 252, 1, 248, 252, 107, 70, 200, 203, 150, 37, 146, 40, 194, 181, 124, 245, 115, 124, 166, 126, 127, 48, 53, 12]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([120, 236, 76, 174, 199, 73, 228, 112, 71, 187, 58, 11, 147, 14, 94, 112, 54, 162, 252, 112, 31, 113, 184, 161, 211, 83, 164, 111, 110, 72, 46, 7, 17, 182, 83, 52, 161, 193, 67, 234, 252, 1, 248, 252, 107, 70, 200, 203, 150, 37, 146, 40, 194, 181, 124, 245, 115, 124, 166, 126, 127, 48, 53, 12]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{5}pATOM*�\u{3}Ph+�/�{��\u{7f0}C\u{15}3�`�6\u{1c}�OlO�)����\u{0}\u{8}Ff!�~�7�J:�N�>Q:ѽg�Q��F\u{7}��k�l��V?�(1\u{c}��j��\nBܘ\\��J�\u{4}p�`f���u��\u{3}Y5Ѓ�g/�\u{7}\r\\H�75��\u{13}��L��`�X\u{617}\u{13}\u{1b}��[W�A�ʋ���\r\u{12}\u{13}e�*L�0:ȳ\u{7f}j�\u{12}�IY��t\r\u{f}�\u{14}RE0���\\��U��^�\n�\u{b}�\\��O\u{1e}�s/��\u{7}N\u{16}��\u{0}@\u{595}�.��QITݟ7c|\u{1d}\u{0}�i�m��U\u{7f}D��˒s�+?�**:�v�~\u{b}!���C\u{17}~��s��\u{14}*�\u{13}Ep/��*\u{1a}��~��L��n�]�PzԫpM\u{1a}�Mo�\u{13}�s�9l������}�2��\u{13}���,�w$=��\u{7}Ԫŗ\u{7b7}Ə�-\u{15}�<}\u{1c}\u{2}\u{8}��\u{1e}�1\u{1e}ņqi�\u{4}{�o��\u{1c}��rD���-7�_:^�N=�K����O��y\u{1d}$\u{1f}�\u{1f}�M~���Pl`\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{6}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [80, 104, 43, 221, 47, 140, 123, 243, 221, 223, 176, 67, 21, 51, 207, 96, 239, 54, 28, 228, 79, 108, 79, 184, 41, 184, 147, 197, 254, 0, 8, 70, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 63, 181, 40, 49, 12, 251, 215, 106, 246, 193, 10, 66, 220, 152, 92, 133, 221, 74, 178, 4, 112, 191, 96, 102, 166, 170, 246, 117, 181, 236, 3, 89, 53, 208, 131, 159, 103, 47, 153, 7, 13, 92, 72, 199, 55, 53, 151, 222, 19, 247, 186, 76, 182, 242, 96, 163, 88, 216, 151, 19, 27, 240, 246, 91, 87, 142, 65, 241, 202, 139, 192, 251, 159, 13, 18, 19, 101, 142, 42, 76, 179, 48, 58, 200, 179, 127, 106, 214, 18, 166, 73, 89, 139, 252, 116, 13, 15, 203, 20, 82, 69, 48, 176, 155, 214, 92, 142, 181, 85, 175, 151, 94, 240, 191, 10, 211, 11, 177, 92, 230, 204, 79, 30, 128, 115, 47, 252, 239, 7, 78, 22, 148, 247, 0, 64, 214, 149, 160, 46, 204, 193, 81, 73, 84, 221, 159, 55, 99, 124, 29, 0, 171, 105, 233, 109, 255, 130, 85, 127, 68, 155, 235, 191, 203, 146, 115, 184, 43, 63, 166, 42, 42, 58, 195, 118, 188, 126, 11, 33, 250, 197, 246, 67, 23, 126, 173, 158, 115, 158, 211, 20, 42, 153, 19, 69, 112, 47, 231, 233, 42, 26, 173, 204, 126, 172, 238, 76, 171, 238, 145, 110, 235, 144, 93, 210, 80, 122, 212, 171, 112, 77, 26, 164, 77, 111, 209, 19, 149, 115, 148, 57, 108, 184, 212, 255, 176, 185, 206, 125, 197, 50, 179, 205, 19, 239, 201, 222, 44, 146, 119, 36, 61, 247, 153, 7, 212, 170, 197, 151, 222, 183, 198, 143, 191, 45, 21, 202, 60, 125, 28, 2, 8, 136, 242, 30, 211, 49, 30, 197, 134, 113, 105, 163, 4, 123, 163, 111, 168, 164, 28, 247, 239, 114, 68, 156, 178, 252, 45, 55, 213, 95, 58, 94, 249, 78, 61, 242, 75, 188, 165, 224, 219, 79, 149, 142, 121, 29, 36, 31, 217, 31, 138, 77, 126, 178, 134, 167, 80, 108, 96], auto_msg: [], init_funds: [], contract_id: "pATOM", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 6 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [120, 236, 76, 174, 199, 73, 228, 112, 71, 187, 58, 11, 147, 14, 94, 112, 54, 162, 252, 112, 31, 113, 184, 161, 211, 83, 164, 111, 110, 72, 46, 7, 17, 182, 83, 52, 161, 193, 67, 234, 252, 1, 248, 252, 107, 70, 200, 203, 150, 37, 146, 40, 194, 181, 124, 245, 115, 124, 166, 126, 127, 48, 53, 12]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [181, 226, 136, 205, 254, 169, 252, 98, 172, 49, 33, 36, 38, 209, 145, 184, 226, 104, 250, 191, 18, 3, 197, 195, 73, 122, 178, 116, 142, 172, 125, 74]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"PATOM\", \"decimals\": 18, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"100000000000000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [14, 102, 122, 13, 144, 16, 134, 251, 28, 203, 169, 58, 123, 28, 75, 94, 239, 198, 215, 73, 22, 162, 131, 110, 28, 93, 200, 172, 228, 138, 125, 123]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [82, 202, 208, 29, 29, 6, 176, 105, 184, 63, 55, 134, 67, 74, 216, 140, 56, 129, 105, 142, 244, 249, 12, 101, 115, 147, 22, 175, 24, 15, 165, 21]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [82, 202, 208, 29, 29, 6, 176, 105, 184, 63, 55, 134, 67, 74, 216, 140, 56, 129, 105, 142, 244, 249, 12, 101, 115, 147, 22, 175, 24, 15, 165, 21]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [8, 142, 131, 26, 29, 195, 9, 2, 200, 38, 201, 76, 170, 188, 158, 191, 125, 108, 149, 5, 96, 138, 211, 249, 109, 234, 193, 168, 8, 8, 18, 1]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [8, 142, 131, 26, 29, 195, 9, 2, 200, 38, 201, 76, 170, 188, 158, 191, 125, 108, 149, 5, 96, 138, 211, 249, 109, 234, 193, 168, 8, 8, 18, 1]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PATOM\u{18}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}100000000000000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance*\"�b\u{0}\u{0}\u{0}\u{0}Q\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [1, 45, 127, 93, 213, 51, 84, 141, 91, 145, 138, 67, 124, 168, 108, 82, 167, 212, 146, 115, 52, 203, 93, 6, 84, 129, 10, 232, 122, 90, 139, 113]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [8, 142, 131, 26, 29, 195, 9, 2, 200, 38, 201, 76, 170, 188, 158, 191, 125, 108, 149, 5, 96, 138, 211, 249, 109, 234, 193, 168, 8, 8, 18, 1]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PATOM\u{12} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [156, 191, 26, 179, 177, 35, 74, 154, 220, 229, 242, 201, 226, 229, 102, 188, 41, 112, 243, 7, 231, 166, 223, 98, 229, 200, 135, 119, 142, 17, 139, 67]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [94, 67, 147, 251, 204, 49, 217, 81, 125, 40, 48, 224, 119, 102, 103, 43, 194, 111, 83, 154, 32, 48, 228, 114, 25, 199, 236, 170, 19, 146, 3, 3]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [128, 187, 11, 115, 7, 225, 149, 218, 42, 47, 62, 189, 79, 13, 166, 225, 42, 151, 152, 120, 183, 192, 252, 108, 85, 133, 15, 157, 146, 167, 12, 56]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [237, 184, 171, 212, 97, 65, 189, 57, 244, 38, 116, 204, 152, 42, 157, 23, 87, 66, 8, 112, 182, 126, 38, 10, 125, 137, 70, 199, 255, 233, 182, 125]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [181, 226, 136, 205, 254, 169, 252, 98, 172, 49, 33, 36, 38, 209, 145, 184, 226, 104, 250, 191, 18, 3, 197, 195, 73, 122, 178, 116, 142, 172, 125, 74]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [75 141 136 103 89 213 144 93 85 238 64 226 246 79 180 171 90 109 208 93 82 41 12 40 231 228 11 95 226 80 26 134] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "8f0ba78b2c319813e9652e55c7b0de77c470adfdb984db1883f19058b2caf11cc1aa245dbe90e67d131f933d4ec5a5229e81cdec2c12cb59980664fbad33b318"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "80CVmSe3Hg7H/2ZaKYvsiiO4YRePHynL6SiW+qamec1mIb5+pzf7SjrtTsA+UTrRvWe/UfrwRgeW5GuAbMGPVkpW5cYfr9mIXxtPraJvV9/eGIVqPGVEKEJo8G+oZ7MBGJu/IqGpsJhdwH2BxS1c8dV26zguiLUGkmEeSlGwl+UhuJKMH2lzo8lw/oJvXxHRmEOSng8HDk2hRIzUwfFHgQBk9YM03zNF6kH2P+xiK9UEPYUxN6GfBPBWe8b4MTVYLyfyLmV3cFuJf+VuCd622Ujtvj3juiJZFUt9ihg1IDpMhVdt2cpX7Ef7lZJ9N946L5hDfUa4vVhK6e6d08Xez+mQY7iX0YKQL3slrzf4CDN2AN13TKEOvPf6Cnz1viitG3GfGvml7WA66DCkLMERN2/agKpRy/j5sLCVJkX+QVk+5wg02qiSd2thFTfN+p1b0KF2L9srh4LXn7VVF7Er2Xh18e0abqZP+Rg8+XzP5NJ4SrdGxezSw4g7x/4UYERcTIO+M1GPhIod"
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [243, 64, 149, 153, 39, 183, 30, 14, 199, 255, 102, 90, 41, 139, 236, 138, 35, 184, 97, 23, 143, 31, 41, 203, 233, 40, 150, 250, 166, 166, 121, 205] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 249, 3, 10, 246, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 195, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 5, 112, 84, 82, 83, 84, 42, 137, 3, 243, 64, 149, 153, 39, 183, 30, 14, 199, 255, 102, 90, 41, 139, 236, 138, 35, 184, 97, 23, 143, 31, 41, 203, 233, 40, 150, 250, 166, 166, 121, 205, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 74, 86, 229, 198, 31, 175, 217, 136, 95, 27, 79, 173, 162, 111, 87, 223, 222, 24, 133, 106, 60, 101, 68, 40, 66, 104, 240, 111, 168, 103, 179, 1, 24, 155, 191, 34, 161, 169, 176, 152, 93, 192, 125, 129, 197, 45, 92, 241, 213, 118, 235, 56, 46, 136, 181, 6, 146, 97, 30, 74, 81, 176, 151, 229, 33, 184, 146, 140, 31, 105, 115, 163, 201, 112, 254, 130, 111, 95, 17, 209, 152, 67, 146, 158, 15, 7, 14, 77, 161, 68, 140, 212, 193, 241, 71, 129, 0, 100, 245, 131, 52, 223, 51, 69, 234, 65, 246, 63, 236, 98, 43, 213, 4, 61, 133, 49, 55, 161, 159, 4, 240, 86, 123, 198, 248, 49, 53, 88, 47, 39, 242, 46, 101, 119, 112, 91, 137, 127, 229, 110, 9, 222, 182, 217, 72, 237, 190, 61, 227, 186, 34, 89, 21, 75, 125, 138, 24, 53, 32, 58, 76, 133, 87, 109, 217, 202, 87, 236, 71, 251, 149, 146, 125, 55, 222, 58, 47, 152, 67, 125, 70, 184, 189, 88, 74, 233, 238, 157, 211, 197, 222, 207, 233, 144, 99, 184, 151, 209, 130, 144, 47, 123, 37, 175, 55, 248, 8, 51, 118, 0, 221, 119, 76, 161, 14, 188, 247, 250, 10, 124, 245, 190, 40, 173, 27, 113, 159, 26, 249, 165, 237, 96, 58, 232, 48, 164, 44, 193, 17, 55, 111, 218, 128, 170, 81, 203, 248, 249, 176, 176, 149, 38, 69, 254, 65, 89, 62, 231, 8, 52, 218, 168, 146, 119, 107, 97, 21, 55, 205, 250, 157, 91, 208, 161, 118, 47, 219, 43, 135, 130, 215, 159, 181, 85, 23, 177, 43, 217, 120, 117, 241, 237, 26, 110, 166, 79, 249, 24, 60, 249, 124, 207, 228, 210, 120, 74, 183, 70, 197, 236, 210, 195, 136, 59, 199, 254, 20, 96, 68, 92, 76, 131, 190, 51, 81, 143, 132, 138, 29, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 7, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 152, 140, 170, 243, 50, 47, 228, 133, 2, 98, 69, 216, 109, 218, 57, 62, 136, 192, 207, 111, 85, 82, 72, 80, 10, 112, 12, 146, 103, 205, 87, 149, 121, 115, 197, 218, 110, 97, 59, 218, 201, 147, 203, 149, 136, 153, 239, 210, 97, 170, 149, 74, 240, 18, 75, 125, 212, 136, 45, 134, 98, 53, 202, 166]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([152, 140, 170, 243, 50, 47, 228, 133, 2, 98, 69, 216, 109, 218, 57, 62, 136, 192, 207, 111, 85, 82, 72, 80, 10, 112, 12, 146, 103, 205, 87, 149, 121, 115, 197, 218, 110, 97, 59, 218, 201, 147, 203, 149, 136, 153, 239, 210, 97, 170, 149, 74, 240, 18, 75, 125, 212, 136, 45, 134, 98, 53, 202, 166]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{5}pTRST*�\u{3}�@��\'�\u{1e}\u{e}��fZ)��#�a\u{17}�\u{1f})��(����y�f!�~�7�J:�N�>Q:ѽg�Q��F\u{7}��k�l��VJV��\u{1f}�و_\u{1b}O��oW��\u{18}�j<eD(Bh�o�g�\u{1}\u{18}��\"����]�}��-\\��v�8.��\u{6}�a\u{1e}JQ���!���\u{1f}is��p��o_\u{11}јC��\u{f}\u{7}\u{e}M�D����G�\u{0}d��4�3E�A�?�b+�\u{4}=�17��\u{4}�V{��15X/\'�.ewp[�\u{7f}�n\t\u{7b6}�H��=�\"Y\u{15}K}�\u{18}5 :L�Wm��W�G���}7�:/�C}F��XJ�������c��т�/{%�7�\u{8}3v\u{0}�wL�\u{e}���\n|��(�\u{1b}q�\u{1a}���`:�0�,�\u{11}7oڀ�Q������&E�AY>�\u{8}4ڨ�wka\u{15}7���[Сv/�+��ן�U\u{17}�+�xu��\u{1a}n�O�\u{18}<�|���xJ�F���È;��\u{14}`D\\L��3Q���\u{1d}\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{7}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [243, 64, 149, 153, 39, 183, 30, 14, 199, 255, 102, 90, 41, 139, 236, 138, 35, 184, 97, 23, 143, 31, 41, 203, 233, 40, 150, 250, 166, 166, 121, 205, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 74, 86, 229, 198, 31, 175, 217, 136, 95, 27, 79, 173, 162, 111, 87, 223, 222, 24, 133, 106, 60, 101, 68, 40, 66, 104, 240, 111, 168, 103, 179, 1, 24, 155, 191, 34, 161, 169, 176, 152, 93, 192, 125, 129, 197, 45, 92, 241, 213, 118, 235, 56, 46, 136, 181, 6, 146, 97, 30, 74, 81, 176, 151, 229, 33, 184, 146, 140, 31, 105, 115, 163, 201, 112, 254, 130, 111, 95, 17, 209, 152, 67, 146, 158, 15, 7, 14, 77, 161, 68, 140, 212, 193, 241, 71, 129, 0, 100, 245, 131, 52, 223, 51, 69, 234, 65, 246, 63, 236, 98, 43, 213, 4, 61, 133, 49, 55, 161, 159, 4, 240, 86, 123, 198, 248, 49, 53, 88, 47, 39, 242, 46, 101, 119, 112, 91, 137, 127, 229, 110, 9, 222, 182, 217, 72, 237, 190, 61, 227, 186, 34, 89, 21, 75, 125, 138, 24, 53, 32, 58, 76, 133, 87, 109, 217, 202, 87, 236, 71, 251, 149, 146, 125, 55, 222, 58, 47, 152, 67, 125, 70, 184, 189, 88, 74, 233, 238, 157, 211, 197, 222, 207, 233, 144, 99, 184, 151, 209, 130, 144, 47, 123, 37, 175, 55, 248, 8, 51, 118, 0, 221, 119, 76, 161, 14, 188, 247, 250, 10, 124, 245, 190, 40, 173, 27, 113, 159, 26, 249, 165, 237, 96, 58, 232, 48, 164, 44, 193, 17, 55, 111, 218, 128, 170, 81, 203, 248, 249, 176, 176, 149, 38, 69, 254, 65, 89, 62, 231, 8, 52, 218, 168, 146, 119, 107, 97, 21, 55, 205, 250, 157, 91, 208, 161, 118, 47, 219, 43, 135, 130, 215, 159, 181, 85, 23, 177, 43, 217, 120, 117, 241, 237, 26, 110, 166, 79, 249, 24, 60, 249, 124, 207, 228, 210, 120, 74, 183, 70, 197, 236, 210, 195, 136, 59, 199, 254, 20, 96, 68, 92, 76, 131, 190, 51, 81, 143, 132, 138, 29], auto_msg: [], init_funds: [], contract_id: "pTRST", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 7 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [152, 140, 170, 243, 50, 47, 228, 133, 2, 98, 69, 216, 109, 218, 57, 62, 136, 192, 207, 111, 85, 82, 72, 80, 10, 112, 12, 146, 103, 205, 87, 149, 121, 115, 197, 218, 110, 97, 59, 218, 201, 147, 203, 149, 136, 153, 239, 210, 97, 170, 149, 74, 240, 18, 75, 125, 212, 136, 45, 134, 98, 53, 202, 166]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [3, 215, 174, 142, 56, 37, 201, 5, 1, 104, 95, 130, 11, 187, 194, 146, 200, 136, 32, 146, 121, 139, 14, 199, 151, 218, 76, 217, 59, 161, 80, 209]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"PTRST\", \"decimals\": 6, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"200000000000000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}*Z\u{5}�\u{95}�\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [240, 190, 53, 106, 158, 154, 135, 254, 91, 75, 160, 128, 252, 211, 197, 86, 109, 193, 224, 157, 93, 77, 45, 195, 196, 6, 228, 108, 135, 213, 127, 226]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [19, 128, 156, 76, 114, 13, 8, 176, 48, 150, 173, 75, 60, 212, 250, 84, 10, 223, 215, 46, 101, 34, 205, 153, 170, 152, 8, 134, 108, 253, 52, 18]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [19, 128, 156, 76, 114, 13, 8, 176, 48, 150, 173, 75, 60, 212, 250, 84, 10, 223, 215, 46, 101, 34, 205, 153, 170, 152, 8, 134, 108, 253, 52, 18]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [130, 95, 125, 33, 196, 219, 128, 222, 59, 72, 46, 146, 46, 247, 94, 234, 138, 4, 6, 204, 107, 201, 131, 45, 180, 172, 97, 45, 57, 138, 183, 239]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [130, 95, 125, 33, 196, 219, 128, 222, 59, 72, 46, 146, 46, 247, 94, 234, 138, 4, 6, 204, 107, 201, 131, 45, 180, 172, 97, 45, 57, 138, 183, 239]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PTRST\u{18}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}200000000000000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance/\"�b\u{0}\u{0}\u{0}\u{0}R\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [230, 79, 68, 202, 91, 73, 151, 237, 191, 243, 191, 11, 166, 228, 144, 69, 203, 44, 48, 121, 66, 60, 98, 73, 187, 214, 63, 247, 31, 46, 197, 78]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [130, 95, 125, 33, 196, 219, 128, 222, 59, 72, 46, 146, 46, 247, 94, 234, 138, 4, 6, 204, 107, 201, 131, 45, 180, 172, 97, 45, 57, 138, 183, 239]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PTRST\u{6} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [180, 6, 123, 178, 224, 172, 190, 235, 65, 27, 24, 106, 169, 191, 252, 180, 54, 13, 67, 249, 182, 2, 220, 139, 253, 33, 189, 116, 210, 51, 30, 92]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}*Z\u{5}�\u{95}�\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [87, 67, 132, 24, 126, 142, 206, 156, 128, 188, 52, 111, 9, 72, 245, 165, 206, 126, 147, 35, 94, 53, 10, 104, 250, 164, 216, 10, 69, 193, 39, 37]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [202, 24, 203, 29, 138, 89, 136, 243, 140, 100, 81, 42, 215, 70, 250, 202, 164, 62, 136, 215, 77, 56, 19, 246, 69, 155, 169, 135, 134, 5, 59, 116]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [220, 245, 54, 183, 109, 78, 243, 252, 104, 222, 28, 94, 61, 43, 160, 159, 208, 107, 55, 102, 48, 22, 163, 211, 29, 46, 157, 244, 30, 223, 110, 102]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [3, 215, 174, 142, 56, 37, 201, 5, 1, 104, 95, 130, 11, 187, 194, 146, 200, 136, 32, 146, 121, 139, 14, 199, 151, 218, 76, 217, 59, 161, 80, 209]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [75 141 136 103 89 213 144 93 85 238 64 226 246 79 180 171 90 109 208 93 82 41 12 40 231 228 11 95 226 80 26 134] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "5608c0f68b432c654e0a8c95ecb4e9a5942eeeaf6809cb593f7f55db92007e2ab9edbc15763e4e93709803c9e7de11f33c0e59c7cf86f1baf7dd953e0016b613"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "ADD3DWYnzEy0262nwPbByIwZpdzvWrDMuF/zXP16caVmIb5+pzf7SjrtTsA+UTrRvWe/UfrwRgeW5GuAbMGPVoBaiN7kYnej6edqyNqSTk2A6+ydTDzlkWL8uO/2vHlY1fKJqoysH6LfcKGEpOoqTye84meXql7qDiPpMdrBJ9XkfFWLhI6g9vEsoNTulqXe6pQHJG+AcW0Txk6R/PIys0ltRv2UYfrWivw4/WnW1OAFxoM/ciA8YN+k8eKoFxw0dy/VKBdfL6AFmh3kwN0DRaomCHGvTHnwiO1wM8gCPZ/Mosvv3qMYgSAxRdiwEcmIrhwbIYFDgFuqHjL+IfDbnCqotu4vkwUgkHHGmscnh90uSDtFDz5NZIJgBTCiUbHu8aUCtjFA3L27HP+S930WSzFJYoGJ11f4DmEkqXRUhl0VjDNgzCA0iaqyQ8UWegj2MUfr1TICdsys9K3nT6r3c3EsAU7oUg2csEDeknC5u8FpeEGewSswHj7CVL2aiWA="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 48, 247, 13, 102, 39, 204, 76, 180, 219, 173, 167, 192, 246, 193, 200, 140, 25, 165, 220, 239, 90, 176, 204, 184, 95, 243, 92, 253, 122, 113, 165] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 239, 3, 10, 236, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 185, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 5, 112, 79, 83, 77, 79, 42, 255, 2, 0, 48, 247, 13, 102, 39, 204, 76, 180, 219, 173, 167, 192, 246, 193, 200, 140, 25, 165, 220, 239, 90, 176, 204, 184, 95, 243, 92, 253, 122, 113, 165, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 128, 90, 136, 222, 228, 98, 119, 163, 233, 231, 106, 200, 218, 146, 78, 77, 128, 235, 236, 157, 76, 60, 229, 145, 98, 252, 184, 239, 246, 188, 121, 88, 213, 242, 137, 170, 140, 172, 31, 162, 223, 112, 161, 132, 164, 234, 42, 79, 39, 188, 226, 103, 151, 170, 94, 234, 14, 35, 233, 49, 218, 193, 39, 213, 228, 124, 85, 139, 132, 142, 160, 246, 241, 44, 160, 212, 238, 150, 165, 222, 234, 148, 7, 36, 111, 128, 113, 109, 19, 198, 78, 145, 252, 242, 50, 179, 73, 109, 70, 253, 148, 97, 250, 214, 138, 252, 56, 253, 105, 214, 212, 224, 5, 198, 131, 63, 114, 32, 60, 96, 223, 164, 241, 226, 168, 23, 28, 52, 119, 47, 213, 40, 23, 95, 47, 160, 5, 154, 29, 228, 192, 221, 3, 69, 170, 38, 8, 113, 175, 76, 121, 240, 136, 237, 112, 51, 200, 2, 61, 159, 204, 162, 203, 239, 222, 163, 24, 129, 32, 49, 69, 216, 176, 17, 201, 136, 174, 28, 27, 33, 129, 67, 128, 91, 170, 30, 50, 254, 33, 240, 219, 156, 42, 168, 182, 238, 47, 147, 5, 32, 144, 113, 198, 154, 199, 39, 135, 221, 46, 72, 59, 69, 15, 62, 77, 100, 130, 96, 5, 48, 162, 81, 177, 238, 241, 165, 2, 182, 49, 64, 220, 189, 187, 28, 255, 146, 247, 125, 22, 75, 49, 73, 98, 129, 137, 215, 87, 248, 14, 97, 36, 169, 116, 84, 134, 93, 21, 140, 51, 96, 204, 32, 52, 137, 170, 178, 67, 197, 22, 122, 8, 246, 49, 71, 235, 213, 50, 2, 118, 204, 172, 244, 173, 231, 79, 170, 247, 115, 113, 44, 1, 78, 232, 82, 13, 156, 176, 64, 222, 146, 112, 185, 187, 193, 105, 120, 65, 158, 193, 43, 48, 30, 62, 194, 84, 189, 154, 137, 96, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 8, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 95, 114, 246, 146, 165, 34, 152, 61, 5, 50, 28, 51, 234, 162, 139, 203, 255, 182, 30, 171, 180, 62, 54, 250, 81, 172, 62, 4, 95, 87, 60, 233, 4, 198, 74, 98, 53, 147, 159, 59, 172, 76, 15, 91, 134, 249, 215, 175, 190, 212, 120, 181, 208, 221, 205, 139, 132, 126, 210, 82, 22, 239, 203, 48]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([95, 114, 246, 146, 165, 34, 152, 61, 5, 50, 28, 51, 234, 162, 139, 203, 255, 182, 30, 171, 180, 62, 54, 250, 81, 172, 62, 4, 95, 87, 60, 233, 4, 198, 74, 98, 53, 147, 159, 59, 172, 76, 15, 91, 134, 249, 215, 175, 190, 212, 120, 181, 208, 221, 205, 139, 132, 126, 210, 82, 22, 239, 203, 48]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{5}pOSMO*�\u{2}\u{0}0�\rf\'�L�\u{6ed}����Ȍ\u{19}���Z�\u{338}_�\\�zq�f!�~�7�J:�N�>Q:ѽg�Q��F\u{7}��k�l��V�Z���bw���j�ڒNM���L<�b�����yX�\u{89a8c}�\u{1f}��p����*O\'��g��^�\u{e}#�1��\'��|U������,��\u{e5a5}��\u{7}$o�qm\u{13}�N���2�ImF��a�֊�8�i���\u{5}ƃ?r <`ߤ��\u{17}\u{1c}4w/�(\u{17}_/�\u{5}�\u{1d}���\u{3}E�&\u{8}q�Ly���p3�\u{2}=�\u{322}��ޣ\u{18}� 1Eذ\u{11}Ɉ�\u{1c}\u{1b}!�C�[�\u{1e}2�!�\u{6dc}*���/�\u{5} �qƚ�\'��.H;E\u{f}>Md�`\u{5}0�Q���\u{2}�1@\u{73d}�\u{1c}���}\u{16}K1Ib���W�\u{e}a$�tT�]\u{15}�3`� 4���C�\u{16}z\u{8}�1G��2\u{2}v\u{32c}���O��sq,\u{1}N�R\r��@ޒp���ixA��+0\u{1e}>�T���`\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{8}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [0, 48, 247, 13, 102, 39, 204, 76, 180, 219, 173, 167, 192, 246, 193, 200, 140, 25, 165, 220, 239, 90, 176, 204, 184, 95, 243, 92, 253, 122, 113, 165, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 128, 90, 136, 222, 228, 98, 119, 163, 233, 231, 106, 200, 218, 146, 78, 77, 128, 235, 236, 157, 76, 60, 229, 145, 98, 252, 184, 239, 246, 188, 121, 88, 213, 242, 137, 170, 140, 172, 31, 162, 223, 112, 161, 132, 164, 234, 42, 79, 39, 188, 226, 103, 151, 170, 94, 234, 14, 35, 233, 49, 218, 193, 39, 213, 228, 124, 85, 139, 132, 142, 160, 246, 241, 44, 160, 212, 238, 150, 165, 222, 234, 148, 7, 36, 111, 128, 113, 109, 19, 198, 78, 145, 252, 242, 50, 179, 73, 109, 70, 253, 148, 97, 250, 214, 138, 252, 56, 253, 105, 214, 212, 224, 5, 198, 131, 63, 114, 32, 60, 96, 223, 164, 241, 226, 168, 23, 28, 52, 119, 47, 213, 40, 23, 95, 47, 160, 5, 154, 29, 228, 192, 221, 3, 69, 170, 38, 8, 113, 175, 76, 121, 240, 136, 237, 112, 51, 200, 2, 61, 159, 204, 162, 203, 239, 222, 163, 24, 129, 32, 49, 69, 216, 176, 17, 201, 136, 174, 28, 27, 33, 129, 67, 128, 91, 170, 30, 50, 254, 33, 240, 219, 156, 42, 168, 182, 238, 47, 147, 5, 32, 144, 113, 198, 154, 199, 39, 135, 221, 46, 72, 59, 69, 15, 62, 77, 100, 130, 96, 5, 48, 162, 81, 177, 238, 241, 165, 2, 182, 49, 64, 220, 189, 187, 28, 255, 146, 247, 125, 22, 75, 49, 73, 98, 129, 137, 215, 87, 248, 14, 97, 36, 169, 116, 84, 134, 93, 21, 140, 51, 96, 204, 32, 52, 137, 170, 178, 67, 197, 22, 122, 8, 246, 49, 71, 235, 213, 50, 2, 118, 204, 172, 244, 173, 231, 79, 170, 247, 115, 113, 44, 1, 78, 232, 82, 13, 156, 176, 64, 222, 146, 112, 185, 187, 193, 105, 120, 65, 158, 193, 43, 48, 30, 62, 194, 84, 189, 154, 137, 96], auto_msg: [], init_funds: [], contract_id: "pOSMO", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 8 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [95, 114, 246, 146, 165, 34, 152, 61, 5, 50, 28, 51, 234, 162, 139, 203, 255, 182, 30, 171, 180, 62, 54, 250, 81, 172, 62, 4, 95, 87, 60, 233, 4, 198, 74, 98, 53, 147, 159, 59, 172, 76, 15, 91, 134, 249, 215, 175, 190, 212, 120, 181, 208, 221, 205, 139, 132, 126, 210, 82, 22, 239, 203, 48]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [251, 113, 11, 213, 134, 180, 198, 18, 28, 205, 110, 87, 254, 196, 108, 65, 119, 141, 102, 232, 103, 240, 138, 17, 153, 163, 197, 152, 102, 229, 194, 242]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"POSMO\", \"decimals\": 8, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"10000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\t\u{18}Nr�\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [170, 119, 229, 87, 159, 141, 100, 105, 140, 52, 123, 201, 32, 45, 159, 71, 215, 89, 226, 160, 36, 122, 63, 245, 6, 244, 17, 251, 8, 131, 22, 59]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [159, 116, 206, 66, 46, 92, 148, 201, 244, 79, 174, 242, 48, 68, 162, 168, 67, 31, 143, 15, 212, 198, 115, 0, 255, 80, 100, 183, 7, 233, 34, 132]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [159, 116, 206, 66, 46, 92, 148, 201, 244, 79, 174, 242, 48, 68, 162, 168, 67, 31, 143, 15, 212, 198, 115, 0, 255, 80, 100, 183, 7, 233, 34, 132]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [83, 254, 205, 195, 207, 110, 25, 243, 122, 159, 82, 153, 42, 115, 228, 41, 221, 113, 135, 56, 235, 113, 202, 116, 84, 110, 110, 142, 35, 170, 242, 61]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [83, 254, 205, 195, 207, 110, 25, 243, 122, 159, 82, 153, 42, 115, 228, 41, 221, 113, 135, 56, 235, 113, 202, 116, 84, 110, 110, 142, 35, 170, 242, 61]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}POSMO\u{e}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}10000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance4\"�b\u{0}\u{0}\u{0}\u{0}S\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [11, 75, 236, 77, 141, 176, 112, 108, 164, 215, 73, 88, 115, 101, 135, 108, 245, 79, 157, 246, 186, 223, 137, 181, 158, 254, 229, 148, 68, 75, 124, 116]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [83, 254, 205, 195, 207, 110, 25, 243, 122, 159, 82, 153, 42, 115, 228, 41, 221, 113, 135, 56, 235, 113, 202, 116, 84, 110, 110, 142, 35, 170, 242, 61]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}POSMO\u{8} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [34, 67, 132, 112, 246, 141, 211, 82, 78, 107, 80, 219, 40, 150, 137, 162, 224, 181, 98, 33, 196, 90, 189, 188, 49, 56, 175, 241, 155, 45, 243, 94]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\t\u{18}Nr�\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [218, 0, 205, 62, 230, 149, 217, 147, 55, 163, 200, 92, 39, 125, 38, 161, 23, 69, 91, 145, 24, 209, 195, 169, 113, 25, 46, 123, 114, 144, 175, 9]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [142, 112, 193, 35, 65, 3, 99, 4, 158, 206, 14, 65, 176, 154, 188, 117, 27, 5, 22, 71, 31, 9, 7, 102, 235, 13, 147, 218, 72, 150, 161, 17]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [195, 124, 88, 249, 66, 0, 139, 226, 19, 100, 200, 131, 224, 124, 218, 184, 251, 234, 149, 132, 187, 255, 144, 193, 173, 45, 115, 164, 210, 119, 72, 197]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [251, 113, 11, 213, 134, 180, 198, 18, 28, 205, 110, 87, 254, 196, 108, 65, 119, 141, 102, 232, 103, 240, 138, 17, 153, 163, 197, 152, 102, 229, 194, 242]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [165 168 175 124 153 229 82 22 89 191 19 234 201 48 123 163 228 211 184 43 20 153 2 28 223 202 208 5 201 137 222 112] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "1f9271cd23da95a30b1d93d9c036f43a5671f01128ecd6a577017c3c2f7b7e5b9fb92f16cb474672d63c01d8430b7016d1380cf582ff815813f16fcc7a2c9c4e"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "EK1BYIOE2GIw6e2NF/5GgvPKwjO6tG6UwJNxMgrrKGdmIb5+pzf7SjrtTsA+UTrRvWe/UfrwRgeW5GuAbMGPVm4wlWkJiMfDY4icj1zrrY5zt3pN4c0Y1XWcNvoHomheQ5lueKVPB/Zl0ES7Eobsb4KdqHjsoex5M+XbrmMIfk9zQpNMVLDaoy139FWctx6XuivjbH0SnhZK55VpspnEFI+57CPO6EPHvS1xid22TFxN3ekcwauW0XgcTuSguNoC8MtkmbL/0wN+fNlfPoNvDTikb22OABtJQJzCXeus1gt1kH1XJMJVaqBmhXZoz2Wuh9MhXuxi5CwerJjAU+OoLJkpHb2ChFNCxvHawtwxjFHWp494NPBgrE9CCB3wNZCf6tdqluNQpAyahBE9CDK+JS16P1Vs1cMI2BAwyb0S/+QH1xFfg7hTBE9UbkaZrWyN8qFz/DLoycO4ZX0lzPU9Y43PlCuyoML7pGT5xz3x5xMOT8q9EMo6Hc5mXY4w+XiXb5DJaqRwGwdibMmjit4JUo0x2j0HEG3oTloNJEfwHWllRiZIjSpqYRAfyGiup6WhfGq4nG0I8rSvurfWqR3JxJdlfaHQl5ZTy9eBj5tfZs49oclFGpclh3AB69Jbr3Umkf4b3LBGo2pOZVhzIB/QGicEe46OT8nnWUczMVhPnKnuZQmwAx2k+cK2FTPItVhDvV9BuKuJu9na+RAy93+iVbAbrK4c80qdnLn622NVqSfB3QudK89HSpfPe9hi4O8Pc/FsSfWM8CxTOgaV8gNopWwwyTrDJy4QYhqrshlrBggXdxjXuqpNceWhWl8YO1VUgmBF0NfKfnSiPfXQZnTwcfK3WqP+W/K8/AL1zvDbSUQOhtZOYCxuk9v6hClqq7WHFKCUn2vf7vNS494029C0h76ViTRfIsl0s25fuC+aA0kyBXFFd00Dl125W/onsQ=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 191, 6, 10, 188, 6, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 137, 6, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 4, 34, 6, 114, 111, 117, 116, 101, 114, 42, 206, 5, 16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 110, 48, 149, 105, 9, 136, 199, 195, 99, 136, 156, 143, 92, 235, 173, 142, 115, 183, 122, 77, 225, 205, 24, 213, 117, 156, 54, 250, 7, 162, 104, 94, 67, 153, 110, 120, 165, 79, 7, 246, 101, 208, 68, 187, 18, 134, 236, 111, 130, 157, 168, 120, 236, 161, 236, 121, 51, 229, 219, 174, 99, 8, 126, 79, 115, 66, 147, 76, 84, 176, 218, 163, 45, 119, 244, 85, 156, 183, 30, 151, 186, 43, 227, 108, 125, 18, 158, 22, 74, 231, 149, 105, 178, 153, 196, 20, 143, 185, 236, 35, 206, 232, 67, 199, 189, 45, 113, 137, 221, 182, 76, 92, 77, 221, 233, 28, 193, 171, 150, 209, 120, 28, 78, 228, 160, 184, 218, 2, 240, 203, 100, 153, 178, 255, 211, 3, 126, 124, 217, 95, 62, 131, 111, 13, 56, 164, 111, 109, 142, 0, 27, 73, 64, 156, 194, 93, 235, 172, 214, 11, 117, 144, 125, 87, 36, 194, 85, 106, 160, 102, 133, 118, 104, 207, 101, 174, 135, 211, 33, 94, 236, 98, 228, 44, 30, 172, 152, 192, 83, 227, 168, 44, 153, 41, 29, 189, 130, 132, 83, 66, 198, 241, 218, 194, 220, 49, 140, 81, 214, 167, 143, 120, 52, 240, 96, 172, 79, 66, 8, 29, 240, 53, 144, 159, 234, 215, 106, 150, 227, 80, 164, 12, 154, 132, 17, 61, 8, 50, 190, 37, 45, 122, 63, 85, 108, 213, 195, 8, 216, 16, 48, 201, 189, 18, 255, 228, 7, 215, 17, 95, 131, 184, 83, 4, 79, 84, 110, 70, 153, 173, 108, 141, 242, 161, 115, 252, 50, 232, 201, 195, 184, 101, 125, 37, 204, 245, 61, 99, 141, 207, 148, 43, 178, 160, 194, 251, 164, 100, 249, 199, 61, 241, 231, 19, 14, 79, 202, 189, 16, 202, 58, 29, 206, 102, 93, 142, 48, 249, 120, 151, 111, 144, 201, 106, 164, 112, 27, 7, 98, 108, 201, 163, 138, 222, 9, 82, 141, 49, 218, 61, 7, 16, 109, 232, 78, 90, 13, 36, 71, 240, 29, 105, 101, 70, 38, 72, 141, 42, 106, 97, 16, 31, 200, 104, 174, 167, 165, 161, 124, 106, 184, 156, 109, 8, 242, 180, 175, 186, 183, 214, 169, 29, 201, 196, 151, 101, 125, 161, 208, 151, 150, 83, 203, 215, 129, 143, 155, 95, 102, 206, 61, 161, 201, 69, 26, 151, 37, 135, 112, 1, 235, 210, 91, 175, 117, 38, 145, 254, 27, 220, 176, 70, 163, 106, 78, 101, 88, 115, 32, 31, 208, 26, 39, 4, 123, 142, 142, 79, 201, 231, 89, 71, 51, 49, 88, 79, 156, 169, 238, 101, 9, 176, 3, 29, 164, 249, 194, 182, 21, 51, 200, 181, 88, 67, 189, 95, 65, 184, 171, 137, 187, 217, 218, 249, 16, 50, 247, 127, 162, 85, 176, 27, 172, 174, 28, 243, 74, 157, 156, 185, 250, 219, 99, 85, 169, 39, 193, 221, 11, 157, 43, 207, 71, 74, 151, 207, 123, 216, 98, 224, 239, 15, 115, 241, 108, 73, 245, 140, 240, 44, 83, 58, 6, 149, 242, 3, 104, 165, 108, 48, 201, 58, 195, 39, 46, 16, 98, 26, 171, 178, 25, 107, 6, 8, 23, 119, 24, 215, 186, 170, 77, 113, 229, 161, 90, 95, 24, 59, 85, 84, 130, 96, 69, 208, 215, 202, 126, 116, 162, 61, 245, 208, 102, 116, 240, 113, 242, 183, 90, 163, 254, 91, 242, 188, 252, 2, 245, 206, 240, 219, 73, 68, 14, 134, 214, 78, 96, 44, 110, 147, 219, 250, 132, 41, 106, 171, 181, 135, 20, 160, 148, 159, 107, 223, 238, 243, 82, 227, 222, 52, 219, 208, 180, 135, 190, 149, 137, 52, 95, 34, 201, 116, 179, 110, 95, 184, 47, 154, 3, 73, 50, 5, 113, 69, 119, 77, 3, 151, 93, 185, 91, 250, 39, 177, 18, 103, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 9, 18, 19, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 192, 141, 183, 1, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 165, 201, 147, 140, 230, 115, 246, 151, 168, 84, 61, 29, 91, 227, 22, 114, 66, 20, 73, 149, 131, 166, 124, 247, 62, 177, 246, 231, 197, 234, 29, 186, 4, 68, 161, 93, 57, 185, 227, 29, 249, 96, 139, 97, 31, 153, 126, 228, 102, 106, 25, 40, 115, 95, 26, 181, 69, 166, 169, 153, 178, 22, 245, 40]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([165, 201, 147, 140, 230, 115, 246, 151, 168, 84, 61, 29, 91, 227, 22, 114, 66, 20, 73, 149, 131, 166, 124, 247, 62, 177, 246, 231, 197, 234, 29, 186, 4, 68, 161, 93, 57, 185, 227, 29, 249, 96, 139, 97, 31, 153, 126, 228, 102, 106, 25, 40, 115, 95, 26, 181, 69, 166, 169, 153, 178, 22, 245, 40]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{6}\n�\u{6}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{6}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{4}\"\u{6}router*�\u{5}\u{10}�A`���b0��\u{17}�F����3��n���q2\n�(gf!�~�7�J:�N�>Q:ѽg�Q��F\u{7}��k�l��Vn0�i\t���c���\\뭎s�zM��\u{18}�u�6�\u{7}�h^C�nx�O\u{7}�e�D�\u{12}��o���x��y3�ۮc\u{8}~OsB�LT�ڣ-w�U��\u{1e}��+�l}\u{12}�\u{16}J�i���\u{14}���#��Cǽ-q�ݶL\\M��\u{1c}����x\u{1c}N䠸�\u{2}��d����\u{3}~|�_>�o\r8�om�\u{0}\u{1b}I@��]��\u{b}u�}W$�Uj�f�vh�e���!^�b�,\u{1e}���S�,�)\u{1d}���SB�����1�Q\u{5a7}�x4�`�OB\u{8}\u{1d}�5����j��P�\u{c}��\u{11}=\u{8}2�%-z?Ul��\u{8}�\u{10}0ɽ\u{12}��\u{7}�\u{11}_��S\u{4}OTnF��l��s�2��øe}%��=c�ϔ+�����d��=��\u{13}\u{e}Oʽ\u{10}�:\u{1d}�f]�0�x�o��j�p\u{1b}\u{7}blɣ��\tR�1�=\u{7}\u{10}m�NZ\r$G�\u{1d}ieF&H�*ja\u{10}\u{1f}�h����|j��m\u{8}\u{b4bfa}�\u{5a9}\u{1d}�ėe}�З�S�\u{5c1}��_f�=��E\u{1a}�%�p\u{1}��[�u&��\u{1b}\u{730}F�jNeXs \u{1f}�\u{1a}\'\u{4}{��O��YG31XO���e\t�\u{3}\u{1d}��¶\u{15}3ȵXC�_A�������\u{10}2�\u{7f}�U�\u{1b}��\u{1c}�J�����cU�\'��\u{b}�+�GJ��{�b��\u{f}s�lI���,S:\u{6}��\u{3}h�l0�:�\'.\u{10}b\u{1a}��\u{19}k\u{6}\u{8}\u{17}w\u{18}\u{5fa}�Mq�Z_\u{18};UT�`E���~t�=��ft�q�Z��[��\u{2}����ID\u{e}��N`,n����)j���\u{14}���k���R��4�д����4_\"�t�n_�/�\u{3}I2\u{5}qEwM\u{3}�]�[�\'�\u{12}g\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\t\u{12}\u{13}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}���\u{1}\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 110, 48, 149, 105, 9, 136, 199, 195, 99, 136, 156, 143, 92, 235, 173, 142, 115, 183, 122, 77, 225, 205, 24, 213, 117, 156, 54, 250, 7, 162, 104, 94, 67, 153, 110, 120, 165, 79, 7, 246, 101, 208, 68, 187, 18, 134, 236, 111, 130, 157, 168, 120, 236, 161, 236, 121, 51, 229, 219, 174, 99, 8, 126, 79, 115, 66, 147, 76, 84, 176, 218, 163, 45, 119, 244, 85, 156, 183, 30, 151, 186, 43, 227, 108, 125, 18, 158, 22, 74, 231, 149, 105, 178, 153, 196, 20, 143, 185, 236, 35, 206, 232, 67, 199, 189, 45, 113, 137, 221, 182, 76, 92, 77, 221, 233, 28, 193, 171, 150, 209, 120, 28, 78, 228, 160, 184, 218, 2, 240, 203, 100, 153, 178, 255, 211, 3, 126, 124, 217, 95, 62, 131, 111, 13, 56, 164, 111, 109, 142, 0, 27, 73, 64, 156, 194, 93, 235, 172, 214, 11, 117, 144, 125, 87, 36, 194, 85, 106, 160, 102, 133, 118, 104, 207, 101, 174, 135, 211, 33, 94, 236, 98, 228, 44, 30, 172, 152, 192, 83, 227, 168, 44, 153, 41, 29, 189, 130, 132, 83, 66, 198, 241, 218, 194, 220, 49, 140, 81, 214, 167, 143, 120, 52, 240, 96, 172, 79, 66, 8, 29, 240, 53, 144, 159, 234, 215, 106, 150, 227, 80, 164, 12, 154, 132, 17, 61, 8, 50, 190, 37, 45, 122, 63, 85, 108, 213, 195, 8, 216, 16, 48, 201, 189, 18, 255, 228, 7, 215, 17, 95, 131, 184, 83, 4, 79, 84, 110, 70, 153, 173, 108, 141, 242, 161, 115, 252, 50, 232, 201, 195, 184, 101, 125, 37, 204, 245, 61, 99, 141, 207, 148, 43, 178, 160, 194, 251, 164, 100, 249, 199, 61, 241, 231, 19, 14, 79, 202, 189, 16, 202, 58, 29, 206, 102, 93, 142, 48, 249, 120, 151, 111, 144, 201, 106, 164, 112, 27, 7, 98, 108, 201, 163, 138, 222, 9, 82, 141, 49, 218, 61, 7, 16, 109, 232, 78, 90, 13, 36, 71, 240, 29, 105, 101, 70, 38, 72, 141, 42, 106, 97, 16, 31, 200, 104, 174, 167, 165, 161, 124, 106, 184, 156, 109, 8, 242, 180, 175, 186, 183, 214, 169, 29, 201, 196, 151, 101, 125, 161, 208, 151, 150, 83, 203, 215, 129, 143, 155, 95, 102, 206, 61, 161, 201, 69, 26, 151, 37, 135, 112, 1, 235, 210, 91, 175, 117, 38, 145, 254, 27, 220, 176, 70, 163, 106, 78, 101, 88, 115, 32, 31, 208, 26, 39, 4, 123, 142, 142, 79, 201, 231, 89, 71, 51, 49, 88, 79, 156, 169, 238, 101, 9, 176, 3, 29, 164, 249, 194, 182, 21, 51, 200, 181, 88, 67, 189, 95, 65, 184, 171, 137, 187, 217, 218, 249, 16, 50, 247, 127, 162, 85, 176, 27, 172, 174, 28, 243, 74, 157, 156, 185, 250, 219, 99, 85, 169, 39, 193, 221, 11, 157, 43, 207, 71, 74, 151, 207, 123, 216, 98, 224, 239, 15, 115, 241, 108, 73, 245, 140, 240, 44, 83, 58, 6, 149, 242, 3, 104, 165, 108, 48, 201, 58, 195, 39, 46, 16, 98, 26, 171, 178, 25, 107, 6, 8, 23, 119, 24, 215, 186, 170, 77, 113, 229, 161, 90, 95, 24, 59, 85, 84, 130, 96, 69, 208, 215, 202, 126, 116, 162, 61, 245, 208, 102, 116, 240, 113, 242, 183, 90, 163, 254, 91, 242, 188, 252, 2, 245, 206, 240, 219, 73, 68, 14, 134, 214, 78, 96, 44, 110, 147, 219, 250, 132, 41, 106, 171, 181, 135, 20, 160, 148, 159, 107, 223, 238, 243, 82, 227, 222, 52, 219, 208, 180, 135, 190, 149, 137, 52, 95, 34, 201, 116, 179, 110, 95, 184, 47, 154, 3, 73, 50, 5, 113, 69, 119, 77, 3, 151, 93, 185, 91, 250, 39, 177], auto_msg: [], init_funds: [], contract_id: "router", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 9 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [165, 201, 147, 140, 230, 115, 246, 151, 168, 84, 61, 29, 91, 227, 22, 114, 66, 20, 73, 149, 131, 166, 124, 247, 62, 177, 246, 231, 197, 234, 29, 186, 4, 68, 161, 93, 57, 185, 227, 29, 249, 96, 139, 97, 31, 153, 126, 228, 102, 106, 25, 40, 115, 95, 26, 181, 69, 166, 169, 153, 178, 22, 245, 40]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"register_tokens\":[{\"address\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\"},{\"address\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\"},{\"address\":\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\"}, {\"address\":\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\",\"code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\"}]}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] instance not found in cache. building a new one
INFO  [enclave_contract_engine::module_cache] Deserializing Wasm contract
INFO  [enclave_contract_engine::module_cache] Deserialized Wasm contract
INFO  [enclave_contract_engine::module_cache] Validating WASM memory demands
INFO  [enclave_contract_engine::module_cache] Validated WASM memory demands
INFO  [enclave_contract_engine::module_cache] Trying to create Wasmi module from parity...
INFO  [enclave_contract_engine::module_cache] Created Wasmi module from parity. Now checking for floating points...
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] storing module in cache
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{5}owner" value: "\"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\""
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [166, 125, 1, 24, 41, 4, 48, 37, 145, 219, 131, 57, 90, 117, 14, 8, 222, 8, 152, 230, 89, 135, 188, 121, 114, 157, 75, 29, 137, 238, 237, 80]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}tokens" value: "[]"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [33, 99, 218, 82, 158, 107, 202, 214, 52, 38, 6, 1, 208, 1, 167, 66, 174, 139, 154, 216, 62, 201, 19, 120, 60, 105, 138, 54, 249, 124, 2, 117]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}tokens"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [33, 99, 218, 82, 158, 107, 202, 214, 52, 38, 6, 1, 208, 1, 167, 66, 174, 139, 154, 216, 62, 201, 19, 120, 60, 105, 138, 54, 249, 124, 2, 117]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 2: '[91, 93]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}tokens" value: "[\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\"]"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [33, 99, 218, 82, 158, 107, 202, 214, 52, 38, 6, 1, 208, 1, 167, 66, 174, 139, 154, 216, 62, 201, 19, 120, 60, 105, 138, 54, 249, 124, 2, 117]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6ImE1YThhZjdjOTllNTUyMTY1OWJmMTNlYWM5MzA3YmEzZTRkM2I4MmIxNDk5MDIxY2RmY2FkMDA1Yzk4OWRlNzAiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6ImE1YThhZjdjOTllNTUyMTY1OWJmMTNlYWM5MzA3YmEzZTRkM2I4MmIxNDk5MDIxY2RmY2FkMDA1Yzk4OWRlNzAiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6ImE1YThhZjdjOTllNTUyMTY1OWJmMTNlYWM5MzA3YmEzZTRkM2I4MmIxNDk5MDIxY2RmY2FkMDA1Yzk4OWRlNzAiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6ImE1YThhZjdjOTllNTUyMTY1OWJmMTNlYWM5MzA3YmEzZTRkM2I4MmIxNDk5MDIxY2RmY2FkMDA1Yzk4OWRlNzAiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\",\"callback_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}}],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40] }
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [Wasm(Execute { contract_addr: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63]), send: [], callback_sig: Some([187, 125, 169, 172, 134, 191, 189, 202, 88, 25, 216, 221, 26, 217, 82, 30, 65, 168, 201, 210, 59, 161, 150, 92, 6, 2, 151, 94, 223, 2, 166, 138]) }), Wasm(Execute { contract_addr: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40]), send: [], callback_sig: Some([244, 130, 132, 154, 26, 187, 144, 99, 33, 217, 243, 48, 88, 200, 198, 10, 140, 203, 205, 247, 182, 161, 197, 203, 14, 137, 218, 69, 42, 39, 70, 205]) }), Wasm(Execute { contract_addr: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63]), send: [], callback_sig: Some([187, 125, 169, 172, 134, 191, 189, 202, 88, 25, 216, 221, 26, 217, 82, 30, 65, 168, 201, 210, 59, 161, 150, 92, 6, 2, 151, 94, 223, 2, 166, 138]) }), Wasm(Execute { contract_addr: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40]), send: [], callback_sig: Some([244, 130, 132, 154, 26, 187, 144, 99, 33, 217, 243, 48, 88, 200, 198, 10, 140, 203, 205, 247, 182, 161, 197, 203, 14, 137, 218, 69, 42, 39, 70, 205]) }), Wasm(Execute { contract_addr: HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63]), send: [], callback_sig: Some([187, 125, 169, 172, 134, 191, 189, 202, 88, 25, 216, 221, 26, 217, 82, 30, 65, 168, 201, 210, 59, 161, 150, 92, 6, 2, 151, 94, 223, 2, 166, 138]) }), Wasm(Execute { contract_addr: HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40]), send: [], callback_sig: Some([244, 130, 132, 154, 26, 187, 144, 99, 33, 217, 243, 48, 88, 200, 198, 10, 140, 203, 205, 247, 182, 161, 197, 203, 14, 137, 218, 69, 42, 39, 70, 205]) }), Wasm(Execute { contract_addr: HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63]), send: [], callback_sig: Some([187, 125, 169, 172, 134, 191, 189, 202, 88, 25, 216, 221, 26, 217, 82, 30, 65, 168, 201, 210, 59, 161, 150, 92, 6, 2, 151, 94, 223, 2, 166, 138]) }), Wasm(Execute { contract_addr: HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"), callback_code_hash: "4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86", msg: Binary([16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 49, 204, 228, 211, 213, 191, 191, 43, 29, 82, 140, 225, 124, 146, 97, 204, 118, 76, 208, 1, 133, 242, 199, 177, 249, 147, 13, 123, 36, 167, 109, 39, 212, 181, 198, 215, 168, 33, 210, 250, 40, 61, 33, 19, 106, 77, 18, 62, 217, 165, 182, 187, 205, 67, 109, 189, 109, 106, 182, 235, 17, 97, 83, 28, 28, 45, 36, 54, 87, 167, 241, 93, 233, 234, 251, 187, 133, 79, 41, 145, 255, 175, 89, 74, 13, 207, 50, 166, 84, 236, 29, 83, 66, 79, 230, 146, 194, 138, 134, 242, 132, 150, 31, 107, 248, 216, 137, 91, 13, 104, 150, 70, 155, 164, 139, 209, 53, 36, 57, 119, 117, 84, 76, 124, 25, 13, 242, 16, 56, 188, 105, 240, 77, 122, 203, 90, 93, 138, 172, 228, 197, 159, 128, 71, 245, 198, 78, 116, 146, 5, 115, 123, 155, 197, 238, 100, 170, 78, 13, 59, 129, 168, 1, 56, 228, 197, 206, 0, 188, 193, 209, 98, 205, 64, 173, 88, 27, 124, 71, 243, 3, 155, 174, 222, 34, 86, 144, 121, 169, 176, 1, 191, 133, 107, 146, 74, 72, 235, 162, 170, 239, 228, 10, 45, 178, 93, 124, 164, 113, 179, 201, 85, 137, 59, 145, 37, 137, 221, 149, 83, 187, 163, 224, 6, 99, 157, 161, 176, 173, 79, 110, 202, 52, 163, 210, 114, 224, 19, 171, 43, 51, 143, 242, 121, 14, 241, 223, 209, 218, 83, 112, 169, 102, 225, 11, 237, 12, 76, 162, 247, 92, 206, 205, 114, 49, 33, 12, 134, 123, 196, 220, 17, 45, 140, 60, 102, 63, 225, 104, 115, 24, 246, 183, 155, 129, 96, 58, 178, 20, 178, 150, 98, 43, 82, 40, 95, 119, 211, 81, 111, 203, 56, 80, 28, 119, 125, 80, 187, 43, 175, 245, 120, 195, 57, 121, 93, 180, 28, 83, 232, 5, 197, 99, 248, 121, 243, 211, 76, 187, 6, 29, 244, 230, 84, 226, 40]), send: [], callback_sig: Some([244, 130, 132, 154, 26, 187, 144, 99, 33, 217, 243, 48, 88, 200, 198, 10, 140, 203, 205, 247, 182, 161, 197, 203, 14, 137, 218, 69, 42, 39, 70, 205]) })], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 84, time: 1656758841, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm") }, contract_key: Some("jwuniywxmBPpZS5Vx7Ded8Rwrf25hNsYg/GQWLLK8RzBqiRdvpDmfRMfkz1OxaUinoHN7CwSy1mYBmT7rTOzGA=="), contract_code_hash: "4b8d886759d5905d55ee40e2f64fb4ab5a6dd05d52290c28e7e40b5fe2501a86" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "EK1BYIOE2GIw6e2NF/5GgvPKwjO6tG6UwJNxMgrrKGdmIb5+pzf7SjrtTsA+UTrRvWe/UfrwRgeW5GuAbMGPVsbOY+wyxBirD9BjXnIUxVfFrRMc8ymyJqNEGs5kV+M7UnXTl1WbbF8FsJU4iKesT1/0AAHNCZU7fSHW7/CI3E3eQZxxe6AYJ7f28v2tDiJYU5rtvu/7mN0ONF4noKgtOeGR9WHxXYo/yWQzI+F5cYLxgFJo1SvCcT7LSxkKS1BlQ3+Tahuh3ZNgSJA/v1UEEvzbHvktoL2OvvmfT5sRQTM49HerVdNNu7hNXTe3dAGcIBlYebDURfFVsL9JNOZVW4481l/YQsKJU63sZSGmwLAPQrOgLhwvHyZxNGuU93Of4JE+A9qPiPnjqlYWpo85xgdguIzGGaV3g18YRGMqtDpNlgFHNcv2+KD9SJyuQ5h9o6ZlbHJ2p+8XiDOZDqVPFYnVJxKUd94BIkjCfNRaAZB4KlIxTzZAcD3NQlUxi5Zltzl8DY+LT5zbx+yTCdSbPw=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([187, 125, 169, 172, 134, 191, 189, 202, 88, 25, 216, 221, 26, 217, 82, 30, 65, 168, 201, 210, 59, 161, 150, 92, 6, 2, 151, 94, 223, 2, 166, 138])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103], user_public_key: [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86], msg: [198, 206, 99, 236, 50, 196, 24, 171, 15, 208, 99, 94, 114, 20, 197, 87, 197, 173, 19, 28, 243, 41, 178, 38, 163, 68, 26, 206, 100, 87, 227, 59, 82, 117, 211, 151, 85, 155, 108, 95, 5, 176, 149, 56, 136, 167, 172, 79, 95, 244, 0, 1, 205, 9, 149, 59, 125, 33, 214, 239, 240, 136, 220, 77, 222, 65, 156, 113, 123, 160, 24, 39, 183, 246, 242, 253, 173, 14, 34, 88, 83, 154, 237, 190, 239, 251, 152, 221, 14, 52, 94, 39, 160, 168, 45, 57, 225, 145, 245, 97, 241, 93, 138, 63, 201, 100, 51, 35, 225, 121, 113, 130, 241, 128, 82, 104, 213, 43, 194, 113, 62, 203, 75, 25, 10, 75, 80, 101, 67, 127, 147, 106, 27, 161, 221, 147, 96, 72, 144, 63, 191, 85, 4, 18, 252, 219, 30, 249, 45, 160, 189, 142, 190, 249, 159, 79, 155, 17, 65, 51, 56, 244, 119, 171, 85, 211, 77, 187, 184, 77, 93, 55, 183, 116, 1, 156, 32, 25, 88, 121, 176, 212, 69, 241, 85, 176, 191, 73, 52, 230, 85, 91, 142, 60, 214, 95, 216, 66, 194, 137, 83, 173, 236, 101, 33, 166, 192, 176, 15, 66, 179, 160, 46, 28, 47, 31, 38, 113, 52, 107, 148, 247, 115, 159, 224, 145, 62, 3, 218, 143, 136, 249, 227, 170, 86, 22, 166, 143, 57, 198, 7, 96, 184, 140, 198, 25, 165, 119, 131, 95, 24, 68, 99, 42, 180, 58, 77, 150, 1, 71, 53, 203, 246, 248, 160, 253, 72, 156, 174, 67, 152, 125, 163, 166, 101, 108, 114, 118, 167, 239, 23, 136, 51, 153, 14, 165, 79, 21, 137, 213, 39, 18, 148, 119, 222, 1, 34, 72, 194, 124, 212, 90, 1, 144, 120, 42, 82, 49, 79, 54, 64, 112, 61, 205, 66, 85, 49, 139, 150, 101, 183, 57, 124, 13, 143, 139, 79, 156, 219, 199, 236, 147, 9, 212, 155, 63] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"register_receive\":{\"code_hash\":\"a5a8af7c99e5521659bf13eac9307ba3e4d3b82b1499021cdfcad005c989de70\",\"padding\":null}}                                                                                                                                            "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "8f0ba78b2c319813e9652e55c7b0de77c470adfdb984db1883f19058b2caf11cc1aa245dbe90e67d131f933d4ec5a5229e81cdec2c12cb59980664fbad33b318"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [202, 24, 203, 29, 138, 89, 136, 243, 140, 100, 81, 42, 215, 70, 250, 202, 164, 62, 136, 215, 77, 56, 19, 246, 69, 155, 169, 135, 134, 5, 59, 116]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\treceiverstrust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e" value: "a5a8af7c99e5521659bf13eac9307ba3e4d3b82b1499021cdfcad005c989de70"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [27, 65, 132, 124, 242, 4, 80, 73, 255, 229, 217, 120, 18, 94, 206, 19, 197, 161, 222, 5, 169, 119, 140, 225, 44, 1, 90, 159, 164, 14, 139, 103]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [16, 173, 65, 96, 131, 132, 216, 98, 48, 233, 237, 141, 23, 254, 70, 130, 243, 202, 194, 51, 186, 180, 110, 148, 192, 147, 113, 50, 10, 235, 40, 103] pubkey = [102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [57, 75, 195, 27, 161, 140, 129, 56, 233, 245, 41, 154, 54, 100, 131, 244, 48, 194, 196, 125, 37, 185, 173, 51, 27, 194, 118, 124, 24, 2, 11, 49]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"register_status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_addr\":null,\"encrypted\":true}],\"data\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7InN0YXR1cyI6InN1Y2Nlc3MifX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
WARN  [enclave_contract_engine::io] got an error while trying to deserialize output bytes into json
TRACE  [enclave_contract_engine::io] output: [123, 34, 79, 107, 34, 58, 123, 34, 109, 101, 115, 115, 97, 103, 101, 115, 34, 58, 91, 93, 44, 34, 108, 111, 103, 34, 58, 91, 123, 34, 107, 101, 121, 34, 58, 34, 114, 101, 103, 105, 115, 116, 101, 114, 95, 115, 116, 97, 116, 117, 115, 34, 44, 34, 118, 97, 108, 117, 101, 34, 58, 91, 49, 49, 53, 44, 49, 49, 55, 44, 57, 57, 44, 57, 57, 44, 49, 48, 49, 44, 49, 49, 53, 44, 49, 49, 53, 93, 44, 34, 112, 117, 98, 95, 100, 98, 34, 58, 102, 97, 108, 115, 101, 44, 34, 97, 99, 99, 95, 97, 100, 100, 114, 34, 58, 110, 117, 108, 108, 44, 34, 101, 110, 99, 114, 121, 112, 116, 101, 100, 34, 58, 116, 114, 117, 101, 125, 93, 44, 34, 100, 97, 116, 97, 34, 58, 34, 101, 121, 74, 121, 90, 87, 100, 112, 99, 51, 82, 108, 99, 108, 57, 121, 90, 87, 78, 108, 97, 88, 90, 108, 73, 106, 112, 55, 73, 110, 78, 48, 89, 88, 82, 49, 99, 121, 73, 54, 73, 110, 78, 49, 89, 50, 78, 108, 99, 51, 77, 105, 102, 88, 48, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 67, 65, 103, 73, 65, 61, 61, 34, 125, 125] error: Error("data did not match any variant of untagged enum WasmOutput", line: 0, column: 0)
error dispatching messages 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [113 76 44 106 219 196 197 57 135 160 75 94 35 95 69 94 78 249 69 114 145 84 34 210 18 11 127 140 102 60 177 179] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "695e6e04c35270ffe25b5bc4821996c2cf9a883a676b7f7ad813c81ea8316ea4f748fc268d44ee52c84ff6013358fef396e6de50013fbd768b9a6e8b9e317159"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "cBWOt0Ae0QtVPVKI394uiMysixOtxXWnWigGDskCcVxmIb5+pzf7SjrtTsA+UTrRvWe/UfrwRgeW5GuAbMGPVlI2bhJrtJxmwC8rvc1ClaiS9KtYHG73cab6Z4OXG9jObPYRXvdapfFv1ahsTFNodmT6TYj5AKhNOxq3SbwKXack7cSdmQg8E6u62zRztiXaCqExfsJ/51s8FcVPbITTWjYc+/r7CZwU2hsoj1OHza87CVVO8R0LYVakVzH4m4tUhivV6IPvCx79xBY19u2nenggZ2EqXS6FUIxH9u9yxt4eh7y3T+DzpyPtxVBcoY9CgoEsITi6oTJFGOQ7hkD2qybyQ9wDK580kOeicL9UbfsloSNp7MYJDHEZL/NETxqaU0TFPaUxK8QHLEErZFcZgZFTZqJd1f2uYLVv0U89Fbbgm4Aw7BwBRvMZI3YeLXT6svzfqUNx95GfSM9xKLXSw8UkymexC7htzBiEjRx5aVmVBUlBnyN9ADs="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [112, 21, 142, 183, 64, 30, 209, 11, 85, 61, 82, 136, 223, 222, 46, 136, 204, 172, 139, 19, 173, 197, 117, 167, 90, 40, 6, 14, 201, 2, 113, 92] pubkey = "6621be7ea737fb4a3aed4ec03e513ad1bd67bf51faf0460796e46b806cc18f56"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 236, 3, 10, 233, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 182, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 2, 34, 8, 66, 97, 99, 107, 83, 119, 97, 112, 42, 249, 2, 112, 21, 142, 183, 64, 30, 209, 11, 85, 61, 82, 136, 223, 222, 46, 136, 204, 172, 139, 19, 173, 197, 117, 167, 90, 40, 6, 14, 201, 2, 113, 92, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 82, 54, 110, 18, 107, 180, 156, 102, 192, 47, 43, 189, 205, 66, 149, 168, 146, 244, 171, 88, 28, 110, 247, 113, 166, 250, 103, 131, 151, 27, 216, 206, 108, 246, 17, 94, 247, 90, 165, 241, 111, 213, 168, 108, 76, 83, 104, 118, 100, 250, 77, 136, 249, 0, 168, 77, 59, 26, 183, 73, 188, 10, 93, 167, 36, 237, 196, 157, 153, 8, 60, 19, 171, 186, 219, 52, 115, 182, 37, 218, 10, 161, 49, 126, 194, 127, 231, 91, 60, 21, 197, 79, 108, 132, 211, 90, 54, 28, 251, 250, 251, 9, 156, 20, 218, 27, 40, 143, 83, 135, 205, 175, 59, 9, 85, 78, 241, 29, 11, 97, 86, 164, 87, 49, 248, 155, 139, 84, 134, 43, 213, 232, 131, 239, 11, 30, 253, 196, 22, 53, 246, 237, 167, 122, 120, 32, 103, 97, 42, 93, 46, 133, 80, 140, 71, 246, 239, 114, 198, 222, 30, 135, 188, 183, 79, 224, 243, 167, 35, 237, 197, 80, 92, 161, 143, 66, 130, 129, 44, 33, 56, 186, 161, 50, 69, 24, 228, 59, 134, 64, 246, 171, 38, 242, 67, 220, 3, 43, 159, 52, 144, 231, 162, 112, 191, 84, 109, 251, 37, 161, 35, 105, 236, 198, 9, 12, 113, 25, 47, 243, 68, 79, 26, 154, 83, 68, 197, 61, 165, 49, 43, 196, 7, 44, 65, 43, 100, 87, 25, 129, 145, 83, 102, 162, 93, 213, 253, 174, 96, 181, 111, 209, 79, 61, 21, 182, 224, 155, 128, 48, 236, 28, 1, 70, 243, 25, 35, 118, 30, 45, 116, 250, 178, 252, 223, 169, 67, 113, 247, 145, 159, 72, 207, 113, 40, 181, 210, 195, 197, 36, 202, 103, 177, 11, 184, 109, 204, 24, 132, 141, 28, 121, 105, 89, 149, 5, 73, 65, 159, 35, 125, 0, 59, 18, 103, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 10, 18, 19, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 55, 48, 48, 16, 192, 141, 183, 1, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 41, 246, 92, 133, 110, 238, 51, 1, 190, 8, 190, 24, 30, 118, 170, 25, 159, 82, 68, 241, 184, 155, 52, 123, 38, 72, 7, 234, 207, 191, 201, 16, 82, 211, 70, 21, 129, 151, 241, 6, 111, 105, 20, 125, 46, 136, 152, 144, 100, 59, 206, 200, 131, 193, 251, 181, 255, 244, 36, 140, 98, 247, 51, 186]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([41, 246, 92, 133, 110, 238, 51, 1, 190, 8, 190, 24, 30, 118, 170, 25, 159, 82, 68, 241, 184, 155, 52, 123, 38, 72, 7, 234, 207, 191, 201, 16, 82, 211, 70, 21, 129, 151, 241, 6, 111, 105, 20, 125, 46, 136, 152, 144, 100, 59, 206, 200, 131, 193, 251, 181, 255, 244, 36, 140, 98, 247, 51, 186]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{2}\"\u{8}BackSwap*�\u{2}p\u{15}��@\u{1e}�\u{b}U=R���.�\u{32c}�\u{13}��u�Z(\u{6}\u{e}�\u{2}q\\f!�~�7�J:�N�>Q:ѽg�Q��F\u{7}��k�l��VR6n\u{12}k��f�/+��B�����X\u{1c}n�q��g��\u{1b}��l�\u{11}^�Z��oըlLShvd�M��\u{0}�M;\u{1a}�I�\n]�$�ĝ�\u{8}<\u{13}���4s�%�\n�1~�\u{7f}�[<\u{15}�Ol��Z6\u{1c}���\t�\u{14}�\u{1b}(�S�\u{36f};\tUN�\u{1d}\u{b}aV�W1���T�+���\u{b}\u{1e}��\u{16}5���zx ga*].�P�G��r��\u{1e}���O��#��P\\��B��,!8��2E\u{18}�;�@��&�C�\u{3}+�4��p�Tm�%�#i��\t\u{c}q\u{19}/�DO\u{1a}�SD�=�1+�\u{7},A+dW\u{19}��Sf�]���`�o�O=\u{15}����0�\u{1c}\u{1}F�\u{19}#v\u{1e}-t���ߩCq���H�q(����$�g�\u{b}�m�\u{18}��\u{1c}yiY�\u{5}IA�#}\u{0};\u{12}g\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\n\u{12}\u{13}\n\u{c}\n\u{5}utrst\u{12}\u{3}700\u{10}���\u{1}\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [112, 21, 142, 183, 64, 30, 209, 11, 85, 61, 82, 136, 223, 222, 46, 136, 204, 172, 139, 19, 173, 197, 117, 167, 90, 40, 6, 14, 201, 2, 113, 92, 102, 33, 190, 126, 167, 55, 251, 74, 58, 237, 78, 192, 62, 81, 58, 209, 189, 103, 191, 81, 250, 240, 70, 7, 150, 228, 107, 128, 108, 193, 143, 86, 82, 54, 110, 18, 107, 180, 156, 102, 192, 47, 43, 189, 205, 66, 149, 168, 146, 244, 171, 88, 28, 110, 247, 113, 166, 250, 103, 131, 151, 27, 216, 206, 108, 246, 17, 94, 247, 90, 165, 241, 111, 213, 168, 108, 76, 83, 104, 118, 100, 250, 77, 136, 249, 0, 168, 77, 59, 26, 183, 73, 188, 10, 93, 167, 36, 237, 196, 157, 153, 8, 60, 19, 171, 186, 219, 52, 115, 182, 37, 218, 10, 161, 49, 126, 194, 127, 231, 91, 60, 21, 197, 79, 108, 132, 211, 90, 54, 28, 251, 250, 251, 9, 156, 20, 218, 27, 40, 143, 83, 135, 205, 175, 59, 9, 85, 78, 241, 29, 11, 97, 86, 164, 87, 49, 248, 155, 139, 84, 134, 43, 213, 232, 131, 239, 11, 30, 253, 196, 22, 53, 246, 237, 167, 122, 120, 32, 103, 97, 42, 93, 46, 133, 80, 140, 71, 246, 239, 114, 198, 222, 30, 135, 188, 183, 79, 224, 243, 167, 35, 237, 197, 80, 92, 161, 143, 66, 130, 129, 44, 33, 56, 186, 161, 50, 69, 24, 228, 59, 134, 64, 246, 171, 38, 242, 67, 220, 3, 43, 159, 52, 144, 231, 162, 112, 191, 84, 109, 251, 37, 161, 35, 105, 236, 198, 9, 12, 113, 25, 47, 243, 68, 79, 26, 154, 83, 68, 197, 61, 165, 49, 43, 196, 7, 44, 65, 43, 100, 87, 25, 129, 145, 83, 102, 162, 93, 213, 253, 174, 96, 181, 111, 209, 79, 61, 21, 182, 224, 155, 128, 48, 236, 28, 1, 70, 243, 25, 35, 118, 30, 45, 116, 250, 178, 252, 223, 169, 67, 113, 247, 145, 159, 72, 207, 113, 40, 181, 210, 195, 197, 36, 202, 103, 177, 11, 184, 109, 204, 24, 132, 141, 28, 121, 105, 89, 149, 5, 73, 65, 159, 35, 125, 0, 59], auto_msg: [], init_funds: [], contract_id: "BackSwap", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 10 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [41, 246, 92, 133, 110, 238, 51, 1, 190, 8, 190, 24, 30, 118, 170, 25, 159, 82, 68, 241, 184, 155, 52, 123, 38, 72, 7, 234, 207, 191, 201, 16, 82, 211, 70, 21, 129, 151, 241, 6, 111, 105, 20, 125, 46, 136, 152, 144, 100, 59, 206, 200, 131, 193, 251, 181, 255, 244, 36, 140, 98, 247, 51, 186]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [195, 117, 103, 137, 166, 12, 123, 85, 111, 193, 49, 185, 28, 36, 47, 144, 185, 254, 123, 234, 91, 217, 15, 122, 237, 208, 155, 74, 103, 4, 42, 244]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"pair_code_id\": 3, \"pair_code_hash\": \"0203F4B96D05661DCB8376E81CFEAEB4BE8AE81C03CACCF68860BE06F31CB68A\", \"token_code_id\": 1, \"token_code_hash\": \"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\", \"prng_seed\": \"YWE=\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] instance not found in cache. building a new one
INFO  [enclave_contract_engine::module_cache] Deserializing Wasm contract
INFO  [enclave_contract_engine::module_cache] Deserialized Wasm contract
INFO  [enclave_contract_engine::module_cache] Validating WASM memory demands
INFO  [enclave_contract_engine::module_cache] Validated WASM memory demands
INFO  [enclave_contract_engine::module_cache] Trying to create Wasmi module from parity...
INFO  [enclave_contract_engine::module_cache] Created Wasmi module from parity. Now checking for floating points...
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] storing module in cache
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1ym5m5dw7pttft5w430nxx6uat8f84ck45zkwrt"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}config" value: "{\"owner\":\"Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\",\"pair_code_id\":3,\"token_code_id\":1,\"token_code_hash\":\"4B8D886759D5905D55EE40E2F64FB4AB5A6DD05D52290C28E7E40B5FE2501A86\",\"pair_code_hash\":\"0203F4B96D05661DCB8376E81CFEAEB4BE8AE81C03CACCF68860BE06F31CB68A\",\"prng_seed\":[150,27,109,211,237,227,203,142,203,170,203,214,141,224,64,205,120,235,46,213,136,145,48,204,235,76,73,38,142,164,213,6],\"pair_settings\":{\"swap_fee\":{\"commission_rate_nom\":\"3\",\"commission_rate_denom\":\"1000\"}}}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [220, 165, 225, 4, 87, 192, 147, 100, 194, 226, 254, 182, 169, 152, 83, 66, 249, 40, 106, 81, 212, 229, 82, 145, 199, 87, 141, 216, 47, 104, 31, 52]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [195, 117, 103, 137, 166, 12, 123, 85, 111, 193, 49, 185, 28, 36, 47, 144, 185, 254, 123, 234, 91, 217, 15, 122, 237, 208, 155, 74, 103, 4, 42, 244]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_addr\":null,\"encrypted\":true}]}}"
WARN  [enclave_contract_engine::io] got an error while trying to deserialize output bytes into json
TRACE  [enclave_contract_engine::io] output: [123, 34, 79, 107, 34, 58, 123, 34, 109, 101, 115, 115, 97, 103, 101, 115, 34, 58, 91, 93, 44, 34, 108, 111, 103, 34, 58, 91, 123, 34, 107, 101, 121, 34, 58, 34, 115, 116, 97, 116, 117, 115, 34, 44, 34, 118, 97, 108, 117, 101, 34, 58, 91, 49, 49, 53, 44, 49, 49, 55, 44, 57, 57, 44, 57, 57, 44, 49, 48, 49, 44, 49, 49, 53, 44, 49, 49, 53, 93, 44, 34, 112, 117, 98, 95, 100, 98, 34, 58, 102, 97, 108, 115, 101, 44, 34, 97, 99, 99, 95, 97, 100, 100, 114, 34, 58, 110, 117, 108, 108, 44, 34, 101, 110, 99, 114, 121, 112, 116, 101, 100, 34, 58, 116, 114, 117, 101, 125, 93, 125, 125] error: Error("data did not match any variant of untagged enum WasmOutput", line: 0, column: 0)
