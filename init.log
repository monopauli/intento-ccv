Module: 
mintModule addr: trust1m3h30wlvsf8llruxtpukdvsy0km2kum8pvednr 
Module: 
computeModule addr: trust1kp9p9ajg863y5urtl5xpqxt6dp75u4yxeegmg8 
Module: 
fee_collectorModule addr: trust17xpfvakm2amg962yls6f84z3kell8c5leya4l7 
Module: 
bonded_tokens_poolModule addr: trust1fl48vsnmsdzcv85q5d2q4z5ajdha8yu3uxh6d5 
Module: 
not_bonded_tokens_poolModule addr: trust1tygms3xhhs3yv487phx3dw4a95jn7t7lgxttmq 
Module: 
govModule addr: trust10d07y265gmmuvt4z0w9aw880jnsr700jnldszs 
Module: 
transferModule addr: trust1yl6hdjhmkf37639730gffanpzndzdpmh8zgurq 
Module: 
claimModule addr: trust1m5dncvfv7lvpvycr23zja93fecun2kcvtvhda3 
Module: 
allocModule addr: trust1hnfmrp9k0lmepmt0rsktkjj4aqh3w40m9qy4ay 
Module: 
distributionModule addr: trust1jv65s3grqf6v6jl3dp4t6c9t9rk99cd8wz6fau 
2022-07-02 12:10:54,580 INFO  [cosmwasm_sgx_vm::enclave] Setting up enclave doorbell for up to 8 threads
DEBUG  [enclave_contract_engine::external::ecalls] inside ecall_configure_runtime: 5
DEBUG  [enclave_contract_engine::module_cache] configuring module cache: 5
2022-07-02 12:11:12,446 INFO  [cosmwasm_sgx_vm::enclave] Setting up enclave doorbell for up to 4 threads
Initializing claims genesis...
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [227 45 16 143 248 127 82 54 78 224 230 183 242 118 120 183 97 40 64 249 30 169 246 3 124 115 209 111 107 21 46 226] 
TRACE  [enclave_crypto::key_manager] consensus_seed_exchange_keypair: "e8419dca2373919fb0ecd5eaa48344b2a446f92eb4143c4dd527bdec83c3d66f"
TRACE  [enclave_crypto::key_manager] consensus_io_exchange_keypair: "14bd47b5e8347bbcc6facdcaa6c3b22000956bc1aaf2863297d13ce13ca88f02"
TRACE  [enclave_crypto::key_manager] consensus_state_ikm: "9e92a667d269a622ae8cf9e2a00b23b0d4ebef40236e7ed1934c7ae1eb8bb39e"
TRACE  [enclave_crypto::key_manager] consensus_state_ikm: "9e92a667d269a622ae8cf9e2a00b23b0d4ebef40236e7ed1934c7ae1eb8bb39e"
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "d5d94245c777c7fb21581caf65a1977e8cd8950c1a86f28fa090e6aad56b9d6efa640074a1933e9000220de036a12f3153deb457bc0270358df8c446a161fd33"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "DTQIy0ThbW3MY40FTnReab9nYqNq63f/2P5v6Tlezh3EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYQXRqeDIVmdoKTwuDg0nrE4Y5KhD8MS6GTpEX6VfYXmYRYIe83TwnRxw8wndbqqASP5JfjkiVM6NifGfde/Fbm/PqP3UTB9DJJtX4IDzEqV5jlU/fpp0PPoMfv0qniUxmiZlrfAcX61k/RL7xGAnrFNEbB2X46Rle3PMs7WZbDJCKpyf/GPB8Anb7+bEC89kANFo3OymCrJsBJSTWJ2zmISKAbkuQxUz1UOXRInhILRw6HBTRUMfeKxFwrYit57WcHeqhatLerJEfQ8AwoDHTPNDoY7uy62LLYiK6ju/FUTbV/1RkO/MLzifneXVYW1Un8J78plDYyUddDRpGfwJ8hIMvlbFUk3gPbtF+9y9JRFZYNc+OZ5vaghqHCqiLpHOZ8PQB9aEliM7RukI9eht5WG5ey9LYaXBRU70elpNSr5yhtfZm1rSTBMP"
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [13, 52, 8, 203, 68, 225, 109, 109, 204, 99, 141, 5, 78, 116, 94, 105, 191, 103, 98, 163, 106, 235, 119, 255, 216, 254, 111, 233, 57, 94, 206, 29] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 248, 3, 10, 245, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 194, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 4, 112, 69, 84, 72, 42, 137, 3, 13, 52, 8, 203, 68, 225, 109, 109, 204, 99, 141, 5, 78, 116, 94, 105, 191, 103, 98, 163, 106, 235, 119, 255, 216, 254, 111, 233, 57, 94, 206, 29, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 5, 209, 169, 224, 200, 86, 103, 104, 41, 60, 46, 14, 13, 39, 172, 78, 24, 228, 168, 67, 240, 196, 186, 25, 58, 68, 95, 165, 95, 97, 121, 152, 69, 130, 30, 243, 116, 240, 157, 28, 112, 243, 9, 221, 110, 170, 128, 72, 254, 73, 126, 57, 34, 84, 206, 141, 137, 241, 159, 117, 239, 197, 110, 111, 207, 168, 253, 212, 76, 31, 67, 36, 155, 87, 224, 128, 243, 18, 165, 121, 142, 85, 63, 126, 154, 116, 60, 250, 12, 126, 253, 42, 158, 37, 49, 154, 38, 101, 173, 240, 28, 95, 173, 100, 253, 18, 251, 196, 96, 39, 172, 83, 68, 108, 29, 151, 227, 164, 101, 123, 115, 204, 179, 181, 153, 108, 50, 66, 42, 156, 159, 252, 99, 193, 240, 9, 219, 239, 230, 196, 11, 207, 100, 0, 209, 104, 220, 236, 166, 10, 178, 108, 4, 148, 147, 88, 157, 179, 152, 132, 138, 1, 185, 46, 67, 21, 51, 213, 67, 151, 68, 137, 225, 32, 180, 112, 232, 112, 83, 69, 67, 31, 120, 172, 69, 194, 182, 34, 183, 158, 214, 112, 119, 170, 133, 171, 75, 122, 178, 68, 125, 15, 0, 194, 128, 199, 76, 243, 67, 161, 142, 238, 203, 173, 139, 45, 136, 138, 234, 59, 191, 21, 68, 219, 87, 253, 81, 144, 239, 204, 47, 56, 159, 157, 229, 213, 97, 109, 84, 159, 194, 123, 242, 153, 67, 99, 37, 29, 116, 52, 105, 25, 252, 9, 242, 18, 12, 190, 86, 197, 82, 77, 224, 61, 187, 69, 251, 220, 189, 37, 17, 89, 96, 215, 62, 57, 158, 111, 106, 8, 106, 28, 42, 162, 46, 145, 206, 103, 195, 208, 7, 214, 132, 150, 35, 59, 70, 233, 8, 245, 232, 109, 229, 97, 185, 123, 47, 75, 97, 165, 193, 69, 78, 244, 122, 90, 77, 74, 190, 114, 134, 215, 217, 155, 90, 210, 76, 19, 15, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 5, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 182, 224, 164, 173, 82, 52, 87, 83, 174, 237, 171, 66, 248, 57, 215, 87, 90, 81, 125, 171, 77, 37, 176, 172, 142, 66, 216, 34, 168, 12, 22, 212, 56, 252, 103, 57, 214, 138, 89, 130, 223, 28, 36, 94, 253, 92, 199, 43, 56, 254, 150, 182, 38, 111, 203, 23, 119, 12, 229, 182, 37, 103, 50, 33]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([182, 224, 164, 173, 82, 52, 87, 83, 174, 237, 171, 66, 248, 57, 215, 87, 90, 81, 125, 171, 77, 37, 176, 172, 142, 66, 216, 34, 168, 12, 22, 212, 56, 252, 103, 57, 214, 138, 89, 130, 223, 28, 36, 94, 253, 92, 199, 43, 56, 254, 150, 182, 38, 111, 203, 23, 119, 12, 229, 182, 37, 103, 50, 33]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{4}pETH*�\u{3}\r4\u{8}�D�mm�c�\u{5}Nt^i�gb�j�w���o�9^�\u{1d}�:sdY�\nXWsb�Il\u{2}n���&��\u{3} �\u{c}�=S��a\u{5}ѩ��Vgh)<.\u{e}\r\'�N\u{18}�C�ĺ\u{19}:D_�_ay�E�\u{1e}�t�\u{1c}p�\t�n��H�I~9\"T\u{38d}��u��noϨ��L\u{1f}C$�W���\u{12}�y�U?~�t<�\u{c}~�*�%1�&e��\u{1c}_�d�\u{12}��`\'�SDl\u{1d}��e{s\u{333}��l2B*���c��\t����\u{b}�d\u{0}�h��\n�l\u{4}��X�����\u{1}�.C\u{15}3�C�D�� �p�pSEC\u{1f}x�E¶\"���pw���Kz�D}\u{f}\u{0}\u{80}�L�C���˭�-���;�\u{15}D�W�Q���/8����amT��{�Cc%\u{1d}t4i\u{19}�\t�\u{12}\u{c}�V�RM�=�E�\u{73d}%\u{11}Y`�>9�oj\u{8}j\u{1c}*�.��g��\u{7}ք�#;F�\u{8}��m�a�{/Ka��EN�zZMJ�r��\u{65b}Z�L\u{13}\u{f}\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{5}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [13, 52, 8, 203, 68, 225, 109, 109, 204, 99, 141, 5, 78, 116, 94, 105, 191, 103, 98, 163, 106, 235, 119, 255, 216, 254, 111, 233, 57, 94, 206, 29, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 5, 209, 169, 224, 200, 86, 103, 104, 41, 60, 46, 14, 13, 39, 172, 78, 24, 228, 168, 67, 240, 196, 186, 25, 58, 68, 95, 165, 95, 97, 121, 152, 69, 130, 30, 243, 116, 240, 157, 28, 112, 243, 9, 221, 110, 170, 128, 72, 254, 73, 126, 57, 34, 84, 206, 141, 137, 241, 159, 117, 239, 197, 110, 111, 207, 168, 253, 212, 76, 31, 67, 36, 155, 87, 224, 128, 243, 18, 165, 121, 142, 85, 63, 126, 154, 116, 60, 250, 12, 126, 253, 42, 158, 37, 49, 154, 38, 101, 173, 240, 28, 95, 173, 100, 253, 18, 251, 196, 96, 39, 172, 83, 68, 108, 29, 151, 227, 164, 101, 123, 115, 204, 179, 181, 153, 108, 50, 66, 42, 156, 159, 252, 99, 193, 240, 9, 219, 239, 230, 196, 11, 207, 100, 0, 209, 104, 220, 236, 166, 10, 178, 108, 4, 148, 147, 88, 157, 179, 152, 132, 138, 1, 185, 46, 67, 21, 51, 213, 67, 151, 68, 137, 225, 32, 180, 112, 232, 112, 83, 69, 67, 31, 120, 172, 69, 194, 182, 34, 183, 158, 214, 112, 119, 170, 133, 171, 75, 122, 178, 68, 125, 15, 0, 194, 128, 199, 76, 243, 67, 161, 142, 238, 203, 173, 139, 45, 136, 138, 234, 59, 191, 21, 68, 219, 87, 253, 81, 144, 239, 204, 47, 56, 159, 157, 229, 213, 97, 109, 84, 159, 194, 123, 242, 153, 67, 99, 37, 29, 116, 52, 105, 25, 252, 9, 242, 18, 12, 190, 86, 197, 82, 77, 224, 61, 187, 69, 251, 220, 189, 37, 17, 89, 96, 215, 62, 57, 158, 111, 106, 8, 106, 28, 42, 162, 46, 145, 206, 103, 195, 208, 7, 214, 132, 150, 35, 59, 70, 233, 8, 245, 232, 109, 229, 97, 185, 123, 47, 75, 97, 165, 193, 69, 78, 244, 122, 90, 77, 74, 190, 114, 134, 215, 217, 155, 90, 210, 76, 19, 15], auto_msg: [], init_funds: [], contract_id: "pETH", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 5 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [182, 224, 164, 173, 82, 52, 87, 83, 174, 237, 171, 66, 248, 57, 215, 87, 90, 81, 125, 171, 77, 37, 176, 172, 142, 66, 216, 34, 168, 12, 22, 212, 56, 252, 103, 57, 214, 138, 89, 130, 223, 28, 36, 94, 253, 92, 199, 43, 56, 254, 150, 182, 38, 111, 203, 23, 119, 12, 229, 182, 37, 103, 50, 33]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [207, 87, 84, 74, 154, 202, 163, 217, 78, 0, 60, 42, 136, 168, 117, 143, 72, 160, 141, 168, 230, 63, 76, 158, 143, 100, 141, 179, 203, 112, 39, 57]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"PETH\", \"decimals\": 18, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"100000000000000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] instance not found in cache. building a new one
INFO  [enclave_contract_engine::module_cache] Deserializing Wasm contract
INFO  [enclave_contract_engine::module_cache] Deserialized Wasm contract
INFO  [enclave_contract_engine::module_cache] Validating WASM memory demands
INFO  [enclave_contract_engine::module_cache] Validated WASM memory demands
INFO  [enclave_contract_engine::module_cache] Trying to create Wasmi module from parity...
INFO  [enclave_contract_engine::module_cache] Created Wasmi module from parity. Now checking for floating points...
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] storing module in cache
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [15, 247, 186, 38, 150, 137, 21, 214, 217, 164, 179, 84, 136, 22, 152, 17, 11, 114, 90, 176, 41, 53, 230, 45, 102, 137, 213, 32, 170, 228, 198, 127]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [251, 220, 77, 86, 138, 200, 228, 93, 248, 239, 81, 220, 116, 17, 19, 27, 221, 207, 158, 93, 235, 70, 82, 173, 12, 185, 108, 254, 255, 75, 106, 145]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [251, 220, 77, 86, 138, 200, 228, 93, 248, 239, 81, 220, 116, 17, 19, 27, 221, 207, 158, 93, 235, 70, 82, 173, 12, 185, 108, 254, 255, 75, 106, 145]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [31, 133, 182, 94, 187, 160, 176, 46, 97, 243, 219, 45, 228, 121, 18, 240, 70, 13, 16, 28, 153, 223, 177, 97, 87, 237, 73, 159, 66, 87, 171, 179]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [31, 133, 182, 94, 187, 160, 176, 46, 97, 243, 219, 45, 228, 121, 18, 240, 70, 13, 16, 28, 153, 223, 177, 97, 87, 237, 73, 159, 66, 87, 171, 179]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PETH\u{18}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}100000000000000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance�\u{19}�b\u{0}\u{0}\u{0}\u{0}\u{8}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [146, 104, 55, 18, 148, 241, 41, 163, 60, 229, 146, 28, 56, 18, 67, 198, 172, 233, 94, 167, 211, 81, 244, 225, 214, 252, 5, 102, 1, 226, 170, 242]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [31, 133, 182, 94, 187, 160, 176, 46, 97, 243, 219, 45, 228, 121, 18, 240, 70, 13, 16, 28, 153, 223, 177, 97, 87, 237, 73, 159, 66, 87, 171, 179]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PETH\u{12} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [104, 73, 29, 149, 241, 240, 140, 98, 222, 71, 87, 94, 68, 210, 110, 204, 124, 240, 172, 206, 183, 187, 185, 72, 76, 45, 28, 110, 221, 254, 108, 22]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [222, 135, 66, 197, 95, 110, 124, 99, 133, 223, 237, 140, 233, 143, 47, 95, 56, 236, 133, 110, 103, 93, 88, 126, 185, 74, 16, 96, 147, 38, 97, 201]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [209, 71, 30, 208, 179, 35, 93, 129, 9, 171, 33, 17, 160, 42, 22, 55, 104, 220, 250, 108, 38, 164, 229, 162, 16, 213, 132, 231, 198, 36, 53, 50]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [185, 181, 125, 185, 188, 186, 242, 190, 93, 100, 166, 218, 132, 36, 189, 194, 37, 226, 34, 167, 180, 72, 114, 64, 100, 12, 137, 48, 20, 139, 94, 224]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [207, 87, 84, 74, 154, 202, 163, 217, 78, 0, 60, 42, 136, 168, 117, 143, 72, 160, 141, 168, 230, 63, 76, 158, 143, 100, 141, 179, 203, 112, 39, 57]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [227 45 16 143 248 127 82 54 78 224 230 183 242 118 120 183 97 40 64 249 30 169 246 3 124 115 209 111 107 21 46 226] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "8f00d3169c198cb053a8746ef670e00661b2c5338065448cbb0748abbecc68b99b89217edbb0e876a8a2da9ebc599720b434a254b7a89b92015badb281101b92"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "+UWJgwoS/75AknR/LYis+JcyLry2wFEmDryi3rsU5K/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYQGaLeSVgHxRSanJmWPpwHiBxPfap5hkCHHatzpQJO/nW2YWoGbG6P2VXomvDnauJ7L/vBhPXafskjl67BksjD9s3qKOO7IBvtEkqT1INwwF+qDsD5SfXdoqU2fdpN/eiyNIC8tFYfgqoFQ6HuH2osL8oraR0FG8daipLNX55ddCpwd0krH3Pcrt1WohcOlYoER6oOgw1EWZPqDGYs+bGoib128L/71mWAXbu/RCh34uWpN5LqxH8g6QsVUTYkGF5PXbNSz5erLOZ9cIX1vL5apnXELvEMGnoPTlCwzFrMyGXGyujLgm/sWKLJvmzhs0WXrwd5t8Ntz3u89B/wqaOWHFBhdC2GTkbAieZ/x0V1sEgqsAbtPWip2NExtDBOeckV7PNOhte4lqZsgKUKQFb2QvZBPiTQcZhIqU57pT3W1HvXceZQk7PK9r+A=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [249, 69, 137, 131, 10, 18, 255, 190, 64, 146, 116, 127, 45, 136, 172, 248, 151, 50, 46, 188, 182, 192, 81, 38, 14, 188, 162, 222, 187, 20, 228, 175] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 250, 3, 10, 247, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 196, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 5, 112, 65, 84, 79, 77, 42, 138, 3, 249, 69, 137, 131, 10, 18, 255, 190, 64, 146, 116, 127, 45, 136, 172, 248, 151, 50, 46, 188, 182, 192, 81, 38, 14, 188, 162, 222, 187, 20, 228, 175, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 1, 154, 45, 228, 149, 128, 124, 81, 73, 169, 201, 153, 99, 233, 192, 120, 129, 196, 247, 218, 167, 152, 100, 8, 113, 218, 183, 58, 80, 36, 239, 231, 91, 102, 22, 160, 102, 198, 232, 253, 149, 94, 137, 175, 14, 118, 174, 39, 178, 255, 188, 24, 79, 93, 167, 236, 146, 57, 122, 236, 25, 44, 140, 63, 108, 222, 162, 142, 59, 178, 1, 190, 209, 36, 169, 61, 72, 55, 12, 5, 250, 160, 236, 15, 148, 159, 93, 218, 42, 83, 103, 221, 164, 223, 222, 139, 35, 72, 11, 203, 69, 97, 248, 42, 160, 84, 58, 30, 225, 246, 162, 194, 252, 162, 182, 145, 208, 81, 188, 117, 168, 169, 44, 213, 249, 229, 215, 66, 167, 7, 116, 146, 177, 247, 61, 202, 237, 213, 106, 33, 112, 233, 88, 160, 68, 122, 160, 232, 48, 212, 69, 153, 62, 160, 198, 98, 207, 155, 26, 136, 155, 215, 111, 11, 255, 189, 102, 88, 5, 219, 187, 244, 66, 135, 126, 46, 90, 147, 121, 46, 172, 71, 242, 14, 144, 177, 85, 19, 98, 65, 133, 228, 245, 219, 53, 44, 249, 122, 178, 206, 103, 215, 8, 95, 91, 203, 229, 170, 103, 92, 66, 239, 16, 193, 167, 160, 244, 229, 11, 12, 197, 172, 204, 134, 92, 108, 174, 140, 184, 38, 254, 197, 138, 44, 155, 230, 206, 27, 52, 89, 122, 240, 119, 155, 124, 54, 220, 247, 187, 207, 65, 255, 10, 154, 57, 97, 197, 6, 23, 66, 216, 100, 228, 108, 8, 158, 103, 252, 116, 87, 91, 4, 130, 171, 0, 110, 211, 214, 138, 157, 141, 19, 27, 67, 4, 231, 156, 145, 94, 207, 52, 232, 109, 123, 137, 106, 102, 200, 10, 80, 164, 5, 111, 100, 47, 100, 19, 226, 77, 7, 25, 132, 138, 148, 231, 186, 83, 221, 109, 71, 189, 119, 30, 101, 9, 59, 60, 175, 107, 248, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 6, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 228, 41, 222, 87, 233, 166, 77, 231, 142, 1, 51, 103, 205, 215, 140, 17, 168, 231, 27, 242, 45, 10, 197, 109, 115, 239, 132, 137, 20, 205, 218, 105, 93, 92, 223, 160, 158, 50, 24, 223, 31, 247, 115, 86, 115, 228, 95, 74, 199, 81, 199, 94, 75, 234, 209, 223, 14, 174, 143, 190, 4, 206, 167, 120]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([228, 41, 222, 87, 233, 166, 77, 231, 142, 1, 51, 103, 205, 215, 140, 17, 168, 231, 27, 242, 45, 10, 197, 109, 115, 239, 132, 137, 20, 205, 218, 105, 93, 92, 223, 160, 158, 50, 24, 223, 31, 247, 115, 86, 115, 228, 95, 74, 199, 81, 199, 94, 75, 234, 209, 223, 14, 174, 143, 190, 4, 206, 167, 120]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{5}pATOM*�\u{3}�E��\n\u{12}��@�t\u{7f}-����2.���Q&\u{e}��\u{7bb}\u{14}��:sdY�\nXWsb�Il\u{2}n���&��\u{3} �\u{c}�=S��a\u{1}�-䕀|QI�əc��x���ڧ�d\u{8}qڷ:P$��[f\u{16}�f����^��\u{e}v�\'���\u{18}O]��9z�\u{19},�?lޢ�;�\u{1}��$�=H7\u{c}\u{5}���\u{f}��]�*Sgݤ�ދ#H\u{b}�Ea�*�T:\u{1e}���������Q�u��,����B�\u{7}t���=���j!p�X�Dz��0�E�>��bϛ\u{1a}���o\u{b}��fX\u{5}ۻ�B�~.Z�y.�G�\u{e}��U\u{13}bA����5,�z��g�\u{8}_[��g\\B�\u{10}�����\u{b}\u{c}Ŭ\u{306}\\l���&�Ŋ,���\u{1b}4Yz�w�|6����A�\n�9a�\u{6}\u{17}B�d�l\u{8}�g�tW[\u{4}��\u{0}n�֊��\u{13}\u{1b}C\u{4}眑^�4�m{�jf�\nP�\u{5}od/d\u{13}�M\u{7}\u{19}����S�mG�w\u{1e}e\t;<�k�\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{6}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [249, 69, 137, 131, 10, 18, 255, 190, 64, 146, 116, 127, 45, 136, 172, 248, 151, 50, 46, 188, 182, 192, 81, 38, 14, 188, 162, 222, 187, 20, 228, 175, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 1, 154, 45, 228, 149, 128, 124, 81, 73, 169, 201, 153, 99, 233, 192, 120, 129, 196, 247, 218, 167, 152, 100, 8, 113, 218, 183, 58, 80, 36, 239, 231, 91, 102, 22, 160, 102, 198, 232, 253, 149, 94, 137, 175, 14, 118, 174, 39, 178, 255, 188, 24, 79, 93, 167, 236, 146, 57, 122, 236, 25, 44, 140, 63, 108, 222, 162, 142, 59, 178, 1, 190, 209, 36, 169, 61, 72, 55, 12, 5, 250, 160, 236, 15, 148, 159, 93, 218, 42, 83, 103, 221, 164, 223, 222, 139, 35, 72, 11, 203, 69, 97, 248, 42, 160, 84, 58, 30, 225, 246, 162, 194, 252, 162, 182, 145, 208, 81, 188, 117, 168, 169, 44, 213, 249, 229, 215, 66, 167, 7, 116, 146, 177, 247, 61, 202, 237, 213, 106, 33, 112, 233, 88, 160, 68, 122, 160, 232, 48, 212, 69, 153, 62, 160, 198, 98, 207, 155, 26, 136, 155, 215, 111, 11, 255, 189, 102, 88, 5, 219, 187, 244, 66, 135, 126, 46, 90, 147, 121, 46, 172, 71, 242, 14, 144, 177, 85, 19, 98, 65, 133, 228, 245, 219, 53, 44, 249, 122, 178, 206, 103, 215, 8, 95, 91, 203, 229, 170, 103, 92, 66, 239, 16, 193, 167, 160, 244, 229, 11, 12, 197, 172, 204, 134, 92, 108, 174, 140, 184, 38, 254, 197, 138, 44, 155, 230, 206, 27, 52, 89, 122, 240, 119, 155, 124, 54, 220, 247, 187, 207, 65, 255, 10, 154, 57, 97, 197, 6, 23, 66, 216, 100, 228, 108, 8, 158, 103, 252, 116, 87, 91, 4, 130, 171, 0, 110, 211, 214, 138, 157, 141, 19, 27, 67, 4, 231, 156, 145, 94, 207, 52, 232, 109, 123, 137, 106, 102, 200, 10, 80, 164, 5, 111, 100, 47, 100, 19, 226, 77, 7, 25, 132, 138, 148, 231, 186, 83, 221, 109, 71, 189, 119, 30, 101, 9, 59, 60, 175, 107, 248], auto_msg: [], init_funds: [], contract_id: "pATOM", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 6 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [228, 41, 222, 87, 233, 166, 77, 231, 142, 1, 51, 103, 205, 215, 140, 17, 168, 231, 27, 242, 45, 10, 197, 109, 115, 239, 132, 137, 20, 205, 218, 105, 93, 92, 223, 160, 158, 50, 24, 223, 31, 247, 115, 86, 115, 228, 95, 74, 199, 81, 199, 94, 75, 234, 209, 223, 14, 174, 143, 190, 4, 206, 167, 120]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [159, 17, 71, 80, 11, 173, 158, 253, 160, 112, 198, 218, 142, 236, 132, 219, 66, 203, 197, 170, 175, 90, 58, 51, 53, 176, 137, 131, 109, 244, 238, 127]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"PATOM\", \"decimals\": 18, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"100000000000000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [85, 108, 6, 155, 117, 137, 9, 253, 0, 124, 31, 22, 61, 31, 202, 127, 69, 75, 106, 44, 188, 25, 196, 171, 253, 118, 126, 103, 92, 217, 145, 2]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [78, 157, 73, 181, 243, 188, 80, 249, 159, 248, 4, 87, 64, 57, 166, 221, 126, 191, 11, 248, 255, 87, 199, 106, 13, 122, 185, 194, 45, 88, 70, 163]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [78, 157, 73, 181, 243, 188, 80, 249, 159, 248, 4, 87, 64, 57, 166, 221, 126, 191, 11, 248, 255, 87, 199, 106, 13, 122, 185, 194, 45, 88, 70, 163]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [167, 31, 17, 228, 20, 170, 148, 114, 221, 167, 123, 98, 7, 221, 180, 198, 178, 74, 239, 159, 210, 126, 30, 69, 66, 162, 240, 142, 113, 173, 157, 121]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [167, 31, 17, 228, 20, 170, 148, 114, 221, 167, 123, 98, 7, 221, 180, 198, 178, 74, 239, 159, 210, 126, 30, 69, 66, 162, 240, 142, 113, 173, 157, 121]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PATOM\u{18}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}100000000000000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance�\u{19}�b\u{0}\u{0}\u{0}\u{0}\t\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [209, 46, 160, 75, 80, 189, 5, 75, 179, 191, 217, 175, 240, 117, 34, 175, 201, 40, 106, 40, 10, 234, 166, 40, 252, 131, 128, 92, 109, 83, 83, 148]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [167, 31, 17, 228, 20, 170, 148, 114, 221, 167, 123, 98, 7, 221, 180, 198, 178, 74, 239, 159, 210, 126, 30, 69, 66, 162, 240, 142, 113, 173, 157, 121]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PATOM\u{12} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [107, 58, 80, 25, 35, 86, 116, 103, 33, 216, 214, 57, 122, 127, 115, 113, 168, 82, 186, 74, 228, 8, 82, 129, 192, 185, 4, 253, 189, 222, 212, 58]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{15}-\u{2}��J��\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [207, 2, 78, 67, 222, 204, 85, 45, 28, 247, 105, 187, 73, 75, 184, 79, 54, 113, 202, 17, 188, 25, 157, 25, 0, 63, 136, 226, 81, 181, 72, 16]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [244, 133, 138, 201, 228, 233, 229, 43, 200, 10, 35, 3, 50, 208, 223, 85, 240, 118, 8, 241, 25, 89, 154, 20, 233, 76, 190, 176, 255, 103, 228, 132]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [25, 170, 154, 49, 26, 75, 223, 208, 119, 114, 134, 250, 233, 75, 237, 48, 64, 120, 46, 125, 229, 5, 212, 209, 74, 121, 182, 147, 219, 178, 68, 231]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [159, 17, 71, 80, 11, 173, 158, 253, 160, 112, 198, 218, 142, 236, 132, 219, 66, 203, 197, 170, 175, 90, 58, 51, 53, 176, 137, 131, 109, 244, 238, 127]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [227 45 16 143 248 127 82 54 78 224 230 183 242 118 120 183 97 40 64 249 30 169 246 3 124 115 209 111 107 21 46 226] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "39d227703f1d3fbb701cfc6c6f84e5b7d912a23088f3724c6a624c188086263bdaa87e3a0406d9388d8e999cd9c899a2b3603c649d4c8f92eda22dfa6eeced94"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "ov5dX9Kn6TMnbiMkF/uVrp9RtPLwi317yELECByBrUnEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYQKh515YTc3CpskErAuj4aWm4CH+bQuHJxq3V0fdp06JD5E/A6gDsLWm0Sep2Bs3Ksx9SUmu7zJmtG0vg7LVMDNGnmRddAYXu+gt8eYWFEoukd0hj6SsgMICrduKd+/PzdKzDd39rihMITKC+0vepMjE5abg7Fypsw4BKQ+eT86ksgndVFTU9MLqQEa8zpMZycezQ+0cNE9IzNC6EB9LR1SFfoxTeft0/ekfmqwMDNK4FYsO5GwqDarbgl1uGoyv8zExOsVhK6/WJfvUCkZgpre4DxkHaJ21wJxvQVwM+dDrRsqx5J9gBEBqpvAQ5Eckygf02i8Do4Iwd32vdLcUBs0hUoySSnv/J1+/ZbmVrLuNNLHsCQsumHYJYPdMes1RpW8UwM0Z0v3B4o6r/9vjgH0BXUJxly/dR95NoakqIyLSa2bVaKM3QzfO"
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [162, 254, 93, 95, 210, 167, 233, 51, 39, 110, 35, 36, 23, 251, 149, 174, 159, 81, 180, 242, 240, 139, 125, 123, 200, 66, 196, 8, 28, 129, 173, 73] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 249, 3, 10, 246, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 195, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 5, 112, 84, 82, 83, 84, 42, 137, 3, 162, 254, 93, 95, 210, 167, 233, 51, 39, 110, 35, 36, 23, 251, 149, 174, 159, 81, 180, 242, 240, 139, 125, 123, 200, 66, 196, 8, 28, 129, 173, 73, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 2, 161, 231, 94, 88, 77, 205, 194, 166, 201, 4, 172, 11, 163, 225, 165, 166, 224, 33, 254, 109, 11, 135, 39, 26, 183, 87, 71, 221, 167, 78, 137, 15, 145, 63, 3, 168, 3, 176, 181, 166, 209, 39, 169, 216, 27, 55, 42, 204, 125, 73, 73, 174, 239, 50, 102, 180, 109, 47, 131, 178, 213, 48, 51, 70, 158, 100, 93, 116, 6, 23, 187, 232, 45, 241, 230, 22, 20, 74, 46, 145, 221, 33, 143, 164, 172, 128, 194, 2, 173, 219, 138, 119, 239, 207, 205, 210, 179, 13, 221, 253, 174, 40, 76, 33, 50, 130, 251, 75, 222, 164, 200, 196, 229, 166, 224, 236, 92, 169, 179, 14, 1, 41, 15, 158, 79, 206, 164, 178, 9, 221, 84, 84, 212, 244, 194, 234, 64, 70, 188, 206, 147, 25, 201, 199, 179, 67, 237, 28, 52, 79, 72, 204, 208, 186, 16, 31, 75, 71, 84, 133, 126, 140, 83, 121, 251, 116, 253, 233, 31, 154, 172, 12, 12, 210, 184, 21, 139, 14, 228, 108, 42, 13, 170, 219, 130, 93, 110, 26, 140, 175, 243, 49, 49, 58, 197, 97, 43, 175, 214, 37, 251, 212, 10, 70, 96, 166, 183, 184, 15, 25, 7, 104, 157, 181, 192, 156, 111, 65, 92, 12, 249, 208, 235, 70, 202, 177, 228, 159, 96, 4, 64, 106, 166, 240, 16, 228, 71, 36, 202, 7, 244, 218, 47, 3, 163, 130, 48, 119, 125, 175, 116, 183, 20, 6, 205, 33, 82, 140, 146, 74, 123, 255, 39, 95, 191, 101, 185, 149, 172, 187, 141, 52, 177, 236, 9, 11, 46, 152, 118, 9, 96, 247, 76, 122, 205, 81, 165, 111, 20, 192, 205, 25, 210, 253, 193, 226, 142, 171, 255, 219, 227, 128, 125, 1, 93, 66, 113, 151, 47, 221, 71, 222, 77, 161, 169, 42, 35, 34, 210, 107, 102, 213, 104, 163, 55, 67, 55, 206, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 7, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 116, 44, 107, 181, 211, 117, 173, 109, 52, 189, 130, 20, 129, 2, 226, 36, 107, 202, 150, 1, 153, 3, 165, 222, 45, 242, 214, 90, 129, 247, 237, 129, 122, 95, 240, 99, 105, 134, 33, 115, 87, 159, 33, 253, 150, 84, 232, 197, 148, 28, 24, 79, 11, 46, 188, 55, 17, 139, 221, 150, 25, 155, 238, 209]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([116, 44, 107, 181, 211, 117, 173, 109, 52, 189, 130, 20, 129, 2, 226, 36, 107, 202, 150, 1, 153, 3, 165, 222, 45, 242, 214, 90, 129, 247, 237, 129, 122, 95, 240, 99, 105, 134, 33, 115, 87, 159, 33, 253, 150, 84, 232, 197, 148, 28, 24, 79, 11, 46, 188, 55, 17, 139, 221, 150, 25, 155, 238, 209]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{5}pTRST*�\u{3}��]_ҧ�3\'n#$\u{17}����Q����}{�B�\u{8}\u{1c}��I�:sdY�\nXWsb�Il\u{2}n���&��\u{3} �\u{c}�=S��a\u{2}��^XM�¦�\u{4}�\u{b}�ᥦ�!�m\u{b}�\'\u{1a}�WGݧN�\u{f}�?\u{3}�\u{3}����\'��\u{1b}7*�}II��2f�m/���03F�d]t\u{6}\u{17}��-��\u{16}\u{14}J.��!�����\u{2}�ۊw���ҳ\r���(L!2��Kޤ�����\\��\u{e}\u{1})\u{f}�OΤ�\t�TT����@F�Γ\u{19}�ǳC�\u{1c}4OH�к\u{10}\u{1f}KGT�~�Sy�t��\u{1f}��\u{c}\u{c}Ҹ\u{15}�\u{e}�l*\r�ۂ]n\u{1a}���11:�a+��%��\nF`���\u{f}\u{19}\u{7}h����oA\\\u{c}���Fʱ�`\u{4}@j��\u{10}�G$�\u{7}��/\u{3}��0w}�t�\u{14}\u{6}�!R��J{�\'_�e�����4��\t\u{b}.�v\t`�Lz�Q�o\u{14}��\u{19}���⎫���}\u{1}]Bq�/�G�M��*#\"�kf�h�7C7�\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{7}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [162, 254, 93, 95, 210, 167, 233, 51, 39, 110, 35, 36, 23, 251, 149, 174, 159, 81, 180, 242, 240, 139, 125, 123, 200, 66, 196, 8, 28, 129, 173, 73, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 2, 161, 231, 94, 88, 77, 205, 194, 166, 201, 4, 172, 11, 163, 225, 165, 166, 224, 33, 254, 109, 11, 135, 39, 26, 183, 87, 71, 221, 167, 78, 137, 15, 145, 63, 3, 168, 3, 176, 181, 166, 209, 39, 169, 216, 27, 55, 42, 204, 125, 73, 73, 174, 239, 50, 102, 180, 109, 47, 131, 178, 213, 48, 51, 70, 158, 100, 93, 116, 6, 23, 187, 232, 45, 241, 230, 22, 20, 74, 46, 145, 221, 33, 143, 164, 172, 128, 194, 2, 173, 219, 138, 119, 239, 207, 205, 210, 179, 13, 221, 253, 174, 40, 76, 33, 50, 130, 251, 75, 222, 164, 200, 196, 229, 166, 224, 236, 92, 169, 179, 14, 1, 41, 15, 158, 79, 206, 164, 178, 9, 221, 84, 84, 212, 244, 194, 234, 64, 70, 188, 206, 147, 25, 201, 199, 179, 67, 237, 28, 52, 79, 72, 204, 208, 186, 16, 31, 75, 71, 84, 133, 126, 140, 83, 121, 251, 116, 253, 233, 31, 154, 172, 12, 12, 210, 184, 21, 139, 14, 228, 108, 42, 13, 170, 219, 130, 93, 110, 26, 140, 175, 243, 49, 49, 58, 197, 97, 43, 175, 214, 37, 251, 212, 10, 70, 96, 166, 183, 184, 15, 25, 7, 104, 157, 181, 192, 156, 111, 65, 92, 12, 249, 208, 235, 70, 202, 177, 228, 159, 96, 4, 64, 106, 166, 240, 16, 228, 71, 36, 202, 7, 244, 218, 47, 3, 163, 130, 48, 119, 125, 175, 116, 183, 20, 6, 205, 33, 82, 140, 146, 74, 123, 255, 39, 95, 191, 101, 185, 149, 172, 187, 141, 52, 177, 236, 9, 11, 46, 152, 118, 9, 96, 247, 76, 122, 205, 81, 165, 111, 20, 192, 205, 25, 210, 253, 193, 226, 142, 171, 255, 219, 227, 128, 125, 1, 93, 66, 113, 151, 47, 221, 71, 222, 77, 161, 169, 42, 35, 34, 210, 107, 102, 213, 104, 163, 55, 67, 55, 206], auto_msg: [], init_funds: [], contract_id: "pTRST", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 7 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [116, 44, 107, 181, 211, 117, 173, 109, 52, 189, 130, 20, 129, 2, 226, 36, 107, 202, 150, 1, 153, 3, 165, 222, 45, 242, 214, 90, 129, 247, 237, 129, 122, 95, 240, 99, 105, 134, 33, 115, 87, 159, 33, 253, 150, 84, 232, 197, 148, 28, 24, 79, 11, 46, 188, 55, 17, 139, 221, 150, 25, 155, 238, 209]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [219, 75, 45, 64, 10, 243, 111, 170, 117, 215, 147, 71, 206, 186, 131, 249, 113, 209, 82, 29, 85, 188, 89, 28, 18, 99, 154, 59, 78, 8, 101, 113]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"PTRST\", \"decimals\": 6, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"200000000000000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}*Z\u{5}�\u{95}�\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [66, 212, 56, 200, 205, 213, 157, 114, 226, 139, 58, 199, 1, 146, 99, 33, 226, 87, 219, 106, 52, 209, 98, 219, 32, 10, 205, 14, 183, 213, 182, 116]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [184, 155, 25, 38, 200, 194, 179, 184, 15, 28, 25, 169, 128, 47, 146, 139, 162, 106, 4, 142, 206, 142, 78, 17, 65, 182, 159, 88, 148, 154, 89, 121]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [184, 155, 25, 38, 200, 194, 179, 184, 15, 28, 25, 169, 128, 47, 146, 139, 162, 106, 4, 142, 206, 142, 78, 17, 65, 182, 159, 88, 148, 154, 89, 121]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [143, 125, 136, 184, 211, 53, 208, 123, 58, 94, 28, 95, 13, 35, 233, 4, 108, 103, 123, 240, 98, 112, 5, 73, 51, 227, 56, 23, 53, 195, 219, 29]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [143, 125, 136, 184, 211, 53, 208, 123, 58, 94, 28, 95, 13, 35, 233, 4, 108, 103, 123, 240, 98, 112, 5, 73, 51, 227, 56, 23, 53, 195, 219, 29]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PTRST\u{18}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}200000000000000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance\u{0}\u{1a}�b\u{0}\u{0}\u{0}\u{0}\n\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [90, 172, 62, 247, 230, 159, 63, 56, 40, 119, 215, 248, 41, 183, 97, 97, 218, 15, 77, 24, 186, 121, 108, 189, 144, 84, 127, 19, 230, 182, 39, 90]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [143, 125, 136, 184, 211, 53, 208, 123, 58, 94, 28, 95, 13, 35, 233, 4, 108, 103, 123, 240, 98, 112, 5, 73, 51, 227, 56, 23, 53, 195, 219, 29]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}PTRST\u{6} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [182, 56, 55, 84, 31, 68, 116, 97, 44, 123, 200, 212, 8, 70, 165, 229, 82, 208, 172, 184, 22, 32, 71, 100, 235, 130, 171, 87, 67, 29, 83, 77]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}*Z\u{5}�\u{95}�\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [222, 182, 237, 205, 99, 167, 252, 138, 144, 50, 203, 55, 40, 79, 191, 70, 44, 212, 18, 1, 62, 47, 110, 91, 249, 38, 105, 149, 187, 191, 204, 159]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [91, 236, 157, 51, 177, 120, 24, 141, 181, 38, 19, 54, 151, 253, 35, 2, 121, 76, 179, 38, 94, 179, 127, 177, 175, 232, 221, 160, 251, 49, 224, 17]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [79, 159, 83, 166, 211, 22, 114, 166, 15, 223, 235, 124, 88, 42, 156, 245, 235, 202, 174, 208, 66, 40, 143, 164, 21, 200, 120, 105, 92, 191, 137, 40]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [219, 75, 45, 64, 10, 243, 111, 170, 117, 215, 147, 71, 206, 186, 131, 249, 113, 209, 82, 29, 85, 188, 89, 28, 18, 99, 154, 59, 78, 8, 101, 113]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [227 45 16 143 248 127 82 54 78 224 230 183 242 118 120 183 97 40 64 249 30 169 246 3 124 115 209 111 107 21 46 226] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "5e0d4d631431baadb1578e10d9f6dc96f77ceab51af200a95e970519b300f6b8a1ae28a5399a70e88745f87429316d381fd3bf7077a7a7336ce5cd7664e4b287"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "RnEmdvo8fmtd7xadPplFuPRg8Uec1CbWRNP1LdeKYZ/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYQJ/l1O0S61hB9G1x3FefaXNQfL08U9Ftlu0YY8k4uZULNb3kB04iqtl05janK7uByIRlkzDF+YXTWEED2JvABPdGFo4Xu2V0jtYoO+8/TUNakfSAaai8l0kN64KNF9DH71Q66vLm6p4Lk47CsLek9cC2dl7O5JEPKXQ4hgI7vw8P+tqfuNMHzF5Ncq+KWmcKnaZ9mpxyMtz30CNeEA/azqOxZVsob236kXyeBekkV1lXy5JyDQZ2b1a2MKucJ0lCZgtzkXxo58DJk3iGUPX3bv7ukKXnVoA3zdkTTAQiMTMyH8l5Ptv047bcGvBZv4kGxgkRMezkz6AflHiy2fk+uUGnfe1Qx8NWoreDBvmP4yBWT7rZmPK397eLo19anwvQs/0PYpbfCcpp0WlbJ4Rkt6+92JIO1PAYI4V+++elZA="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [70, 113, 38, 118, 250, 60, 126, 107, 93, 239, 22, 157, 62, 153, 69, 184, 244, 96, 241, 71, 156, 212, 38, 214, 68, 211, 245, 45, 215, 138, 97, 159] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 239, 3, 10, 236, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 185, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 1, 34, 5, 112, 79, 83, 77, 79, 42, 255, 2, 70, 113, 38, 118, 250, 60, 126, 107, 93, 239, 22, 157, 62, 153, 69, 184, 244, 96, 241, 71, 156, 212, 38, 214, 68, 211, 245, 45, 215, 138, 97, 159, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 2, 127, 151, 83, 180, 75, 173, 97, 7, 209, 181, 199, 113, 94, 125, 165, 205, 65, 242, 244, 241, 79, 69, 182, 91, 180, 97, 143, 36, 226, 230, 84, 44, 214, 247, 144, 29, 56, 138, 171, 101, 211, 152, 218, 156, 174, 238, 7, 34, 17, 150, 76, 195, 23, 230, 23, 77, 97, 4, 15, 98, 111, 0, 19, 221, 24, 90, 56, 94, 237, 149, 210, 59, 88, 160, 239, 188, 253, 53, 13, 106, 71, 210, 1, 166, 162, 242, 93, 36, 55, 174, 10, 52, 95, 67, 31, 189, 80, 235, 171, 203, 155, 170, 120, 46, 78, 59, 10, 194, 222, 147, 215, 2, 217, 217, 123, 59, 146, 68, 60, 165, 208, 226, 24, 8, 238, 252, 60, 63, 235, 106, 126, 227, 76, 31, 49, 121, 53, 202, 190, 41, 105, 156, 42, 118, 153, 246, 106, 113, 200, 203, 115, 223, 64, 141, 120, 64, 63, 107, 58, 142, 197, 149, 108, 161, 189, 183, 234, 69, 242, 120, 23, 164, 145, 93, 101, 95, 46, 73, 200, 52, 25, 217, 189, 90, 216, 194, 174, 112, 157, 37, 9, 152, 45, 206, 69, 241, 163, 159, 3, 38, 77, 226, 25, 67, 215, 221, 187, 251, 186, 66, 151, 157, 90, 0, 223, 55, 100, 77, 48, 16, 136, 196, 204, 200, 127, 37, 228, 251, 111, 211, 142, 219, 112, 107, 193, 102, 254, 36, 27, 24, 36, 68, 199, 179, 147, 62, 128, 126, 81, 226, 203, 103, 228, 250, 229, 6, 157, 247, 181, 67, 31, 13, 90, 138, 222, 12, 27, 230, 63, 140, 129, 89, 62, 235, 102, 99, 202, 223, 222, 222, 46, 141, 125, 106, 124, 47, 66, 207, 244, 61, 138, 91, 124, 39, 41, 167, 69, 165, 108, 158, 17, 146, 222, 190, 247, 98, 72, 59, 83, 192, 96, 142, 21, 251, 239, 158, 149, 144, 18, 102, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 8, 18, 18, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 224, 198, 91, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 140, 59, 228, 229, 16, 255, 63, 33, 105, 35, 130, 10, 111, 73, 15, 172, 192, 11, 61, 142, 74, 252, 119, 220, 113, 55, 31, 43, 63, 254, 57, 160, 93, 236, 152, 32, 77, 72, 39, 166, 36, 176, 229, 8, 94, 173, 133, 30, 17, 28, 157, 38, 237, 243, 202, 45, 55, 226, 159, 58, 189, 95, 248, 130]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([140, 59, 228, 229, 16, 255, 63, 33, 105, 35, 130, 10, 111, 73, 15, 172, 192, 11, 61, 142, 74, 252, 119, 220, 113, 55, 31, 43, 63, 254, 57, 160, 93, 236, 152, 32, 77, 72, 39, 166, 36, 176, 229, 8, 94, 173, 133, 30, 17, 28, 157, 38, 237, 243, 202, 45, 55, 226, 159, 58, 189, 95, 248, 130]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{1}\"\u{5}pOSMO*�\u{2}Fq&v�<~k]�\u{16}�>�E��`�G��&�D��-\u{5ca}a��:sdY�\nXWsb�Il\u{2}n���&��\u{3} �\u{c}�=S��a\u{2}\u{7f}�S�K�a\u{7}ѵ�q^}��A���OE�[�a�$��T,���\u{1d}8��eӘڜ��\u{7}\"\u{11}�L�\u{17}�\u{17}Ma\u{4}\u{f}bo\u{0}\u{13}�\u{18}Z8^��;X���5\rjG�\u{1}���]$7�\n4_C\u{1f}�P�˛�x.N;\n�ޓ�\u{2}��{;�D<���\u{18}\u{8}��<?�j~�L\u{1f}1y5ʾ)i�*v��jq��s�@�x@?k:�ŕl����E�x\u{17}��]e_.I�4\u{19}ٽZ�®p�%\t�-�E�\u{3}&M�\u{19}C�ݻ��B��Z\u{0}�7dM0\u{10}����\u{7f}%��oӎ�pk�f�$\u{1b}\u{18}$Dǳ�>�~Q��g���\u{6}���C\u{1f}\rZ��\u{c}\u{1b}�?��Y>�fc����.�}j|/B��=�[|\')�E�l�\u{11}�\u{7be}�bH;S�`�\u{15}�\u{f795}�\u{12}f\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{8}\u{12}\u{12}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}��[\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [70, 113, 38, 118, 250, 60, 126, 107, 93, 239, 22, 157, 62, 153, 69, 184, 244, 96, 241, 71, 156, 212, 38, 214, 68, 211, 245, 45, 215, 138, 97, 159, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 2, 127, 151, 83, 180, 75, 173, 97, 7, 209, 181, 199, 113, 94, 125, 165, 205, 65, 242, 244, 241, 79, 69, 182, 91, 180, 97, 143, 36, 226, 230, 84, 44, 214, 247, 144, 29, 56, 138, 171, 101, 211, 152, 218, 156, 174, 238, 7, 34, 17, 150, 76, 195, 23, 230, 23, 77, 97, 4, 15, 98, 111, 0, 19, 221, 24, 90, 56, 94, 237, 149, 210, 59, 88, 160, 239, 188, 253, 53, 13, 106, 71, 210, 1, 166, 162, 242, 93, 36, 55, 174, 10, 52, 95, 67, 31, 189, 80, 235, 171, 203, 155, 170, 120, 46, 78, 59, 10, 194, 222, 147, 215, 2, 217, 217, 123, 59, 146, 68, 60, 165, 208, 226, 24, 8, 238, 252, 60, 63, 235, 106, 126, 227, 76, 31, 49, 121, 53, 202, 190, 41, 105, 156, 42, 118, 153, 246, 106, 113, 200, 203, 115, 223, 64, 141, 120, 64, 63, 107, 58, 142, 197, 149, 108, 161, 189, 183, 234, 69, 242, 120, 23, 164, 145, 93, 101, 95, 46, 73, 200, 52, 25, 217, 189, 90, 216, 194, 174, 112, 157, 37, 9, 152, 45, 206, 69, 241, 163, 159, 3, 38, 77, 226, 25, 67, 215, 221, 187, 251, 186, 66, 151, 157, 90, 0, 223, 55, 100, 77, 48, 16, 136, 196, 204, 200, 127, 37, 228, 251, 111, 211, 142, 219, 112, 107, 193, 102, 254, 36, 27, 24, 36, 68, 199, 179, 147, 62, 128, 126, 81, 226, 203, 103, 228, 250, 229, 6, 157, 247, 181, 67, 31, 13, 90, 138, 222, 12, 27, 230, 63, 140, 129, 89, 62, 235, 102, 99, 202, 223, 222, 222, 46, 141, 125, 106, 124, 47, 66, 207, 244, 61, 138, 91, 124, 39, 41, 167, 69, 165, 108, 158, 17, 146, 222, 190, 247, 98, 72, 59, 83, 192, 96, 142, 21, 251, 239, 158, 149, 144], auto_msg: [], init_funds: [], contract_id: "pOSMO", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 8 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [140, 59, 228, 229, 16, 255, 63, 33, 105, 35, 130, 10, 111, 73, 15, 172, 192, 11, 61, 142, 74, 252, 119, 220, 113, 55, 31, 43, 63, 254, 57, 160, 93, 236, 152, 32, 77, 72, 39, 166, 36, 176, 229, 8, 94, 173, 133, 30, 17, 28, 157, 38, 237, 243, 202, 45, 55, 226, 159, 58, 189, 95, 248, 130]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [238, 154, 17, 34, 156, 208, 13, 194, 241, 171, 100, 137, 66, 32, 239, 106, 155, 102, 115, 208, 107, 249, 219, 187, 238, 51, 104, 167, 138, 29, 86, 29]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"admin\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"symbol\": \"POSMO\", \"decimals\": 8, \"initial_balances\": [{\"address\": \"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\", \"amount\": \"10000000000000\"}], \"prng_seed\": \"YWE=\", \"name\": \"test\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{8}balances7?J\u{16}5QD�C<pZ��P��{�:" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\t\u{18}Nr�\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [118, 10, 197, 75, 133, 213, 62, 227, 69, 139, 146, 236, 116, 37, 184, 168, 96, 90, 172, 9, 126, 70, 99, 253, 235, 39, 242, 23, 230, 38, 159, 188]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [138, 215, 35, 93, 58, 75, 219, 185, 34, 61, 235, 190, 59, 205, 148, 162, 184, 105, 33, 12, 228, 197, 240, 175, 141, 233, 70, 155, 157, 18, 167, 16]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtx-count" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [138, 215, 35, 93, 58, 75, 219, 185, 34, 61, 235, 190, 59, 205, 148, 162, 184, 105, 33, 12, 228, 197, 240, 175, 141, 233, 70, 155, 157, 18, 167, 16]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [165, 73, 191, 243, 5, 219, 119, 190, 123, 183, 237, 192, 101, 94, 38, 31, 199, 205, 77, 112, 226, 226, 69, 36, 254, 50, 162, 25, 100, 185, 170, 237]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [165, 73, 191, 243, 5, 219, 119, 190, 123, 183, 237, 192, 101, 94, 38, 31, 199, 205, 77, 112, 226, 226, 69, 36, 254, 50, 162, 25, 100, 185, 170, 237]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:\u{0}\u{0}\u{0}\u{0}" value: "\u{1}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{1}\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{1}\u{1c}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\u{0}\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}POSMO\u{e}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}10000000000000\u{1}\u{f}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}Initial Balance\u{6}\u{1a}�b\u{0}\u{0}\u{0}\u{0}\u{b}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [154, 52, 35, 2, 46, 78, 116, 30, 155, 9, 32, 221, 48, 230, 199, 253, 242, 175, 61, 68, 66, 242, 198, 138, 195, 164, 225, 2, 170, 168, 215, 78]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}transactions\u{0}\u{14}7?J\u{16}5QD�C<pZ��P��{�:len" value: "\u{0}\u{0}\u{0}\u{1}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [165, 73, 191, 243, 5, 219, 119, 190, 123, 183, 237, 192, 101, 94, 38, 31, 199, 205, 77, 112, 226, 226, 69, 36, 254, 50, 162, 25, 100, 185, 170, 237]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configconstants" value: "\u{4}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}test,\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{5}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}POSMO\u{8} \u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}�\u{1b}m���ˎ˪�֍�@�x�.Ո�0��LI&���\u{6}\u{0}\u{0}\u{0}\u{0}\u{0},\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [249, 6, 241, 214, 236, 246, 193, 228, 75, 130, 10, 172, 4, 157, 2, 164, 77, 227, 24, 206, 218, 232, 2, 223, 110, 187, 146, 57, 202, 21, 125, 15]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configtotal_supply" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\t\u{18}Nr�\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [251, 149, 76, 100, 71, 43, 29, 118, 6, 76, 44, 250, 77, 164, 153, 224, 42, 200, 245, 18, 31, 183, 240, 59, 227, 5, 75, 206, 142, 182, 209, 80]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status" value: "\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [156, 64, 198, 130, 190, 97, 41, 166, 127, 136, 115, 33, 66, 90, 70, 139, 123, 172, 228, 16, 36, 191, 217, 226, 196, 81, 66, 9, 188, 213, 218, 177]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}configminters" value: "\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [62, 27, 205, 241, 240, 231, 211, 228, 54, 2, 31, 31, 162, 175, 231, 51, 77, 234, 225, 150, 7, 233, 215, 5, 161, 119, 4, 134, 41, 125, 6, 136]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [238, 154, 17, 34, 156, 208, 13, 194, 241, 171, 100, 137, 66, 32, 239, 106, 155, 102, 115, 208, 107, 249, 219, 187, 238, 51, 104, 167, 138, 29, 86, 29]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [139 154 102 43 212 25 221 31 45 35 53 165 133 227 55 153 229 126 215 244 81 202 131 35 124 251 28 213 37 43 126 55] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "f146c92e268843a53ace712138478e878ce2a6a7fd7153a00a6b50b23457a9391812277981c8529528900a592f83897de959871c6b52aa0ba375b29c57b7ed83"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYQNgk5Uijb/0yvaeeAaZ9xk/senf2AIXHtCk39n5S8Kgx5LcEJRUba5ygfhyDnsDuFhYhIJQLE7XHYcJbovDGUrKmDUBJvxapzB20ngbEmW78BneB5PwQywwxGajP0F1+OLawwxuEqSykZdq/D02kBLbShz92gCcqxuzrZ7OQ53ILBal8Jb967NRa5vAWcbtLCIm9RbRswwv3tKfYMTBpkEKjNLvYuZT482dLgwA3CjoA0SgL+KsfLhGQR+2LpNDsA5qNnFkYboV+6//uvPmTcCBr37R8PQjbufgVRqjoMbVREkDMswqNvWjDyh67Znk4kp3uxKWEWkVovLm+w4CoHl2NggHlXJULqjpqX2eKLezM7tTkqCnWsAl6Pe9hmypmpqmbVOAdFmKL1cLyynO95kSCtgIy7rhniPQFZcnO5xAjVp63eRHqSI3CCB44oV+IvfMGhPdU44W2XwTK1BHx0EM3XTp8aaObT2ApSGZSjLPOFllEmmVKyGfmVrVaOVwwDYvUVcCdoqzCv1/vIPKudn1ELZz4aBt86hlXd92lKo3RnCqdr1Jv47XRw0mjHB5nyxgCiSPznd87jK8archReuWMNGOazeYyLdqPiENAMJVaEOZ/Wg4AZauDcwjoMA+BntmkSnN7k9qU895gPTfjuy9Es9sxRkTAWH0JdVFVn/rTxdcF62xZXBcFZPzY0uM5jas3CRYfgQF+uwZMudJ26Aofki96bU1YFH3knvl22OV4TIePeTbwjhY3MGcZblxxg+imi+JMHrfq2Bmpx+tfc/Vk7GKWsCeT+tDhS7ATbzN1JQw6KdZhcysx7k10Qh3qgK/pU3yG/mDXflajicnhQ+kdoPPI99fgt12KoSpqQ=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 191, 6, 10, 188, 6, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 137, 6, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 4, 34, 6, 114, 111, 117, 116, 101, 114, 42, 206, 5, 69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 3, 96, 147, 149, 34, 141, 191, 244, 202, 246, 158, 120, 6, 153, 247, 25, 63, 177, 233, 223, 216, 2, 23, 30, 208, 164, 223, 217, 249, 75, 194, 160, 199, 146, 220, 16, 148, 84, 109, 174, 114, 129, 248, 114, 14, 123, 3, 184, 88, 88, 132, 130, 80, 44, 78, 215, 29, 135, 9, 110, 139, 195, 25, 74, 202, 152, 53, 1, 38, 252, 90, 167, 48, 118, 210, 120, 27, 18, 101, 187, 240, 25, 222, 7, 147, 240, 67, 44, 48, 196, 102, 163, 63, 65, 117, 248, 226, 218, 195, 12, 110, 18, 164, 178, 145, 151, 106, 252, 61, 54, 144, 18, 219, 74, 28, 253, 218, 0, 156, 171, 27, 179, 173, 158, 206, 67, 157, 200, 44, 22, 165, 240, 150, 253, 235, 179, 81, 107, 155, 192, 89, 198, 237, 44, 34, 38, 245, 22, 209, 179, 12, 47, 222, 210, 159, 96, 196, 193, 166, 65, 10, 140, 210, 239, 98, 230, 83, 227, 205, 157, 46, 12, 0, 220, 40, 232, 3, 68, 160, 47, 226, 172, 124, 184, 70, 65, 31, 182, 46, 147, 67, 176, 14, 106, 54, 113, 100, 97, 186, 21, 251, 175, 255, 186, 243, 230, 77, 192, 129, 175, 126, 209, 240, 244, 35, 110, 231, 224, 85, 26, 163, 160, 198, 213, 68, 73, 3, 50, 204, 42, 54, 245, 163, 15, 40, 122, 237, 153, 228, 226, 74, 119, 187, 18, 150, 17, 105, 21, 162, 242, 230, 251, 14, 2, 160, 121, 118, 54, 8, 7, 149, 114, 84, 46, 168, 233, 169, 125, 158, 40, 183, 179, 51, 187, 83, 146, 160, 167, 90, 192, 37, 232, 247, 189, 134, 108, 169, 154, 154, 166, 109, 83, 128, 116, 89, 138, 47, 87, 11, 203, 41, 206, 247, 153, 18, 10, 216, 8, 203, 186, 225, 158, 35, 208, 21, 151, 39, 59, 156, 64, 141, 90, 122, 221, 228, 71, 169, 34, 55, 8, 32, 120, 226, 133, 126, 34, 247, 204, 26, 19, 221, 83, 142, 22, 217, 124, 19, 43, 80, 71, 199, 65, 12, 221, 116, 233, 241, 166, 142, 109, 61, 128, 165, 33, 153, 74, 50, 207, 56, 89, 101, 18, 105, 149, 43, 33, 159, 153, 90, 213, 104, 229, 112, 192, 54, 47, 81, 87, 2, 118, 138, 179, 10, 253, 127, 188, 131, 202, 185, 217, 245, 16, 182, 115, 225, 160, 109, 243, 168, 101, 93, 223, 118, 148, 170, 55, 70, 112, 170, 118, 189, 73, 191, 142, 215, 71, 13, 38, 140, 112, 121, 159, 44, 96, 10, 36, 143, 206, 119, 124, 238, 50, 188, 106, 183, 33, 69, 235, 150, 48, 209, 142, 107, 55, 152, 200, 183, 106, 62, 33, 13, 0, 194, 85, 104, 67, 153, 253, 104, 56, 1, 150, 174, 13, 204, 35, 160, 192, 62, 6, 123, 102, 145, 41, 205, 238, 79, 106, 83, 207, 121, 128, 244, 223, 142, 236, 189, 18, 207, 108, 197, 25, 19, 1, 97, 244, 37, 213, 69, 86, 127, 235, 79, 23, 92, 23, 173, 177, 101, 112, 92, 21, 147, 243, 99, 75, 140, 230, 54, 172, 220, 36, 88, 126, 4, 5, 250, 236, 25, 50, 231, 73, 219, 160, 40, 126, 72, 189, 233, 181, 53, 96, 81, 247, 146, 123, 229, 219, 99, 149, 225, 50, 30, 61, 228, 219, 194, 56, 88, 220, 193, 156, 101, 185, 113, 198, 15, 162, 154, 47, 137, 48, 122, 223, 171, 96, 102, 167, 31, 173, 125, 207, 213, 147, 177, 138, 90, 192, 158, 79, 235, 67, 133, 46, 192, 77, 188, 205, 212, 148, 48, 232, 167, 89, 133, 204, 172, 199, 185, 53, 209, 8, 119, 170, 2, 191, 165, 77, 242, 27, 249, 131, 93, 249, 90, 142, 39, 39, 133, 15, 164, 118, 131, 207, 35, 223, 95, 130, 221, 118, 42, 132, 169, 169, 18, 103, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 9, 18, 19, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 53, 48, 48, 16, 192, 141, 183, 1, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 50, 5, 80, 253, 229, 112, 128, 123, 10, 244, 95, 0, 110, 119, 134, 226, 178, 12, 197, 122, 69, 13, 35, 108, 213, 57, 130, 204, 163, 195, 213, 190, 89, 119, 20, 201, 224, 221, 43, 225, 88, 174, 54, 14, 159, 4, 102, 33, 119, 221, 117, 176, 199, 82, 131, 147, 47, 58, 45, 48, 46, 14, 198, 27]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([50, 5, 80, 253, 229, 112, 128, 123, 10, 244, 95, 0, 110, 119, 134, 226, 178, 12, 197, 122, 69, 13, 35, 108, 213, 57, 130, 204, 163, 195, 213, 190, 89, 119, 20, 201, 224, 221, 43, 225, 88, 174, 54, 14, 159, 4, 102, 33, 119, 221, 117, 176, 199, 82, 131, 147, 47, 58, 45, 48, 46, 14, 198, 27]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{6}\n�\u{6}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{6}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{4}\"\u{6}router*�\u{5}E\u{2}0\u{13}\u{5}nR�\u{2}U)�z\n\u{12}�m\u{16}���\r2\u{13}_�^��\u{8}��:sdY�\nXWsb�Il\u{2}n���&��\u{3} �\u{c}�=S��a\u{3}`��\"������x\u{6}��\u{19}?����\u{2}\u{17}\u{1e}Ф���K\u{a0}ǒ�\u{10}�Tm�r��r\u{e}{\u{3}�XX��P,N�\u{1d}�\tn��\u{19}Jʘ5\u{1}&�Z�0v�x\u{1b}\u{12}e��\u{19}�\u{7}��C,0�f�?Au����\u{c}n\u{12}����j�=6�\u{12}�J\u{1c}��\u{0}��\u{1b}����C��,\u{16}����Qk��Y��,\"&�\u{16}ѳ\u{c}/�ҟ`���A\n���b�S�\u{35d}.\u{c}\u{0}�(�\u{3}D�/�|�FA\u{1f}�.�C�\u{e}j6qda�\u{15}������M���~���#n��U\u{1a}����DI\u{3}2�*6��\u{f}(z���Jw�\u{12}�\u{11}i\u{15}����\u{e}\u{2}�yv6\u{8}\u{7}�rT.��}�(��3�S���Z�%����l����mS�tY�/W\u{b}�)���\u{12}\n�\u{8}˺�#�\u{15}�\';�@�Zz��G�\"7\u{8} x�~\"��\u{1a}\u{13}�S�\u{16}�|\u{13}+PG�A\u{c}�t��m=��!�J2�8Ye\u{12}i�+!��Z�h�p�6/QW\u{2}v��\n�\u{7f}��ʹ��\u{10}�s�m�e]�v��7Fp�v�I���G\r&�py�,`\n$��w|�2�j�!E�0юk7�ȷj>!\r\u{0}�UhC��h8\u{1}��\r�#��>\u{6}{f�)��OjS�y��ߎ�\u{12}�l�\u{19}\u{13}\u{1}a�%�EV\u{7f}�O\u{17}\\\u{17}��ep\\\u{15}��cK��6��$X~\u{4}\u{5}��\u{19}2�I\u{6e0}(~H��5`Q��{��c��2\u{1e}=���8X���e�q�\u{f}��/�0z\u{7eb}`f�\u{1f}�}�Փ��Z��O�C�.�M��Ԕ0�Y�\u{32c}ǹ5�\u{8}w�\u{2}��M�\u{1b}��]�Z�\'\'�\u{f}�v��#�_��v*���\u{12}g\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\t\u{12}\u{13}\n\u{c}\n\u{5}utrst\u{12}\u{3}500\u{10}���\u{1}\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 3, 96, 147, 149, 34, 141, 191, 244, 202, 246, 158, 120, 6, 153, 247, 25, 63, 177, 233, 223, 216, 2, 23, 30, 208, 164, 223, 217, 249, 75, 194, 160, 199, 146, 220, 16, 148, 84, 109, 174, 114, 129, 248, 114, 14, 123, 3, 184, 88, 88, 132, 130, 80, 44, 78, 215, 29, 135, 9, 110, 139, 195, 25, 74, 202, 152, 53, 1, 38, 252, 90, 167, 48, 118, 210, 120, 27, 18, 101, 187, 240, 25, 222, 7, 147, 240, 67, 44, 48, 196, 102, 163, 63, 65, 117, 248, 226, 218, 195, 12, 110, 18, 164, 178, 145, 151, 106, 252, 61, 54, 144, 18, 219, 74, 28, 253, 218, 0, 156, 171, 27, 179, 173, 158, 206, 67, 157, 200, 44, 22, 165, 240, 150, 253, 235, 179, 81, 107, 155, 192, 89, 198, 237, 44, 34, 38, 245, 22, 209, 179, 12, 47, 222, 210, 159, 96, 196, 193, 166, 65, 10, 140, 210, 239, 98, 230, 83, 227, 205, 157, 46, 12, 0, 220, 40, 232, 3, 68, 160, 47, 226, 172, 124, 184, 70, 65, 31, 182, 46, 147, 67, 176, 14, 106, 54, 113, 100, 97, 186, 21, 251, 175, 255, 186, 243, 230, 77, 192, 129, 175, 126, 209, 240, 244, 35, 110, 231, 224, 85, 26, 163, 160, 198, 213, 68, 73, 3, 50, 204, 42, 54, 245, 163, 15, 40, 122, 237, 153, 228, 226, 74, 119, 187, 18, 150, 17, 105, 21, 162, 242, 230, 251, 14, 2, 160, 121, 118, 54, 8, 7, 149, 114, 84, 46, 168, 233, 169, 125, 158, 40, 183, 179, 51, 187, 83, 146, 160, 167, 90, 192, 37, 232, 247, 189, 134, 108, 169, 154, 154, 166, 109, 83, 128, 116, 89, 138, 47, 87, 11, 203, 41, 206, 247, 153, 18, 10, 216, 8, 203, 186, 225, 158, 35, 208, 21, 151, 39, 59, 156, 64, 141, 90, 122, 221, 228, 71, 169, 34, 55, 8, 32, 120, 226, 133, 126, 34, 247, 204, 26, 19, 221, 83, 142, 22, 217, 124, 19, 43, 80, 71, 199, 65, 12, 221, 116, 233, 241, 166, 142, 109, 61, 128, 165, 33, 153, 74, 50, 207, 56, 89, 101, 18, 105, 149, 43, 33, 159, 153, 90, 213, 104, 229, 112, 192, 54, 47, 81, 87, 2, 118, 138, 179, 10, 253, 127, 188, 131, 202, 185, 217, 245, 16, 182, 115, 225, 160, 109, 243, 168, 101, 93, 223, 118, 148, 170, 55, 70, 112, 170, 118, 189, 73, 191, 142, 215, 71, 13, 38, 140, 112, 121, 159, 44, 96, 10, 36, 143, 206, 119, 124, 238, 50, 188, 106, 183, 33, 69, 235, 150, 48, 209, 142, 107, 55, 152, 200, 183, 106, 62, 33, 13, 0, 194, 85, 104, 67, 153, 253, 104, 56, 1, 150, 174, 13, 204, 35, 160, 192, 62, 6, 123, 102, 145, 41, 205, 238, 79, 106, 83, 207, 121, 128, 244, 223, 142, 236, 189, 18, 207, 108, 197, 25, 19, 1, 97, 244, 37, 213, 69, 86, 127, 235, 79, 23, 92, 23, 173, 177, 101, 112, 92, 21, 147, 243, 99, 75, 140, 230, 54, 172, 220, 36, 88, 126, 4, 5, 250, 236, 25, 50, 231, 73, 219, 160, 40, 126, 72, 189, 233, 181, 53, 96, 81, 247, 146, 123, 229, 219, 99, 149, 225, 50, 30, 61, 228, 219, 194, 56, 88, 220, 193, 156, 101, 185, 113, 198, 15, 162, 154, 47, 137, 48, 122, 223, 171, 96, 102, 167, 31, 173, 125, 207, 213, 147, 177, 138, 90, 192, 158, 79, 235, 67, 133, 46, 192, 77, 188, 205, 212, 148, 48, 232, 167, 89, 133, 204, 172, 199, 185, 53, 209, 8, 119, 170, 2, 191, 165, 77, 242, 27, 249, 131, 93, 249, 90, 142, 39, 39, 133, 15, 164, 118, 131, 207, 35, 223, 95, 130, 221, 118, 42, 132, 169, 169], auto_msg: [], init_funds: [], contract_id: "router", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 9 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [50, 5, 80, 253, 229, 112, 128, 123, 10, 244, 95, 0, 110, 119, 134, 226, 178, 12, 197, 122, 69, 13, 35, 108, 213, 57, 130, 204, 163, 195, 213, 190, 89, 119, 20, 201, 224, 221, 43, 225, 88, 174, 54, 14, 159, 4, 102, 33, 119, 221, 117, 176, 199, 82, 131, 147, 47, 58, 45, 48, 46, 14, 198, 27]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"register_tokens\":[{\"address\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\"},{\"address\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\"},{\"address\":\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\"}, {\"address\":\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\",\"code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\"}]}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] instance not found in cache. building a new one
INFO  [enclave_contract_engine::module_cache] Deserializing Wasm contract
INFO  [enclave_contract_engine::module_cache] Deserialized Wasm contract
INFO  [enclave_contract_engine::module_cache] Validating WASM memory demands
INFO  [enclave_contract_engine::module_cache] Validated WASM memory demands
INFO  [enclave_contract_engine::module_cache] Trying to create Wasmi module from parity...
INFO  [enclave_contract_engine::module_cache] Created Wasmi module from parity. Now checking for floating points...
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] storing module in cache
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{5}owner" value: "\"trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\""
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [248, 112, 166, 61, 86, 159, 80, 229, 13, 26, 211, 170, 16, 161, 221, 41, 67, 79, 247, 67, 186, 37, 28, 201, 117, 105, 10, 228, 155, 241, 130, 164]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}tokens" value: "[]"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [70, 245, 139, 245, 157, 76, 239, 6, 93, 4, 96, 189, 200, 121, 254, 142, 250, 79, 221, 90, 39, 255, 232, 157, 81, 101, 217, 19, 209, 254, 14, 233]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}tokens"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [70, 245, 139, 245, 157, 76, 239, 6, 93, 4, 96, 189, 200, 121, 254, 142, 250, 79, 221, 90, 39, 255, 232, 157, 81, 101, 217, 19, 209, 254, 14, 233]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 2: '[91, 93]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}tokens" value: "[\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\"]"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [70, 245, 139, 245, 157, 76, 239, 6, 93, 4, 96, 189, 200, 121, 254, 142, 250, 79, 221, 90, 39, 255, 232, 157, 81, 101, 217, 19, 209, 254, 14, 233]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6IjhiOWE2NjJiZDQxOWRkMWYyZDIzMzVhNTg1ZTMzNzk5ZTU3ZWQ3ZjQ1MWNhODMyMzdjZmIxY2Q1MjUyYjdlMzciLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6IjhiOWE2NjJiZDQxOWRkMWYyZDIzMzVhNTg1ZTMzNzk5ZTU3ZWQ3ZjQ1MWNhODMyMzdjZmIxY2Q1MjUyYjdlMzciLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6IjhiOWE2NjJiZDQxOWRkMWYyZDIzMzVhNTg1ZTMzNzk5ZTU3ZWQ3ZjQ1MWNhODMyMzdjZmIxY2Q1MjUyYjdlMzciLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6IjhiOWE2NjJiZDQxOWRkMWYyZDIzMzVhNTg1ZTMzNzk5ZTU3ZWQ3ZjQ1MWNhODMyMzdjZmIxY2Q1MjUyYjdlMzciLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAgUm91dGVyIiwicGFkZGluZyI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}}],\"log\":[]}}"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [Wasm(Execute { contract_addr: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72]), send: [], callback_sig: Some([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23]) }), Wasm(Execute { contract_addr: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29]), send: [], callback_sig: Some([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44]) }), Wasm(Execute { contract_addr: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72]), send: [], callback_sig: Some([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23]) }), Wasm(Execute { contract_addr: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29]), send: [], callback_sig: Some([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44]) }), Wasm(Execute { contract_addr: HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72]), send: [], callback_sig: Some([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23]) }), Wasm(Execute { contract_addr: HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29]), send: [], callback_sig: Some([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44]) }), Wasm(Execute { contract_addr: HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72]), send: [], callback_sig: Some([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23]) }), Wasm(Execute { contract_addr: HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29]), send: [], callback_sig: Some([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44]) })], log: [], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm") }, contract_key: Some("OdIncD8dP7twHPxsb4Tlt9kSojCI83JMamJMGICGJjvaqH46BAbZOI2OmZzZyJmis2A8ZJ1Mj5Ltoi36buztlA=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVJCsKasgk8k3GS3Q8ywNrgCWBqvNlmcjAICs8QQkFM37sF4sV5HXsjAzb9gB0RCNTw9hEPsrUwtVVZ+MW9LBxw7Lsw36Im9ome4eG/yxrJBYuJqYSFk+eUargO3KmvPQbEoomvTpNjHP7RPlsu3RbxxBxjbM8DxztbllJbmBUIerQman6z47F0E6C0wCm1w3GlkbRz8cxPktkdYQ9Hn3Zp2GD2JghOR7HdsCcOAR6gd0VHKJ94wAYro2iI6ByXoTTCqpnuZiQ3705GRAIfEGk8MtL9K9oQUbtaABKaJ/zptrYVyRtbkZFCNleFum24k9mHaA5boNv7KaqyrEhVBAeFRYDGcduGqPTuKjxtZU4StmvaqEsEKBLNlQ63TzNo7jmOr/jy/yJkx9c+peio6RIB3TO3VTLWoP3n3Xct+93uN98LssHqVXALyM9KLJjeuSA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"register_receive\":{\"code_hash\":\"8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37\",\"padding\":null}}                                                                                                                                            "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "39d227703f1d3fbb701cfc6c6f84e5b7d912a23088f3724c6a624c188086263bdaa87e3a0406d9388d8e999cd9c899a2b3603c649d4c8f92eda22dfa6eeced94"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [91, 236, 157, 51, 177, 120, 24, 141, 181, 38, 19, 54, 151, 253, 35, 2, 121, 76, 179, 38, 94, 179, 127, 177, 175, 232, 221, 160, 251, 49, 224, 17]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\treceiverstrust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e" value: "8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [186, 166, 131, 237, 170, 41, 130, 152, 254, 236, 217, 153, 14, 60, 253, 151, 228, 78, 111, 169, 36, 225, 179, 87, 161, 141, 216, 248, 13, 110, 20, 56]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"register_status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}],\"data\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7InN0YXR1cyI6InN1Y2Nlc3MifX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [LogAttribute { key: "cU1nEeT4e6F9wXLhJko5niXW8HfxYjkhd2RkRzVGzA==", value: [186, 31, 89, 22, 97, 216, 200, 71, 82, 211, 103, 82, 246, 248, 87, 161, 167, 18, 215, 169, 132, 190, 194], pub_db: false, acc_pub_db: false, encrypted: true }], data: Some(Binary([107, 117, 208, 181, 7, 1, 147, 25, 86, 182, 211, 17, 82, 255, 2, 248, 194, 86, 134, 215, 134, 16, 245, 232, 229, 93, 101, 108, 130, 31, 45, 226, 244, 212, 68, 169, 142, 86, 15, 137, 189, 77, 35, 11, 198, 164, 206, 131, 64, 211, 255, 67, 230, 128, 72, 234, 252, 145, 242, 195, 29, 138, 74, 226, 200, 203, 141, 220, 97, 26, 215, 20, 113, 231, 48, 104, 203, 101, 189, 53, 72, 70, 191, 157, 235, 206, 116, 46, 168, 160, 8, 55, 64, 166, 179, 95, 34, 251, 85, 246, 184, 246, 94, 193, 174, 29, 198, 144, 22, 83, 12, 241, 140, 42, 182, 243, 66, 97, 199, 218, 234, 116, 75, 98, 229, 195, 65, 7, 122, 65, 126, 4, 249, 32, 138, 141, 236, 115, 1, 141, 175, 233, 242, 191, 122, 188, 148, 148, 85, 236, 232, 15, 178, 111, 225, 103, 177, 169, 201, 206, 201, 34, 78, 88, 1, 130, 240, 170, 184, 98, 222, 202, 202, 147, 93, 11, 37, 78, 153, 152, 54, 225, 87, 175, 17, 32, 10, 179, 58, 247, 171, 220, 10, 29, 165, 176, 46, 230, 80, 12, 150, 55, 91, 234, 93, 116, 70, 86, 76, 233, 205, 106, 42, 70, 111, 150, 83, 47, 75, 42, 58, 16, 74, 188, 167, 15, 227, 131, 234, 252, 201, 142, 24, 129, 142, 91, 227, 40, 216, 221, 249, 131, 135, 10, 30, 183, 43, 17, 61, 10, 77, 156, 28, 127, 125, 224, 156, 255, 153, 108, 225, 238, 64, 64, 7, 57, 77, 59, 161, 80, 20, 50, 49, 19, 49, 200, 210, 143, 227, 38, 59, 12, 193, 48, 179, 188, 132, 73, 138, 7, 113, 136, 170, 43, 130, 66, 126, 168, 213, 187, 234, 0, 20, 2, 82, 178, 31, 153, 179, 61, 149, 199, 231, 197, 94, 40, 212, 233, 15, 8, 1, 163, 99, 9, 58, 110, 233, 50, 100, 4, 94, 47, 71, 167, 162, 191, 98, 120, 17, 2, 229, 182, 28, 19, 178, 65, 144, 235, 46, 252, 201, 155, 36, 175, 246, 237, 58, 120, 205, 47])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm") }, contract_key: Some("OdIncD8dP7twHPxsb4Tlt9kSojCI83JMamJMGICGJjvaqH46BAbZOI2OmZzZyJmis2A8ZJ1Mj5Ltoi36buztlA=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVDl7140shzIl8tbCxlN/yxhPRZRu7YKYJ+GIl8DWYMok4gN/axn74PsZuBSyAYVSMZErj/eF04XA1gmfx/+n0G2C67hIW+YLZyHPtKJHovTYYRJlPvfrhXE8D7K3zXygsKkvnHgcPFOt0SvoxKVY7fSocDihvbGy9pSFq5P5CPSi1e5ij2BZw99ATQTnM9eW3gtm9B9S9ccXRPlNRvY3exIovgS0p2hoYzmAzpUurtFCljQt4ENThW2RvEsz2AWsREeYqCCqHxQI5ypQl4Fnw8Zy3Cw5TzrSTLLhLju5dBRDW73o/rRe31CeKvkFewpJVaoMYKbZJMWiUemL8kDLxeZvdyNRn/ZD8I93AoUrU67ZfTrbqnsdbOhjmRH0B5uM8ZGTwZrzkIYfiQFs245n3n30WMxb0o7JiZmygpuEdVlZtfAYWMxigLeJNDnBYLJHQ=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"set_viewing_key\":{\"key\":\"BackSwap Router\",\"padding\":null}}                                                                                                                                                                                                    "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "39d227703f1d3fbb701cfc6c6f84e5b7d912a23088f3724c6a624c188086263bdaa87e3a0406d9388d8e999cd9c899a2b3603c649d4c8f92eda22dfa6eeced94"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [91, 236, 157, 51, 177, 120, 24, 141, 181, 38, 19, 54, 151, 253, 35, 2, 121, 76, 179, 38, 94, 179, 127, 177, 175, 232, 221, 160, 251, 49, 224, 17]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\nviewingkey�#&\u{7f}B���j�\u{14}�\u{1}��\u{b}U\u{19}��" value: "�\t����DU���\u{0}\u{8}��o\u{1c}�vYh3y��l�\\����"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [24, 135, 249, 10, 153, 130, 192, 42, 153, 82, 51, 7, 84, 96, 118, 93, 226, 196, 122, 35, 154, 114, 151, 244, 87, 28, 204, 255, 255, 155, 164, 235]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[],\"data\":\"eyJzZXRfdmlld2luZ19rZXkiOnsic3RhdHVzIjoic3VjY2VzcyJ9fSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: Some(Binary([194, 166, 37, 82, 217, 51, 191, 182, 49, 215, 52, 95, 244, 241, 59, 232, 82, 211, 65, 83, 130, 215, 211, 103, 82, 124, 251, 117, 159, 119, 37, 186, 141, 66, 134, 233, 113, 29, 239, 196, 93, 209, 156, 66, 182, 197, 217, 69, 3, 216, 199, 54, 78, 226, 61, 125, 187, 70, 40, 228, 117, 139, 242, 211, 69, 11, 52, 53, 79, 44, 45, 163, 253, 72, 195, 146, 55, 233, 72, 249, 7, 68, 65, 100, 132, 149, 197, 106, 244, 178, 10, 140, 40, 100, 232, 215, 197, 182, 192, 209, 86, 37, 119, 63, 135, 15, 71, 205, 132, 185, 37, 181, 170, 181, 172, 146, 53, 224, 49, 89, 184, 123, 14, 106, 217, 129, 22, 205, 125, 236, 44, 170, 18, 221, 16, 159, 198, 213, 190, 145, 14, 192, 188, 177, 202, 67, 114, 53, 53, 57, 55, 14, 2, 113, 97, 82, 61, 120, 47, 179, 184, 50, 65, 4, 157, 2, 115, 172, 68, 235, 217, 218, 142, 39, 37, 42, 235, 174, 121, 86, 9, 68, 60, 248, 192, 109, 77, 23, 247, 105, 214, 155, 56, 11, 99, 143, 56, 161, 74, 208, 141, 58, 187, 54, 153, 222, 141, 45, 225, 135, 189, 155, 253, 104, 167, 83, 7, 101, 12, 12, 198, 212, 30, 176, 24, 130, 161, 199, 190, 99, 118, 40, 212, 125, 241, 145, 103, 181, 58, 85, 26, 85, 56, 226, 104, 57, 33, 62, 76, 238, 157, 34, 199, 133, 113, 33, 141, 159, 32, 175, 147, 87, 150, 188, 70, 93, 18, 64, 249, 160, 127, 73, 252, 101, 177, 31, 24, 180, 11, 41, 95, 188, 133, 130, 20, 85, 193, 245, 238, 209, 50, 47, 114, 195, 175, 125, 178, 20, 58, 108, 48, 24, 173, 26, 5, 54, 189, 162, 121, 17, 222, 179, 48, 243, 18, 253, 61, 237, 38, 55, 55, 124, 219, 5, 97, 137, 28, 26, 198, 174, 148, 33, 102, 18, 110, 2, 151, 25, 231, 40, 226, 190, 178, 47, 227, 35, 120, 66, 71, 198, 167, 177, 24, 17, 58, 222, 29, 179, 72, 200])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh") }, contract_key: Some("1dlCRcd3x/shWByvZaGXfozYlQwahvKPoJDmqtVrnW76ZAB0oZM+kAAiDeA2oS8xU960V7wCcDWN+MRGoWH9Mw=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVJCsKasgk8k3GS3Q8ywNrgCWBqvNlmcjAICs8QQkFM37sF4sV5HXsjAzb9gB0RCNTw9hEPsrUwtVVZ+MW9LBxw7Lsw36Im9ome4eG/yxrJBYuJqYSFk+eUargO3KmvPQbEoomvTpNjHP7RPlsu3RbxxBxjbM8DxztbllJbmBUIerQman6z47F0E6C0wCm1w3GlkbRz8cxPktkdYQ9Hn3Zp2GD2JghOR7HdsCcOAR6gd0VHKJ94wAYro2iI6ByXoTTCqpnuZiQ3705GRAIfEGk8MtL9K9oQUbtaABKaJ/zptrYVyRtbkZFCNleFum24k9mHaA5boNv7KaqyrEhVBAeFRYDGcduGqPTuKjxtZU4StmvaqEsEKBLNlQ63TzNo7jmOr/jy/yJkx9c+peio6RIB3TO3VTLWoP3n3Xct+93uN98LssHqVXALyM9KLJjeuSA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"register_receive\":{\"code_hash\":\"8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37\",\"padding\":null}}                                                                                                                                            "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "d5d94245c777c7fb21581caf65a1977e8cd8950c1a86f28fa090e6aad56b9d6efa640074a1933e9000220de036a12f3153deb457bc0270358df8c446a161fd33"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [209, 71, 30, 208, 179, 35, 93, 129, 9, 171, 33, 17, 160, 42, 22, 55, 104, 220, 250, 108, 38, 164, 229, 162, 16, 213, 132, 231, 198, 36, 53, 50]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\treceiverstrust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e" value: "8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [136, 7, 233, 241, 189, 106, 148, 63, 111, 120, 150, 166, 208, 160, 71, 75, 96, 13, 205, 17, 163, 183, 94, 195, 115, 176, 239, 44, 252, 164, 119, 126]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"register_status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}],\"data\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7InN0YXR1cyI6InN1Y2Nlc3MifX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [LogAttribute { key: "cU1nEeT4e6F9wXLhJko5niXW8HfxYjkhd2RkRzVGzA==", value: [186, 31, 89, 22, 97, 216, 200, 71, 82, 211, 103, 82, 246, 248, 87, 161, 167, 18, 215, 169, 132, 190, 194], pub_db: false, acc_pub_db: false, encrypted: true }], data: Some(Binary([107, 117, 208, 181, 7, 1, 147, 25, 86, 182, 211, 17, 82, 255, 2, 248, 194, 86, 134, 215, 134, 16, 245, 232, 229, 93, 101, 108, 130, 31, 45, 226, 244, 212, 68, 169, 142, 86, 15, 137, 189, 77, 35, 11, 198, 164, 206, 131, 64, 211, 255, 67, 230, 128, 72, 234, 252, 145, 242, 195, 29, 138, 74, 226, 200, 203, 141, 220, 97, 26, 215, 20, 113, 231, 48, 104, 203, 101, 189, 53, 72, 70, 191, 157, 235, 206, 116, 46, 168, 160, 8, 55, 64, 166, 179, 95, 34, 251, 85, 246, 184, 246, 94, 193, 174, 29, 198, 144, 22, 83, 12, 241, 140, 42, 182, 243, 66, 97, 199, 218, 234, 116, 75, 98, 229, 195, 65, 7, 122, 65, 126, 4, 249, 32, 138, 141, 236, 115, 1, 141, 175, 233, 242, 191, 122, 188, 148, 148, 85, 236, 232, 15, 178, 111, 225, 103, 177, 169, 201, 206, 201, 34, 78, 88, 1, 130, 240, 170, 184, 98, 222, 202, 202, 147, 93, 11, 37, 78, 153, 152, 54, 225, 87, 175, 17, 32, 10, 179, 58, 247, 171, 220, 10, 29, 165, 176, 46, 230, 80, 12, 150, 55, 91, 234, 93, 116, 70, 86, 76, 233, 205, 106, 42, 70, 111, 150, 83, 47, 75, 42, 58, 16, 74, 188, 167, 15, 227, 131, 234, 252, 201, 142, 24, 129, 142, 91, 227, 40, 216, 221, 249, 131, 135, 10, 30, 183, 43, 17, 61, 10, 77, 156, 28, 127, 125, 224, 156, 255, 153, 108, 225, 238, 64, 64, 7, 57, 77, 59, 161, 80, 20, 50, 49, 19, 49, 200, 210, 143, 227, 38, 59, 12, 193, 48, 179, 188, 132, 73, 138, 7, 113, 136, 170, 43, 130, 66, 126, 168, 213, 187, 234, 0, 20, 2, 82, 178, 31, 153, 179, 61, 149, 199, 231, 197, 94, 40, 212, 233, 15, 8, 1, 163, 99, 9, 58, 110, 233, 50, 100, 4, 94, 47, 71, 167, 162, 191, 98, 120, 17, 2, 229, 182, 28, 19, 178, 65, 144, 235, 46, 252, 201, 155, 36, 175, 246, 237, 58, 120, 205, 47])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh") }, contract_key: Some("1dlCRcd3x/shWByvZaGXfozYlQwahvKPoJDmqtVrnW76ZAB0oZM+kAAiDeA2oS8xU960V7wCcDWN+MRGoWH9Mw=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVDl7140shzIl8tbCxlN/yxhPRZRu7YKYJ+GIl8DWYMok4gN/axn74PsZuBSyAYVSMZErj/eF04XA1gmfx/+n0G2C67hIW+YLZyHPtKJHovTYYRJlPvfrhXE8D7K3zXygsKkvnHgcPFOt0SvoxKVY7fSocDihvbGy9pSFq5P5CPSi1e5ij2BZw99ATQTnM9eW3gtm9B9S9ccXRPlNRvY3exIovgS0p2hoYzmAzpUurtFCljQt4ENThW2RvEsz2AWsREeYqCCqHxQI5ypQl4Fnw8Zy3Cw5TzrSTLLhLju5dBRDW73o/rRe31CeKvkFewpJVaoMYKbZJMWiUemL8kDLxeZvdyNRn/ZD8I93AoUrU67ZfTrbqnsdbOhjmRH0B5uM8ZGTwZrzkIYfiQFs245n3n30WMxb0o7JiZmygpuEdVlZtfAYWMxigLeJNDnBYLJHQ=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"set_viewing_key\":{\"key\":\"BackSwap Router\",\"padding\":null}}                                                                                                                                                                                                    "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "d5d94245c777c7fb21581caf65a1977e8cd8950c1a86f28fa090e6aad56b9d6efa640074a1933e9000220de036a12f3153deb457bc0270358df8c446a161fd33"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [209, 71, 30, 208, 179, 35, 93, 129, 9, 171, 33, 17, 160, 42, 22, 55, 104, 220, 250, 108, 38, 164, 229, 162, 16, 213, 132, 231, 198, 36, 53, 50]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\nviewingkey�#&\u{7f}B���j�\u{14}�\u{1}��\u{b}U\u{19}��" value: "�\t����DU���\u{0}\u{8}��o\u{1c}�vYh3y��l�\\����"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [246, 43, 252, 81, 111, 131, 24, 19, 126, 88, 189, 151, 25, 29, 188, 80, 219, 180, 219, 94, 88, 138, 119, 21, 234, 137, 12, 121, 69, 207, 17, 12]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[],\"data\":\"eyJzZXRfdmlld2luZ19rZXkiOnsic3RhdHVzIjoic3VjY2VzcyJ9fSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: Some(Binary([194, 166, 37, 82, 217, 51, 191, 182, 49, 215, 52, 95, 244, 241, 59, 232, 82, 211, 65, 83, 130, 215, 211, 103, 82, 124, 251, 117, 159, 119, 37, 186, 141, 66, 134, 233, 113, 29, 239, 196, 93, 209, 156, 66, 182, 197, 217, 69, 3, 216, 199, 54, 78, 226, 61, 125, 187, 70, 40, 228, 117, 139, 242, 211, 69, 11, 52, 53, 79, 44, 45, 163, 253, 72, 195, 146, 55, 233, 72, 249, 7, 68, 65, 100, 132, 149, 197, 106, 244, 178, 10, 140, 40, 100, 232, 215, 197, 182, 192, 209, 86, 37, 119, 63, 135, 15, 71, 205, 132, 185, 37, 181, 170, 181, 172, 146, 53, 224, 49, 89, 184, 123, 14, 106, 217, 129, 22, 205, 125, 236, 44, 170, 18, 221, 16, 159, 198, 213, 190, 145, 14, 192, 188, 177, 202, 67, 114, 53, 53, 57, 55, 14, 2, 113, 97, 82, 61, 120, 47, 179, 184, 50, 65, 4, 157, 2, 115, 172, 68, 235, 217, 218, 142, 39, 37, 42, 235, 174, 121, 86, 9, 68, 60, 248, 192, 109, 77, 23, 247, 105, 214, 155, 56, 11, 99, 143, 56, 161, 74, 208, 141, 58, 187, 54, 153, 222, 141, 45, 225, 135, 189, 155, 253, 104, 167, 83, 7, 101, 12, 12, 198, 212, 30, 176, 24, 130, 161, 199, 190, 99, 118, 40, 212, 125, 241, 145, 103, 181, 58, 85, 26, 85, 56, 226, 104, 57, 33, 62, 76, 238, 157, 34, 199, 133, 113, 33, 141, 159, 32, 175, 147, 87, 150, 188, 70, 93, 18, 64, 249, 160, 127, 73, 252, 101, 177, 31, 24, 180, 11, 41, 95, 188, 133, 130, 20, 85, 193, 245, 238, 209, 50, 47, 114, 195, 175, 125, 178, 20, 58, 108, 48, 24, 173, 26, 5, 54, 189, 162, 121, 17, 222, 179, 48, 243, 18, 253, 61, 237, 38, 55, 55, 124, 219, 5, 97, 137, 28, 26, 198, 174, 148, 33, 102, 18, 110, 2, 151, 25, 231, 40, 226, 190, 178, 47, 227, 35, 120, 66, 71, 198, 167, 177, 24, 17, 58, 222, 29, 179, 72, 200])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw") }, contract_key: Some("jwDTFpwZjLBTqHRu9nDgBmGyxTOAZUSMuwdIq77MaLmbiSF+27Dodqii2p68WZcgtDSiVLeom5IBW62ygRAbkg=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVJCsKasgk8k3GS3Q8ywNrgCWBqvNlmcjAICs8QQkFM37sF4sV5HXsjAzb9gB0RCNTw9hEPsrUwtVVZ+MW9LBxw7Lsw36Im9ome4eG/yxrJBYuJqYSFk+eUargO3KmvPQbEoomvTpNjHP7RPlsu3RbxxBxjbM8DxztbllJbmBUIerQman6z47F0E6C0wCm1w3GlkbRz8cxPktkdYQ9Hn3Zp2GD2JghOR7HdsCcOAR6gd0VHKJ94wAYro2iI6ByXoTTCqpnuZiQ3705GRAIfEGk8MtL9K9oQUbtaABKaJ/zptrYVyRtbkZFCNleFum24k9mHaA5boNv7KaqyrEhVBAeFRYDGcduGqPTuKjxtZU4StmvaqEsEKBLNlQ63TzNo7jmOr/jy/yJkx9c+peio6RIB3TO3VTLWoP3n3Xct+93uN98LssHqVXALyM9KLJjeuSA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"register_receive\":{\"code_hash\":\"8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37\",\"padding\":null}}                                                                                                                                            "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "8f00d3169c198cb053a8746ef670e00661b2c5338065448cbb0748abbecc68b99b89217edbb0e876a8a2da9ebc599720b434a254b7a89b92015badb281101b92"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [244, 133, 138, 201, 228, 233, 229, 43, 200, 10, 35, 3, 50, 208, 223, 85, 240, 118, 8, 241, 25, 89, 154, 20, 233, 76, 190, 176, 255, 103, 228, 132]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\treceiverstrust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e" value: "8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [84, 93, 143, 194, 228, 101, 254, 87, 43, 48, 62, 135, 142, 232, 80, 185, 17, 89, 37, 151, 12, 144, 123, 228, 192, 15, 56, 223, 176, 119, 115, 237]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"register_status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}],\"data\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7InN0YXR1cyI6InN1Y2Nlc3MifX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [LogAttribute { key: "cU1nEeT4e6F9wXLhJko5niXW8HfxYjkhd2RkRzVGzA==", value: [186, 31, 89, 22, 97, 216, 200, 71, 82, 211, 103, 82, 246, 248, 87, 161, 167, 18, 215, 169, 132, 190, 194], pub_db: false, acc_pub_db: false, encrypted: true }], data: Some(Binary([107, 117, 208, 181, 7, 1, 147, 25, 86, 182, 211, 17, 82, 255, 2, 248, 194, 86, 134, 215, 134, 16, 245, 232, 229, 93, 101, 108, 130, 31, 45, 226, 244, 212, 68, 169, 142, 86, 15, 137, 189, 77, 35, 11, 198, 164, 206, 131, 64, 211, 255, 67, 230, 128, 72, 234, 252, 145, 242, 195, 29, 138, 74, 226, 200, 203, 141, 220, 97, 26, 215, 20, 113, 231, 48, 104, 203, 101, 189, 53, 72, 70, 191, 157, 235, 206, 116, 46, 168, 160, 8, 55, 64, 166, 179, 95, 34, 251, 85, 246, 184, 246, 94, 193, 174, 29, 198, 144, 22, 83, 12, 241, 140, 42, 182, 243, 66, 97, 199, 218, 234, 116, 75, 98, 229, 195, 65, 7, 122, 65, 126, 4, 249, 32, 138, 141, 236, 115, 1, 141, 175, 233, 242, 191, 122, 188, 148, 148, 85, 236, 232, 15, 178, 111, 225, 103, 177, 169, 201, 206, 201, 34, 78, 88, 1, 130, 240, 170, 184, 98, 222, 202, 202, 147, 93, 11, 37, 78, 153, 152, 54, 225, 87, 175, 17, 32, 10, 179, 58, 247, 171, 220, 10, 29, 165, 176, 46, 230, 80, 12, 150, 55, 91, 234, 93, 116, 70, 86, 76, 233, 205, 106, 42, 70, 111, 150, 83, 47, 75, 42, 58, 16, 74, 188, 167, 15, 227, 131, 234, 252, 201, 142, 24, 129, 142, 91, 227, 40, 216, 221, 249, 131, 135, 10, 30, 183, 43, 17, 61, 10, 77, 156, 28, 127, 125, 224, 156, 255, 153, 108, 225, 238, 64, 64, 7, 57, 77, 59, 161, 80, 20, 50, 49, 19, 49, 200, 210, 143, 227, 38, 59, 12, 193, 48, 179, 188, 132, 73, 138, 7, 113, 136, 170, 43, 130, 66, 126, 168, 213, 187, 234, 0, 20, 2, 82, 178, 31, 153, 179, 61, 149, 199, 231, 197, 94, 40, 212, 233, 15, 8, 1, 163, 99, 9, 58, 110, 233, 50, 100, 4, 94, 47, 71, 167, 162, 191, 98, 120, 17, 2, 229, 182, 28, 19, 178, 65, 144, 235, 46, 252, 201, 155, 36, 175, 246, 237, 58, 120, 205, 47])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust1hqrdl6wstt8qzshwc6mrumpjk9338k0l2gn4jw") }, contract_key: Some("jwDTFpwZjLBTqHRu9nDgBmGyxTOAZUSMuwdIq77MaLmbiSF+27Dodqii2p68WZcgtDSiVLeom5IBW62ygRAbkg=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVDl7140shzIl8tbCxlN/yxhPRZRu7YKYJ+GIl8DWYMok4gN/axn74PsZuBSyAYVSMZErj/eF04XA1gmfx/+n0G2C67hIW+YLZyHPtKJHovTYYRJlPvfrhXE8D7K3zXygsKkvnHgcPFOt0SvoxKVY7fSocDihvbGy9pSFq5P5CPSi1e5ij2BZw99ATQTnM9eW3gtm9B9S9ccXRPlNRvY3exIovgS0p2hoYzmAzpUurtFCljQt4ENThW2RvEsz2AWsREeYqCCqHxQI5ypQl4Fnw8Zy3Cw5TzrSTLLhLju5dBRDW73o/rRe31CeKvkFewpJVaoMYKbZJMWiUemL8kDLxeZvdyNRn/ZD8I93AoUrU67ZfTrbqnsdbOhjmRH0B5uM8ZGTwZrzkIYfiQFs245n3n30WMxb0o7JiZmygpuEdVlZtfAYWMxigLeJNDnBYLJHQ=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"set_viewing_key\":{\"key\":\"BackSwap Router\",\"padding\":null}}                                                                                                                                                                                                    "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "8f00d3169c198cb053a8746ef670e00661b2c5338065448cbb0748abbecc68b99b89217edbb0e876a8a2da9ebc599720b434a254b7a89b92015badb281101b92"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [244, 133, 138, 201, 228, 233, 229, 43, 200, 10, 35, 3, 50, 208, 223, 85, 240, 118, 8, 241, 25, 89, 154, 20, 233, 76, 190, 176, 255, 103, 228, 132]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\nviewingkey�#&\u{7f}B���j�\u{14}�\u{1}��\u{b}U\u{19}��" value: "�\t����DU���\u{0}\u{8}��o\u{1c}�vYh3y��l�\\����"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [71, 22, 222, 239, 225, 172, 33, 28, 0, 228, 75, 61, 199, 25, 23, 61, 251, 244, 125, 101, 104, 101, 86, 122, 210, 162, 221, 196, 147, 61, 178, 157]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[],\"data\":\"eyJzZXRfdmlld2luZ19rZXkiOnsic3RhdHVzIjoic3VjY2VzcyJ9fSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: Some(Binary([194, 166, 37, 82, 217, 51, 191, 182, 49, 215, 52, 95, 244, 241, 59, 232, 82, 211, 65, 83, 130, 215, 211, 103, 82, 124, 251, 117, 159, 119, 37, 186, 141, 66, 134, 233, 113, 29, 239, 196, 93, 209, 156, 66, 182, 197, 217, 69, 3, 216, 199, 54, 78, 226, 61, 125, 187, 70, 40, 228, 117, 139, 242, 211, 69, 11, 52, 53, 79, 44, 45, 163, 253, 72, 195, 146, 55, 233, 72, 249, 7, 68, 65, 100, 132, 149, 197, 106, 244, 178, 10, 140, 40, 100, 232, 215, 197, 182, 192, 209, 86, 37, 119, 63, 135, 15, 71, 205, 132, 185, 37, 181, 170, 181, 172, 146, 53, 224, 49, 89, 184, 123, 14, 106, 217, 129, 22, 205, 125, 236, 44, 170, 18, 221, 16, 159, 198, 213, 190, 145, 14, 192, 188, 177, 202, 67, 114, 53, 53, 57, 55, 14, 2, 113, 97, 82, 61, 120, 47, 179, 184, 50, 65, 4, 157, 2, 115, 172, 68, 235, 217, 218, 142, 39, 37, 42, 235, 174, 121, 86, 9, 68, 60, 248, 192, 109, 77, 23, 247, 105, 214, 155, 56, 11, 99, 143, 56, 161, 74, 208, 141, 58, 187, 54, 153, 222, 141, 45, 225, 135, 189, 155, 253, 104, 167, 83, 7, 101, 12, 12, 198, 212, 30, 176, 24, 130, 161, 199, 190, 99, 118, 40, 212, 125, 241, 145, 103, 181, 58, 85, 26, 85, 56, 226, 104, 57, 33, 62, 76, 238, 157, 34, 199, 133, 113, 33, 141, 159, 32, 175, 147, 87, 150, 188, 70, 93, 18, 64, 249, 160, 127, 73, 252, 101, 177, 31, 24, 180, 11, 41, 95, 188, 133, 130, 20, 85, 193, 245, 238, 209, 50, 47, 114, 195, 175, 125, 178, 20, 58, 108, 48, 24, 173, 26, 5, 54, 189, 162, 121, 17, 222, 179, 48, 243, 18, 253, 61, 237, 38, 55, 55, 124, 219, 5, 97, 137, 28, 26, 198, 174, 148, 33, 102, 18, 110, 2, 151, 25, 231, 40, 226, 190, 178, 47, 227, 35, 120, 66, 71, 198, 167, 177, 24, 17, 58, 222, 29, 179, 72, 200])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj") }, contract_key: Some("Xg1NYxQxuq2xV44Q2fbclvd86rUa8gCpXpcFGbMA9rihriilOZpw6IdF+HQpMW04H9O/cHenpzNs5c12ZOSyhw=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVJCsKasgk8k3GS3Q8ywNrgCWBqvNlmcjAICs8QQkFM37sF4sV5HXsjAzb9gB0RCNTw9hEPsrUwtVVZ+MW9LBxw7Lsw36Im9ome4eG/yxrJBYuJqYSFk+eUargO3KmvPQbEoomvTpNjHP7RPlsu3RbxxBxjbM8DxztbllJbmBUIerQman6z47F0E6C0wCm1w3GlkbRz8cxPktkdYQ9Hn3Zp2GD2JghOR7HdsCcOAR6gd0VHKJ94wAYro2iI6ByXoTTCqpnuZiQ3705GRAIfEGk8MtL9K9oQUbtaABKaJ/zptrYVyRtbkZFCNleFum24k9mHaA5boNv7KaqyrEhVBAeFRYDGcduGqPTuKjxtZU4StmvaqEsEKBLNlQ63TzNo7jmOr/jy/yJkx9c+peio6RIB3TO3VTLWoP3n3Xct+93uN98LssHqVXALyM9KLJjeuSA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([52, 63, 164, 50, 199, 240, 48, 18, 10, 230, 105, 222, 25, 141, 182, 94, 228, 79, 43, 122, 115, 217, 244, 112, 45, 122, 20, 228, 202, 146, 230, 23])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [82, 66, 176, 166, 172, 130, 79, 36, 220, 100, 183, 67, 204, 176, 54, 184, 2, 88, 26, 175, 54, 89, 156, 140, 2, 2, 179, 196, 16, 144, 83, 55, 238, 193, 120, 177, 94, 71, 94, 200, 192, 205, 191, 96, 7, 68, 66, 53, 60, 61, 132, 67, 236, 173, 76, 45, 85, 86, 126, 49, 111, 75, 7, 28, 59, 46, 204, 55, 232, 137, 189, 162, 103, 184, 120, 111, 242, 198, 178, 65, 98, 226, 106, 97, 33, 100, 249, 229, 26, 174, 3, 183, 42, 107, 207, 65, 177, 40, 162, 107, 211, 164, 216, 199, 63, 180, 79, 150, 203, 183, 69, 188, 113, 7, 24, 219, 51, 192, 241, 206, 214, 229, 148, 150, 230, 5, 66, 30, 173, 9, 154, 159, 172, 248, 236, 93, 4, 232, 45, 48, 10, 109, 112, 220, 105, 100, 109, 28, 252, 115, 19, 228, 182, 71, 88, 67, 209, 231, 221, 154, 118, 24, 61, 137, 130, 19, 145, 236, 119, 108, 9, 195, 128, 71, 168, 29, 209, 81, 202, 39, 222, 48, 1, 138, 232, 218, 34, 58, 7, 37, 232, 77, 48, 170, 166, 123, 153, 137, 13, 251, 211, 145, 145, 0, 135, 196, 26, 79, 12, 180, 191, 74, 246, 132, 20, 110, 214, 128, 4, 166, 137, 255, 58, 109, 173, 133, 114, 70, 214, 228, 100, 80, 141, 149, 225, 110, 155, 110, 36, 246, 97, 218, 3, 150, 232, 54, 254, 202, 106, 172, 171, 18, 21, 65, 1, 225, 81, 96, 49, 156, 118, 225, 170, 61, 59, 138, 143, 27, 89, 83, 132, 173, 154, 246, 170, 18, 193, 10, 4, 179, 101, 67, 173, 211, 204, 218, 59, 142, 99, 171, 254, 60, 191, 200, 153, 49, 245, 207, 169, 122, 42, 58, 68, 128, 119, 76, 237, 213, 76, 181, 168, 63, 121, 247, 93, 203, 126, 247, 123, 141, 247, 194, 236, 176, 122, 149, 92, 2, 242, 51, 210, 139, 38, 55, 174, 72] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"register_receive\":{\"code_hash\":\"8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37\",\"padding\":null}}                                                                                                                                            "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "5e0d4d631431baadb1578e10d9f6dc96f77ceab51af200a95e970519b300f6b8a1ae28a5399a70e88745f87429316d381fd3bf7077a7a7336ce5cd7664e4b287"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [156, 64, 198, 130, 190, 97, 41, 166, 127, 136, 115, 33, 66, 90, 70, 139, 123, 172, 228, 16, 36, 191, 217, 226, 196, 81, 66, 9, 188, 213, 218, 177]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\treceiverstrust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e" value: "8b9a662bd419dd1f2d2335a585e33799e57ed7f451ca83237cfb1cd5252b7e37"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [52, 140, 76, 98, 51, 54, 177, 16, 130, 86, 50, 36, 68, 69, 218, 39, 89, 205, 17, 29, 27, 74, 187, 89, 69, 167, 7, 113, 156, 244, 241, 166]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"register_status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}],\"data\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7InN0YXR1cyI6InN1Y2Nlc3MifX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [LogAttribute { key: "cU1nEeT4e6F9wXLhJko5niXW8HfxYjkhd2RkRzVGzA==", value: [186, 31, 89, 22, 97, 216, 200, 71, 82, 211, 103, 82, 246, 248, 87, 161, 167, 18, 215, 169, 132, 190, 194], pub_db: false, acc_pub_db: false, encrypted: true }], data: Some(Binary([107, 117, 208, 181, 7, 1, 147, 25, 86, 182, 211, 17, 82, 255, 2, 248, 194, 86, 134, 215, 134, 16, 245, 232, 229, 93, 101, 108, 130, 31, 45, 226, 244, 212, 68, 169, 142, 86, 15, 137, 189, 77, 35, 11, 198, 164, 206, 131, 64, 211, 255, 67, 230, 128, 72, 234, 252, 145, 242, 195, 29, 138, 74, 226, 200, 203, 141, 220, 97, 26, 215, 20, 113, 231, 48, 104, 203, 101, 189, 53, 72, 70, 191, 157, 235, 206, 116, 46, 168, 160, 8, 55, 64, 166, 179, 95, 34, 251, 85, 246, 184, 246, 94, 193, 174, 29, 198, 144, 22, 83, 12, 241, 140, 42, 182, 243, 66, 97, 199, 218, 234, 116, 75, 98, 229, 195, 65, 7, 122, 65, 126, 4, 249, 32, 138, 141, 236, 115, 1, 141, 175, 233, 242, 191, 122, 188, 148, 148, 85, 236, 232, 15, 178, 111, 225, 103, 177, 169, 201, 206, 201, 34, 78, 88, 1, 130, 240, 170, 184, 98, 222, 202, 202, 147, 93, 11, 37, 78, 153, 152, 54, 225, 87, 175, 17, 32, 10, 179, 58, 247, 171, 220, 10, 29, 165, 176, 46, 230, 80, 12, 150, 55, 91, 234, 93, 116, 70, 86, 76, 233, 205, 106, 42, 70, 111, 150, 83, 47, 75, 42, 58, 16, 74, 188, 167, 15, 227, 131, 234, 252, 201, 142, 24, 129, 142, 91, 227, 40, 216, 221, 249, 131, 135, 10, 30, 183, 43, 17, 61, 10, 77, 156, 28, 127, 125, 224, 156, 255, 153, 108, 225, 238, 64, 64, 7, 57, 77, 59, 161, 80, 20, 50, 49, 19, 49, 200, 210, 143, 227, 38, 59, 12, 193, 48, 179, 188, 132, 73, 138, 7, 113, 136, 170, 43, 130, 66, 126, 168, 213, 187, 234, 0, 20, 2, 82, 178, 31, 153, 179, 61, 149, 199, 231, 197, 94, 40, 212, 233, 15, 8, 1, 163, 99, 9, 58, 110, 233, 50, 100, 4, 94, 47, 71, 167, 162, 191, 98, 120, 17, 2, 229, 182, 28, 19, 178, 65, 144, 235, 46, 252, 201, 155, 36, 175, 246, 237, 58, 120, 205, 47])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 12, time: 1656756747, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust13aktep558cx6lny74c8st5qwt0jj66zgv8qhnj") }, contract_key: Some("Xg1NYxQxuq2xV44Q2fbclvd86rUa8gCpXpcFGbMA9rihriilOZpw6IdF+HQpMW04H9O/cHenpzNs5c12ZOSyhw=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "RQIwEwVuUvkCVSmPegoSqG0WlJzgDTITX+ayXtj+CJzEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYVDl7140shzIl8tbCxlN/yxhPRZRu7YKYJ+GIl8DWYMok4gN/axn74PsZuBSyAYVSMZErj/eF04XA1gmfx/+n0G2C67hIW+YLZyHPtKJHovTYYRJlPvfrhXE8D7K3zXygsKkvnHgcPFOt0SvoxKVY7fSocDihvbGy9pSFq5P5CPSi1e5ij2BZw99ATQTnM9eW3gtm9B9S9ccXRPlNRvY3exIovgS0p2hoYzmAzpUurtFCljQt4ENThW2RvEsz2AWsREeYqCCqHxQI5ypQl4Fnw8Zy3Cw5TzrSTLLhLju5dBRDW73o/rRe31CeKvkFewpJVaoMYKbZJMWiUemL8kDLxeZvdyNRn/ZD8I93AoUrU67ZfTrbqnsdbOhjmRH0B5uM8ZGTwZrzkIYfiQFs245n3n30WMxb0o7JiZmygpuEdVlZtfAYWMxigLeJNDnBYLJHQ=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([172, 137, 23, 247, 98, 48, 250, 132, 16, 99, 20, 20, 67, 196, 67, 230, 108, 250, 6, 232, 6, 82, 11, 66, 214, 125, 49, 83, 0, 162, 38, 44])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [80, 229, 239, 94, 52, 178, 28, 200, 151, 203, 91, 11, 25, 77, 255, 44, 97, 61, 22, 81, 187, 182, 10, 96, 159, 134, 34, 95, 3, 89, 131, 40, 147, 136, 13, 253, 172, 103, 239, 131, 236, 102, 224, 82, 200, 6, 21, 72, 198, 68, 174, 63, 222, 23, 78, 23, 3, 88, 38, 127, 31, 254, 159, 65, 182, 11, 174, 225, 33, 111, 152, 45, 156, 135, 62, 210, 137, 30, 139, 211, 97, 132, 73, 148, 251, 223, 174, 21, 196, 240, 62, 202, 223, 53, 242, 130, 194, 164, 190, 113, 224, 112, 241, 78, 183, 68, 175, 163, 18, 149, 99, 183, 210, 161, 192, 226, 134, 246, 198, 203, 218, 82, 22, 174, 79, 228, 35, 210, 139, 87, 185, 138, 61, 129, 103, 15, 125, 1, 52, 19, 156, 207, 94, 91, 120, 45, 155, 208, 125, 75, 215, 28, 93, 19, 229, 53, 27, 216, 221, 236, 72, 162, 248, 18, 210, 157, 161, 161, 140, 230, 3, 58, 84, 186, 187, 69, 10, 88, 208, 183, 129, 13, 78, 21, 182, 70, 241, 44, 207, 96, 22, 177, 17, 30, 98, 160, 130, 168, 124, 80, 35, 156, 169, 66, 94, 5, 159, 15, 25, 203, 112, 176, 229, 60, 235, 73, 50, 203, 132, 184, 238, 229, 208, 81, 13, 110, 247, 163, 250, 209, 123, 125, 66, 120, 171, 228, 21, 236, 41, 37, 86, 168, 49, 130, 155, 100, 147, 22, 137, 71, 166, 47, 201, 3, 47, 23, 153, 189, 220, 141, 70, 127, 217, 15, 194, 61, 220, 10, 20, 173, 78, 187, 101, 244, 235, 110, 169, 236, 117, 179, 161, 142, 100, 71, 208, 30, 110, 51, 198, 70, 79, 6, 107, 206, 66, 24, 126, 36, 5, 179, 110, 57, 159, 121, 247, 209, 99, 49, 111, 74, 59, 38, 38, 102, 202, 10, 110, 17, 213, 101, 102, 215, 192, 97, 99, 49, 138, 2, 222, 36, 208, 231, 5, 130, 201, 29] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"set_viewing_key\":{\"key\":\"BackSwap Router\",\"padding\":null}}                                                                                                                                                                                                    "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "5e0d4d631431baadb1578e10d9f6dc96f77ceab51af200a95e970519b300f6b8a1ae28a5399a70e88745f87429316d381fd3bf7077a7a7336ce5cd7664e4b287"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [156, 64, 198, 130, 190, 97, 41, 166, 127, 136, 115, 33, 66, 90, 70, 139, 123, 172, 228, 16, 36, 191, 217, 226, 196, 81, 66, 9, 188, 213, 218, 177]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1my3jvl6zs2n27648zngqrtw8pd23nrkruhrz5e"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\nviewingkey�#&\u{7f}B���j�\u{14}�\u{1}��\u{b}U\u{19}��" value: "�\t����DU���\u{0}\u{8}��o\u{1c}�vYh3y��l�\\����"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [229, 184, 113, 255, 123, 72, 172, 247, 138, 162, 97, 13, 70, 4, 25, 199, 109, 207, 190, 115, 20, 96, 67, 194, 180, 194, 204, 72, 33, 166, 231, 97]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [69, 2, 48, 19, 5, 110, 82, 249, 2, 85, 41, 143, 122, 10, 18, 168, 109, 22, 148, 156, 224, 13, 50, 19, 95, 230, 178, 94, 216, 254, 8, 156] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [172, 63, 247, 245, 176, 194, 138, 190, 142, 93, 240, 112, 44, 25, 30, 117, 137, 39, 195, 49, 31, 1, 191, 145, 233, 53, 106, 255, 4, 225, 209, 231]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[],\"data\":\"eyJzZXRfdmlld2luZ19rZXkiOnsic3RhdHVzIjoic3VjY2VzcyJ9fSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: Some(Binary([194, 166, 37, 82, 217, 51, 191, 182, 49, 215, 52, 95, 244, 241, 59, 232, 82, 211, 65, 83, 130, 215, 211, 103, 82, 124, 251, 117, 159, 119, 37, 186, 141, 66, 134, 233, 113, 29, 239, 196, 93, 209, 156, 66, 182, 197, 217, 69, 3, 216, 199, 54, 78, 226, 61, 125, 187, 70, 40, 228, 117, 139, 242, 211, 69, 11, 52, 53, 79, 44, 45, 163, 253, 72, 195, 146, 55, 233, 72, 249, 7, 68, 65, 100, 132, 149, 197, 106, 244, 178, 10, 140, 40, 100, 232, 215, 197, 182, 192, 209, 86, 37, 119, 63, 135, 15, 71, 205, 132, 185, 37, 181, 170, 181, 172, 146, 53, 224, 49, 89, 184, 123, 14, 106, 217, 129, 22, 205, 125, 236, 44, 170, 18, 221, 16, 159, 198, 213, 190, 145, 14, 192, 188, 177, 202, 67, 114, 53, 53, 57, 55, 14, 2, 113, 97, 82, 61, 120, 47, 179, 184, 50, 65, 4, 157, 2, 115, 172, 68, 235, 217, 218, 142, 39, 37, 42, 235, 174, 121, 86, 9, 68, 60, 248, 192, 109, 77, 23, 247, 105, 214, 155, 56, 11, 99, 143, 56, 161, 74, 208, 141, 58, 187, 54, 153, 222, 141, 45, 225, 135, 189, 155, 253, 104, 167, 83, 7, 101, 12, 12, 198, 212, 30, 176, 24, 130, 161, 199, 190, 99, 118, 40, 212, 125, 241, 145, 103, 181, 58, 85, 26, 85, 56, 226, 104, 57, 33, 62, 76, 238, 157, 34, 199, 133, 113, 33, 141, 159, 32, 175, 147, 87, 150, 188, 70, 93, 18, 64, 249, 160, 127, 73, 252, 101, 177, 31, 24, 180, 11, 41, 95, 188, 133, 130, 20, 85, 193, 245, 238, 209, 50, 47, 114, 195, 175, 125, 178, 20, 58, 108, 48, 24, 173, 26, 5, 54, 189, 162, 121, 17, 222, 179, 48, 243, 18, 253, 61, 237, 38, 55, 55, 124, 219, 5, 97, 137, 28, 26, 198, 174, 148, 33, 102, 18, 110, 2, 151, 25, 231, 40, 226, 190, 178, 47, 227, 35, 120, 66, 71, 198, 167, 177, 24, 17, 58, 222, 29, 179, 72, 200])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
init duration: 0s 
init sender: trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25callbackSig: 	 [] 
code hash: 	 [185 11 2 159 40 156 188 218 208 24 25 60 58 41 113 17 52 25 61 18 59 169 59 8 136 71 62 207 178 204 202 108] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "0c53d263a8eb4b0bca2346333a68bafd7a80fe33827cd48388fac40e56bc02b447f3255e6bf772f3424a79efc5ec725f0fe74eb814139ce1928ba822bcb590a7"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "/dW9it/TXW0rz6qAv0GliBLML+I5aPJ8Zo6yM1MxidLEOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYflnayj1QJP60VTA3YhGiQJrVCiPREhoHPFo31p0QNNBYZTetIC32eBLJi0fNuPbzqz/Cfcstax+xQsBGf5B83aqhbEgXmD9vbQCIsbhs87TDa+qI9SffyP9x1WHuX1oykplDyjLlAjW690JqxN0qDZH2R2hoJh15KfO1kJq20S0w/KKrXVzmoxBYou/S8eVsTz6MiGDMM6c6m0V9/2yaEvEmdZvpa/i0sNdJcQMP26VaiswHbcycXuriOmY3DMVeQvapmHvhRQVV1orgypcaCLcAvU3x1MUqYg9KDN3/vq4IxJxrLvR+GrS2YSbGApdVbWlMesOp+XY76dfhZsFwrPIGb2gNtIWh0kr9zUpXkCcvMUU6SHJWFfbyx3UDUZmPMz1lmr/MOleXhGSbTOVama8S2pPXnW3iCk="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [253, 213, 189, 138, 223, 211, 93, 109, 43, 207, 170, 128, 191, 65, 165, 136, 18, 204, 47, 226, 57, 104, 242, 124, 102, 142, 178, 51, 83, 49, 137, 210] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 236, 3, 10, 233, 3, 10, 46, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 182, 3, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 24, 2, 34, 8, 66, 97, 99, 107, 83, 119, 97, 112, 42, 249, 2, 253, 213, 189, 138, 223, 211, 93, 109, 43, 207, 170, 128, 191, 65, 165, 136, 18, 204, 47, 226, 57, 104, 242, 124, 102, 142, 178, 51, 83, 49, 137, 210, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 249, 103, 107, 40, 245, 64, 147, 250, 209, 84, 192, 221, 136, 70, 137, 2, 107, 84, 40, 143, 68, 72, 104, 28, 241, 104, 223, 90, 116, 64, 211, 65, 97, 148, 222, 180, 128, 183, 217, 224, 75, 38, 45, 31, 54, 227, 219, 206, 172, 255, 9, 247, 44, 181, 172, 126, 197, 11, 1, 25, 254, 65, 243, 118, 170, 133, 177, 32, 94, 96, 253, 189, 180, 2, 34, 198, 225, 179, 206, 211, 13, 175, 170, 35, 212, 159, 127, 35, 253, 199, 85, 135, 185, 125, 104, 202, 74, 101, 15, 40, 203, 148, 8, 214, 235, 221, 9, 171, 19, 116, 168, 54, 71, 217, 29, 161, 160, 152, 117, 228, 167, 206, 214, 66, 106, 219, 68, 180, 195, 242, 138, 173, 117, 115, 154, 140, 65, 98, 139, 191, 75, 199, 149, 177, 60, 250, 50, 33, 131, 48, 206, 156, 234, 109, 21, 247, 253, 178, 104, 75, 196, 153, 214, 111, 165, 175, 226, 210, 195, 93, 37, 196, 12, 63, 110, 149, 106, 43, 48, 29, 183, 50, 113, 123, 171, 136, 233, 152, 220, 51, 21, 121, 11, 218, 166, 97, 239, 133, 20, 21, 87, 90, 43, 131, 42, 92, 104, 34, 220, 2, 245, 55, 199, 83, 20, 169, 136, 61, 40, 51, 119, 254, 250, 184, 35, 18, 113, 172, 187, 209, 248, 106, 210, 217, 132, 155, 24, 10, 93, 85, 181, 165, 49, 235, 14, 167, 229, 216, 239, 167, 95, 133, 155, 5, 194, 179, 200, 25, 189, 160, 54, 210, 22, 135, 73, 43, 247, 53, 41, 94, 64, 156, 188, 197, 20, 233, 33, 201, 88, 87, 219, 203, 29, 212, 13, 70, 102, 60, 204, 245, 150, 106, 255, 48, 233, 94, 94, 17, 146, 109, 51, 149, 106, 102, 188, 75, 106, 79, 94, 117, 183, 136, 41, 18, 103, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 10, 18, 19, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 55, 48, 48, 16, 192, 141, 183, 1, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 39, 37, 180, 190, 2, 5, 60, 203, 99, 195, 138, 39, 10, 210, 32, 26, 74, 177, 255, 148, 64, 99, 51, 214, 46, 45, 250, 24, 154, 82, 48, 185, 99, 217, 246, 101, 140, 104, 161, 42, 238, 73, 33, 98, 238, 243, 50, 91, 17, 245, 117, 66, 115, 190, 53, 89, 98, 72, 99, 151, 182, 141, 157, 217]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([39, 37, 180, 190, 2, 5, 60, 203, 99, 195, 138, 39, 10, 210, 32, 26, 74, 177, 255, 148, 64, 99, 51, 214, 46, 45, 250, 24, 154, 82, 48, 185, 99, 217, 246, 101, 140, 104, 161, 42, 238, 73, 33, 98, 238, 243, 50, 91, 17, 245, 117, 66, 115, 190, 53, 89, 98, 72, 99, 151, 182, 141, 157, 217]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{3}\n�\u{3}\n./trst.x.compute.v1beta1.MsgInstantiateContract\u{12}�\u{3}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{18}\u{2}\"\u{8}BackSwap*�\u{2}�ս���]m+Ϫ��A��\u{12}�/�9h�|f��3S1���:sdY�\nXWsb�Il\u{2}n���&��\u{3} �\u{c}�=S��a�gk(�@���T�\u{748}F�\u{2}kT(�DHh\u{1c}�h�Zt@�Aa�\u{7b4}����K&-\u{1f}6��ά�\t�,��~�\u{b}\u{1}\u{19}�A�v��� ^`���\u{2}\"����\r��#ԟ\u{7f}#��U��}h�Je\u{f}(˔\u{8}���\t�\u{13}t�6G�\u{1d}���u���Bj�D���us��Ab��KǕ�<�2!�0Μ�m\u{15}���hKę�o�����]%�\u{c}?n�j+0\u{1d}�2q{����3\u{15}y\u{b}ڦa�\u{14}\u{15}WZ+�*\\h\"�\u{2}�7�S\u{14}��=(3w���#\u{12}q����j�ل�\u{18}\n]U��1�\u{e}����_��\u{5}³�\u{19}��6�\u{16}�I+�5)^@���\u{14}�!�XW��\u{1d}�\rFf<���j�0�^^\u{11}�m3�jf�KjO^u��)\u{12}g\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\n\u{12}\u{13}\n\u{c}\n\u{5}utrst\u{12}\u{3}700\u{10}���\u{1}\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_instantiate sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Instantiate { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), init_msg: [253, 213, 189, 138, 223, 211, 93, 109, 43, 207, 170, 128, 191, 65, 165, 136, 18, 204, 47, 226, 57, 104, 242, 124, 102, 142, 178, 51, 83, 49, 137, 210, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 249, 103, 107, 40, 245, 64, 147, 250, 209, 84, 192, 221, 136, 70, 137, 2, 107, 84, 40, 143, 68, 72, 104, 28, 241, 104, 223, 90, 116, 64, 211, 65, 97, 148, 222, 180, 128, 183, 217, 224, 75, 38, 45, 31, 54, 227, 219, 206, 172, 255, 9, 247, 44, 181, 172, 126, 197, 11, 1, 25, 254, 65, 243, 118, 170, 133, 177, 32, 94, 96, 253, 189, 180, 2, 34, 198, 225, 179, 206, 211, 13, 175, 170, 35, 212, 159, 127, 35, 253, 199, 85, 135, 185, 125, 104, 202, 74, 101, 15, 40, 203, 148, 8, 214, 235, 221, 9, 171, 19, 116, 168, 54, 71, 217, 29, 161, 160, 152, 117, 228, 167, 206, 214, 66, 106, 219, 68, 180, 195, 242, 138, 173, 117, 115, 154, 140, 65, 98, 139, 191, 75, 199, 149, 177, 60, 250, 50, 33, 131, 48, 206, 156, 234, 109, 21, 247, 253, 178, 104, 75, 196, 153, 214, 111, 165, 175, 226, 210, 195, 93, 37, 196, 12, 63, 110, 149, 106, 43, 48, 29, 183, 50, 113, 123, 171, 136, 233, 152, 220, 51, 21, 121, 11, 218, 166, 97, 239, 133, 20, 21, 87, 90, 43, 131, 42, 92, 104, 34, 220, 2, 245, 55, 199, 83, 20, 169, 136, 61, 40, 51, 119, 254, 250, 184, 35, 18, 113, 172, 187, 209, 248, 106, 210, 217, 132, 155, 24, 10, 93, 85, 181, 165, 49, 235, 14, 167, 229, 216, 239, 167, 95, 133, 155, 5, 194, 179, 200, 25, 189, 160, 54, 210, 22, 135, 73, 43, 247, 53, 41, 94, 64, 156, 188, 197, 20, 233, 33, 201, 88, 87, 219, 203, 29, 212, 13, 70, 102, 60, 204, 245, 150, 106, 255, 48, 233, 94, 94, 17, 146, 109, 51, 149, 106, 102, 188, 75, 106, 79, 94, 117, 183, 136, 41], auto_msg: [], init_funds: [], contract_id: "BackSwap", callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 10 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [39, 37, 180, 190, 2, 5, 60, 203, 99, 195, 138, 39, 10, 210, 32, 26, 74, 177, 255, 148, 64, 99, 51, 214, 46, 45, 250, 24, 154, 82, 48, 185, 99, 217, 246, 101, 140, 104, 161, 42, 238, 73, 33, 98, 238, 243, 50, 91, 17, 245, 117, 66, 115, 190, 53, 89, 98, 72, 99, 151, 182, 141, 157, 217]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [106, 44, 151, 85, 46, 48, 214, 73, 175, 137, 203, 40, 142, 181, 234, 5, 93, 130, 177, 125, 4, 155, 189, 169, 124, 194, 137, 165, 1, 115, 226, 122]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"pair_code_id\": 3, \"pair_code_hash\": \"41395186B730A70DB1185F81C83441654831C6D87D6F9FBC5B4EC380A110C989\", \"token_code_id\": 1, \"token_code_hash\": \"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\", \"prng_seed\": \"YWE=\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] instance not found in cache. building a new one
INFO  [enclave_contract_engine::module_cache] Deserializing Wasm contract
INFO  [enclave_contract_engine::module_cache] Deserialized Wasm contract
INFO  [enclave_contract_engine::module_cache] Validating WASM memory demands
INFO  [enclave_contract_engine::module_cache] Validated WASM memory demands
INFO  [enclave_contract_engine::module_cache] Trying to create Wasmi module from parity...
INFO  [enclave_contract_engine::module_cache] Created Wasmi module from parity. Now checking for floating points...
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] storing module in cache
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{6}config" value: "{\"owner\":\"Nz9KFjVRRPVDPHBarLZQ3dB7hzo=\",\"pair_code_id\":3,\"token_code_id\":1,\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"pair_code_hash\":\"41395186B730A70DB1185F81C83441654831C6D87D6F9FBC5B4EC380A110C989\",\"prng_seed\":[150,27,109,211,237,227,203,142,203,170,203,214,141,224,64,205,120,235,46,213,136,145,48,204,235,76,73,38,142,164,213,6],\"pair_settings\":{\"swap_fee\":{\"commission_rate_nom\":\"3\",\"commission_rate_denom\":\"1000\"}}}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [42, 149, 240, 123, 169, 90, 29, 45, 11, 183, 109, 0, 101, 219, 31, 106, 242, 87, 73, 224, 4, 217, 179, 67, 31, 161, 189, 239, 246, 200, 101, 79]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [106, 44, 151, 85, 46, 48, 214, 73, 175, 137, 203, 40, 142, 181, 234, 5, 93, 130, 177, 125, 4, 155, 189, 169, 124, 194, 137, 165, 1, 115, 226, 122]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}]}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [LogAttribute { key: "fhOC3ffWKD9jFYSZUwAuNLRZao5kQg==", value: [35, 122, 253, 201, 55, 216, 132, 124, 199, 125, 168, 65, 20, 231, 146, 10, 243, 158, 84, 147, 33, 23, 118], pub_db: false, acc_pub_db: false, encrypted: true }], data: None } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 14, time: 1656756757, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr") }, contract_key: Some("DFPSY6jrSwvKI0YzOmi6/XqA/jOCfNSDiPrEDla8ArRH8yVea/dy80JKee/F7HJfD+dOuBQTnOGSi6givLWQpw=="), contract_code_hash: "b90b029f289cbcdad018193c3a29711134193d123ba93b0888473ecfb2ccca6c" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "jiOfJcwNYQLINR80I/iXhrSytsQBeOv5LkYtVvGi/Q/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYS+MlJsdLk6+W2Akw8GZuwWO9Ue0bqhu9YiKteepdV8XwnClfAYlVqDd94Kdvyphd3/OPQ+C1GVt/PDIO3EGIRUZDQ3EKCa4p/jawgjxEh4xQiaynNWcxBTEXbCz9mJuDyJWrCUEGtnsZIdE7sqVU3waNXaUSptkfPcwCKuN1In+FWjNvNm6Cxvya9nTzfC3suoaWRQ3w4hel6yx9QNpUh541M+QJ6X0oNLjxfBmSZawGzb4euNSF+3z1+fXNyqjdsxJAPMCccWsBVzP7uHQ6hBDwrKvpgtfcceupQNxqsedF2zIMBr79psIaKDNfpm6vRYnajopV2lyUsTGsbrudx8aMXfWGTRM7wXWLtplIS8b8Z4//O6T8LBz+dBVDdAY9mkEQmYJrjeIYIvjLHVm4SYXvA/wrOrY7rTHrybNEzUlZhxNhcAXrAE5Pe7YSPD3A+F2QGhbNL9g3QvUf4+L+XW9yACpJCpxYmsVsEyDxdrDBN1b6DXCd+0/kWg25nKztpRUfDEewh6s28H0y/uPIc6+LpMETTb7PldqgnmvLNkFAVIlduTo8Ij9DLvrowz5mSxl9pA7l0K+B9KmMOygtR+zr4G7aGhRgpskrwcPr+eeuZS3ah+xiJnjjnTKaAxAymo="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([10, 178, 5, 10, 175, 5, 10, 42, 47, 116, 114, 115, 116, 46, 120, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 69, 120, 101, 99, 117, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 128, 5, 10, 44, 116, 114, 117, 115, 116, 49, 120, 117, 108, 53, 53, 57, 51, 52, 50, 57, 122, 48, 50, 115, 101, 117, 119, 112, 100, 50, 101, 100, 106, 115, 109, 104, 103, 56, 104, 112, 101, 54, 117, 104, 101, 120, 50, 53, 18, 44, 116, 114, 117, 115, 116, 49, 103, 118, 48, 55, 56, 52, 54, 97, 51, 56, 54, 55, 101, 122, 110, 51, 117, 113, 107, 107, 48, 56, 50, 99, 53, 102, 116, 107, 101, 55, 104, 112, 107, 122, 120, 102, 110, 114, 26, 161, 4, 142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 47, 140, 148, 155, 29, 46, 78, 190, 91, 96, 36, 195, 193, 153, 187, 5, 142, 245, 71, 180, 110, 168, 110, 245, 136, 138, 181, 231, 169, 117, 95, 23, 194, 112, 165, 124, 6, 37, 86, 160, 221, 247, 130, 157, 191, 42, 97, 119, 127, 206, 61, 15, 130, 212, 101, 109, 252, 240, 200, 59, 113, 6, 33, 21, 25, 13, 13, 196, 40, 38, 184, 167, 248, 218, 194, 8, 241, 18, 30, 49, 66, 38, 178, 156, 213, 156, 196, 20, 196, 93, 176, 179, 246, 98, 110, 15, 34, 86, 172, 37, 4, 26, 217, 236, 100, 135, 68, 238, 202, 149, 83, 124, 26, 53, 118, 148, 74, 155, 100, 124, 247, 48, 8, 171, 141, 212, 137, 254, 21, 104, 205, 188, 217, 186, 11, 27, 242, 107, 217, 211, 205, 240, 183, 178, 234, 26, 89, 20, 55, 195, 136, 94, 151, 172, 177, 245, 3, 105, 82, 30, 120, 212, 207, 144, 39, 165, 244, 160, 210, 227, 197, 240, 102, 73, 150, 176, 27, 54, 248, 122, 227, 82, 23, 237, 243, 215, 231, 215, 55, 42, 163, 118, 204, 73, 0, 243, 2, 113, 197, 172, 5, 92, 207, 238, 225, 208, 234, 16, 67, 194, 178, 175, 166, 11, 95, 113, 199, 174, 165, 3, 113, 170, 199, 157, 23, 108, 200, 48, 26, 251, 246, 155, 8, 104, 160, 205, 126, 153, 186, 189, 22, 39, 106, 58, 41, 87, 105, 114, 82, 196, 198, 177, 186, 238, 119, 31, 26, 49, 119, 214, 25, 52, 76, 239, 5, 214, 46, 218, 101, 33, 47, 27, 241, 158, 63, 252, 238, 147, 240, 176, 115, 249, 208, 85, 13, 208, 24, 246, 105, 4, 66, 102, 9, 174, 55, 136, 96, 139, 227, 44, 117, 102, 225, 38, 23, 188, 15, 240, 172, 234, 216, 238, 180, 199, 175, 38, 205, 19, 53, 37, 102, 28, 77, 133, 192, 23, 172, 1, 57, 61, 238, 216, 72, 240, 247, 3, 225, 118, 64, 104, 91, 52, 191, 96, 221, 11, 212, 127, 143, 139, 249, 117, 189, 200, 0, 169, 36, 42, 113, 98, 107, 21, 176, 76, 131, 197, 218, 195, 4, 221, 91, 232, 53, 194, 119, 237, 63, 145, 104, 54, 230, 114, 179, 182, 148, 84, 124, 49, 30, 194, 30, 172, 219, 193, 244, 203, 251, 143, 33, 206, 190, 46, 147, 4, 77, 54, 251, 62, 87, 106, 130, 121, 175, 44, 217, 5, 1, 82, 37, 118, 228, 232, 240, 136, 253, 12, 187, 235, 163, 12, 249, 153, 44, 101, 246, 144, 59, 151, 66, 190, 7, 210, 166, 48, 236, 160, 181, 31, 179, 175, 129, 187, 104, 104, 81, 130, 155, 36, 175, 7, 15, 175, 231, 158, 185, 148, 183, 106, 31, 177, 136, 153, 227, 142, 116, 202, 104, 12, 64, 202, 106, 18, 103, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119, 18, 4, 10, 2, 8, 1, 24, 11, 18, 19, 10, 12, 10, 5, 117, 116, 114, 115, 116, 18, 3, 54, 48, 48, 16, 192, 141, 183, 1, 26, 12, 116, 114, 115, 116, 95, 99, 104, 97, 105, 110, 95, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 132, 69, 30, 132, 173, 120, 225, 91, 181, 229, 3, 69, 20, 26, 108, 142, 202, 185, 70, 129, 103, 178, 132, 213, 165, 194, 73, 225, 172, 159, 127, 87, 0, 198, 225, 78, 235, 64, 200, 107, 225, 236, 31, 60, 248, 107, 246, 148, 102, 41, 57, 158, 11, 7, 125, 186, 35, 177, 147, 12, 194, 126, 178, 201]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119]), signature: Binary([132, 69, 30, 132, 173, 120, 225, 91, 181, 229, 3, 69, 20, 26, 108, 142, 202, 185, 70, 129, 103, 178, 132, 213, 165, 194, 73, 225, 172, 159, 127, 87, 0, 198, 225, 78, 235, 64, 200, 107, 225, 236, 31, 60, 248, 107, 246, 148, 102, 41, 57, 158, 11, 7, 125, 186, 35, 177, 147, 12, 194, 126, 178, 201]), callback_sig: None }
TRACE  [enclave_contract_engine::contract_validation] Sign bytes are: "\n�\u{5}\n�\u{5}\n*/trst.x.compute.v1beta1.MsgExecuteContract\u{12}�\u{5}\n,trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25\u{12},trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr\u{1a}�\u{4}�#�%�\ra\u{2}�5\u{1f}4#�������\u{1}x��.F-V��\u{f}�:sdY�\nXWsb�Il\u{2}n���&��\u{3} �\u{c}�=S��a/���\u{1d}.N�[`$����\u{5}��G�n�n�����u_\u{17}�p�|\u{6}%V������*aw\u{7f}�=\u{f}��em���;q\u{6}!\u{15}\u{19}\r\r�(&�����\u{8}�\u{12}\u{1e}1B&��՜�\u{14}�]���bn\u{f}\"V�%\u{4}\u{1a}��d�D�ʕS|\u{1a}5v�J�d|�0\u{8}��ԉ�\u{15}hͼٺ\u{b}\u{1b}�k�����\u{1a}Y\u{14}7È^����\u{3}iR\u{1e}x�ϐ\'�������fI��\u{1b}6�z�R\u{17}�����7*�v�I\u{0}�\u{2}qŬ\u{5}\\�����\u{10}C²��\u{b}_qǮ�\u{3}q�ǝ\u{17}l�0\u{1a}���\u{8}h��~���\u{16}\'j:)WirR�Ʊ��w\u{1f}\u{1a}1w�\u{19}4L�\u{5}�.�e!/\u{1b}�?���s��U\r�\u{18}�i\u{4}Bf\t�7�`��,uf�&\u{17}�\u{f}����ǯ&�\u{13}5%f\u{1c}M��\u{17}�\u{1}9=��H��\u{3}�v@h[4�`�\u{b}�\u{7f}���u��\u{0}�$*qbk\u{15}�L����\u{4}�[�5�w�?�h6�r���T|1\u{1e}�\u{1e}�������!ξ.�\u{4}M6�>Wj�y�,�\u{5}\u{1}R%v�����\u{c}��\u{c}��,e��;�B�\u{7}Ҧ0젵\u{1f}����hhQ��$�\u{7}\u{f}�瞹��j\u{1f}����t�h\u{c}@�j\u{12}g\nP\nF\n\u{1f}/cosmos.crypto.secp256k1.PubKey\u{12}#\n!\u{3}Z�L��ˣ\u{6}y\u{c},b?^� oP�\u{e}\u{7}JEeP��(2��w\u{12}\u{4}\n\u{2}\u{8}\u{1}\u{18}\u{b}\u{12}\u{13}\n\u{c}\n\u{5}utrst\u{12}\u{3}600\u{10}���\u{1}\u{1a}\u{c}trst_chain_1 \u{1}"
TRACE  [enclave_cosmos_types::types] try_parse_execute sender: len=44 val="trust1xul5593429z02seuwpd2edjsmhg8hpe6uhex25"
TRACE  [enclave_cosmos_types::types] try_parse_execute contract: len=44 val="trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr"
TRACE  [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [Execute { sender: CanonicalAddr(Binary([55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58])), contract: HumanAddr("trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr"), msg: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 47, 140, 148, 155, 29, 46, 78, 190, 91, 96, 36, 195, 193, 153, 187, 5, 142, 245, 71, 180, 110, 168, 110, 245, 136, 138, 181, 231, 169, 117, 95, 23, 194, 112, 165, 124, 6, 37, 86, 160, 221, 247, 130, 157, 191, 42, 97, 119, 127, 206, 61, 15, 130, 212, 101, 109, 252, 240, 200, 59, 113, 6, 33, 21, 25, 13, 13, 196, 40, 38, 184, 167, 248, 218, 194, 8, 241, 18, 30, 49, 66, 38, 178, 156, 213, 156, 196, 20, 196, 93, 176, 179, 246, 98, 110, 15, 34, 86, 172, 37, 4, 26, 217, 236, 100, 135, 68, 238, 202, 149, 83, 124, 26, 53, 118, 148, 74, 155, 100, 124, 247, 48, 8, 171, 141, 212, 137, 254, 21, 104, 205, 188, 217, 186, 11, 27, 242, 107, 217, 211, 205, 240, 183, 178, 234, 26, 89, 20, 55, 195, 136, 94, 151, 172, 177, 245, 3, 105, 82, 30, 120, 212, 207, 144, 39, 165, 244, 160, 210, 227, 197, 240, 102, 73, 150, 176, 27, 54, 248, 122, 227, 82, 23, 237, 243, 215, 231, 215, 55, 42, 163, 118, 204, 73, 0, 243, 2, 113, 197, 172, 5, 92, 207, 238, 225, 208, 234, 16, 67, 194, 178, 175, 166, 11, 95, 113, 199, 174, 165, 3, 113, 170, 199, 157, 23, 108, 200, 48, 26, 251, 246, 155, 8, 104, 160, 205, 126, 153, 186, 189, 22, 39, 106, 58, 41, 87, 105, 114, 82, 196, 198, 177, 186, 238, 119, 31, 26, 49, 119, 214, 25, 52, 76, 239, 5, 214, 46, 218, 101, 33, 47, 27, 241, 158, 63, 252, 238, 147, 240, 176, 115, 249, 208, 85, 13, 208, 24, 246, 105, 4, 66, 102, 9, 174, 55, 136, 96, 139, 227, 44, 117, 102, 225, 38, 23, 188, 15, 240, 172, 234, 216, 238, 180, 199, 175, 38, 205, 19, 53, 37, 102, 28, 77, 133, 192, 23, 172, 1, 57, 61, 238, 216, 72, 240, 247, 3, 225, 118, 64, 104, 91, 52, 191, 96, 221, 11, 212, 127, 143, 139, 249, 117, 189, 200, 0, 169, 36, 42, 113, 98, 107, 21, 176, 76, 131, 197, 218, 195, 4, 221, 91, 232, 53, 194, 119, 237, 63, 145, 104, 54, 230, 114, 179, 182, 148, 84, 124, 49, 30, 194, 30, 172, 219, 193, 244, 203, 251, 143, 33, 206, 190, 46, 147, 4, 77, 54, 251, 62, 87, 106, 130, 121, 175, 44, 217, 5, 1, 82, 37, 118, 228, 232, 240, 136, 253, 12, 187, 235, 163, 12, 249, 153, 44, 101, 246, 144, 59, 151, 66, 190, 7, 210, 166, 48, 236, 160, 181, 31, 179, 175, 129, 187, 104, 104, 81, 130, 155, 36, 175, 7, 15, 175, 231, 158, 185, 148, 183, 106, 31, 177, 136, 153, 227, 142, 116, 202, 104, 12, 64, 202, 106], sent_funds: [], callback_sig: Some([]) }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 90, 158, 76, 182, 183, 203, 163, 6, 121, 12, 44, 98, 63, 94, 171, 32, 111, 80, 187, 14, 7, 74, 69, 101, 80, 157, 230, 40, 50, 221, 203, 119])), sequence: 11 }], fee: () }, chain_id: "trst_chain_1", account_number: 1 }
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_contract_engine::contract_validation] sender canonical address is: [55, 63, 74, 22, 53, 81, 68, 245, 67, 60, 112, 90, 172, 182, 80, 221, 208, 123, 135, 58]
TRACE  [enclave_crypto::secp256k1] successfully verified this signature: [132, 69, 30, 132, 173, 120, 225, 91, 181, 229, 3, 69, 20, 26, 108, 142, 202, 185, 70, 129, 103, 178, 132, 213, 165, 194, 73, 225, 172, 159, 127, 87, 0, 198, 225, 78, 235, 64, 200, 107, 225, 236, 31, 60, 248, 107, 246, 148, 102, 41, 57, 158, 11, 7, 125, 186, 35, 177, 147, 12, 194, 126, 178, 201]
INFO  [enclave_contract_engine::contract_validation] Verifying sender..
INFO  [enclave_contract_engine::contract_validation] Verifying message..
INFO  [enclave_contract_engine::contract_validation] Verifying contract address..
INFO  [enclave_contract_engine::contract_validation] Verifying funds..
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"create_pair\": {\"asset_infos\": [{\"token\": {\"contract_addr\": \"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\", \"token_code_hash\": \"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\", \"viewing_key\": \"\"}},{\"token\": {\"contract_addr\": \"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\", \"token_code_hash\": \"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\", \"viewing_key\": \"\"}}]}}"
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "0c53d263a8eb4b0bca2346333a68bafd7a80fe33827cd48388fac40e56bc02b447f3255e6bf772f3424a79efc5ec725f0fe74eb814139ce1928ba822bcb590a7"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}config"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [42, 149, 240, 123, 169, 90, 29, 45, 11, 183, 109, 0, 101, 219, 31, 106, 242, 87, 73, 224, 4, 217, 179, 67, 31, 161, 189, 239, 246, 200, 101, 79]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 465: '[123, 34, 111, 119, 110, 101, 114, 34, 58, 34, 78, 122, 57, 75, 70, 106, 86, 82, 82, 80, 86, 68, 80, 72, 66, 97, 114, 76, 90, 81, 51, 100, 66, 55, 104, 122, 111, 61, 34, 44, 34, 112, 97, 105, 114, 95, 99, 111, 100, 101, 95, 105, 100, 34, 58, 51, 44, 34, 116, 111, 107, 101, 110, 95, 99, 111, 100, 101, 95, 105, 100, 34, 58, 49, 44, 34, 116, 111, 107, 101, 110, 95, 99, 111, 100, 101, 95, 104, 97, 115, 104, 34, 58, 34, 69, 51, 50, 68, 49, 48, 56, 70, 70, 56, 55, 70, 53, 50, 51, 54, 52, 69, 69, 48, 69, 54, 66, 55, 70, 50, 55, 54, 55, 56, 66, 55, 54, 49, 50, 56, 52, 48, 70, 57, 49, 69, 65, 57, 70, 54, 48, 51, 55, 67, 55, 51, 68, 49, 54, 70, 54, 66, 49, 53, 50, 69, 69, 50, 34, 44, 34, 112, 97, 105, 114, 95, 99, 111, 100, 101, 95, 104, 97, 115, 104, 34, 58, 34, 52, 49, 51, 57, 53, 49, 56, 54, 66, 55, 51, 48, 65, 55, 48, 68, 66, 49, 49, 56, 53, 70, 56, 49, 67, 56, 51, 52, 52, 49, 54, 53, 52, 56, 51, 49, 67, 54, 68, 56, 55, 68, 54, 70, 57, 70, 66, 67, 53, 66, 52, 69, 67, 51, 56, 48, 65, 49, 49, 48, 67, 57, 56, 57, 34, 44, 34, 112, 114, 110, 103, 95, 115, 101, 101, 100, 34, 58, 91, 49, 53, 48, 44, 50, 55, 44, 49, 48, 57, 44, 50, 49, 49, 44, 50, 51, 55, 44, 50, 50, 55, 44, 50, 48, 51, 44, 49, 52, 50, 44, 50, 48, 51, 44, 49, 55, 48, 44, 50, 48, 51, 44, 50, 49, 52, 44, 49, 52, 49, 44, 50, 50, 52, 44, 54, 52, 44, 50, 48, 53, 44, 49, 50, 48, 44, 50, 51, 53, 44, 52, 54, 44, 50, 49, 51, 44, 49, 51, 54, 44, 49, 52, 53, 44, 52, 56, 44, 50, 48, 52, 44, 50, 51, 53, 44, 55, 54, 44, 55, 51, 44, 51, 56, 44, 49, 52, 50, 44, 49, 54, 52, 44, 50, 49, 51, 44, 54, 93, 44, 34, 112, 97, 105, 114, 95, 115, 101, 116, 116, 105, 110, 103, 115, 34, 58, 123, 34, 115, 119, 97, 112, 95, 102, 101, 101, 34, 58, 123, 34, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110, 95, 114, 97, 116, 101, 95, 110, 111, 109, 34, 58, 34, 51, 34, 44, 34, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110, 95, 114, 97, 116, 101, 95, 100, 101, 110, 111, 109, 34, 58, 34, 49, 48, 48, 48, 34, 125, 125, 125]'
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\tpair_info8�\u{1}o���\u{10}����\'\u{10}����;\u{1a}t��\u{16},X��E�-tw�}�L�"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [26, 24, 51, 169, 135, 186, 156, 107, 170, 83, 234, 204, 197, 74, 247, 152, 225, 105, 43, 241, 170, 72, 202, 231, 61, 193, 168, 99, 238, 162, 194, 88]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\tpair_info8�\u{1}o���\u{10}����\'\u{10}����;\u{1a}t��\u{16},X��E�-tw�}�L�" value: "{\"asset_infos\":[{\"Token\":{\"contract_addr\":\"Oxp0hcYWLFiD7kX7LXR3qH2KTOU=\",\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"viewing_key\":\"\"}},{\"Token\":{\"contract_addr\":\"OOkBb6e+yxCw2vuDJxDD45XsvtQ=\",\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"viewing_key\":\"\"}}],\"contract_addr\":\"\",\"liquidity_token\":\"\",\"token_code_hash\":\"41395186B730A70DB1185F81C83441654831C6D87D6F9FBC5B4EC380A110C989\",\"asset0_volume\":\"0\",\"asset1_volume\":\"0\",\"factory\":{\"address\":\"trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr\",\"code_hash\":\"b90b029f289cbcdad018193c3a29711134193d123ba93b0888473ecfb2ccca6c\"}}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [26, 24, 51, 169, 135, 186, 156, 107, 170, 83, 234, 204, 197, 74, 247, 152, 225, 105, 43, 241, 170, 72, 202, 231, 61, 193, 168, 99, 238, 162, 194, 88]
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{c}pair_tracker"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [201, 11, 68, 228, 55, 226, 113, 156, 216, 228, 237, 160, 18, 120, 120, 106, 197, 171, 249, 49, 93, 23, 73, 105, 144, 4, 89, 194, 191, 51, 15, 98]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\u{c}pair_tracker" value: "[[56,233,1,111,167,190,203,16,176,218,251,131,39,16,195,227,149,236,190,212,59,26,116,133,198,22,44,88,131,238,69,251,45,116,119,168,125,138,76,229]]"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [201, 11, 68, 228, 55, 226, 113, 156, 216, 228, 237, 160, 18, 120, 120, 106, 197, 171, 249, 49, 93, 23, 73, 105, 144, 4, 89, 194, 191, 51, 15, 98]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[{\"wasm\":{\"instantiate\":{\"code_id\":3,\"callback_code_hash\":\"41395186B730A70DB1185F81C83441654831C6D87D6F9FBC5B4EC380A110C989\",\"msg\":\"eyJhc3NldF9pbmZvcyI6W3sidG9rZW4iOnsiY29udHJhY3RfYWRkciI6InRydXN0MTh2ZDhmcHd4emNrOTNxbHdnaGFqNmFyaDRwN2M1bjg5NGx4dmRoIiwidG9rZW5fY29kZV9oYXNoIjoiRTMyRDEwOEZGODdGNTIzNjRFRTBFNkI3RjI3Njc4Qjc2MTI4NDBGOTFFQTlGNjAzN0M3M0QxNkY2QjE1MkVFMiIsInZpZXdpbmdfa2V5IjoiIn19LHsidG9rZW4iOnsiY29udHJhY3RfYWRkciI6InRydXN0MThyNXN6bWE4aG05M3B2eDZsd3Bqd3l4cnV3MjdlMGs1NG5leXFtIiwidG9rZW5fY29kZV9oYXNoIjoiRTMyRDEwOEZGODdGNTIzNjRFRTBFNkI3RjI3Njc4Qjc2MTI4NDBGOTFFQTlGNjAzN0M3M0QxNkY2QjE1MkVFMiIsInZpZXdpbmdfa2V5IjoiIn19XSwidG9rZW5fY29kZV9pZCI6MSwidG9rZW5fY29kZV9oYXNoIjoiRTMyRDEwOEZGODdGNTIzNjRFRTBFNkI3RjI3Njc4Qjc2MTI4NDBGOTFFQTlGNjAzN0M3M0QxNkY2QjE1MkVFMiIsImluaXRfaG9vayI6eyJtc2ciOiJleUp5WldkcGMzUmxjaUk2ZXlKaGMzTmxkRjlwYm1admN5STZXM3NpZEc5clpXNGlPbnNpWTI5dWRISmhZM1JmWVdSa2NpSTZJblJ5ZFhOME1UaDJaRGhtY0hkNGVtTnJPVE54YkhkbmFHRnFObUZ5YURSd04yTTFiamc1Tkd4NGRtUm9JaXdpZEc5clpXNWZZMjlrWlY5b1lYTm9Jam9pUlRNeVJERXdPRVpHT0RkR05USXpOalJGUlRCRk5rSTNSakkzTmpjNFFqYzJNVEk0TkRCR09URkZRVGxHTmpBek4wTTNNMFF4TmtZMlFqRTFNa1ZGTWlJc0luWnBaWGRwYm1kZmEyVjVJam9pSW4xOUxIc2lkRzlyWlc0aU9uc2lZMjl1ZEhKaFkzUmZZV1JrY2lJNkluUnlkWE4wTVRoeU5YTjZiV0U0YUcwNU0zQjJlRFpzZDNCcWQzbDRjblYzTWpkbE1HczFORzVsZVhGdElpd2lkRzlyWlc1ZlkyOWtaVjlvWVhOb0lqb2lSVE15UkRFd09FWkdPRGRHTlRJek5qUkZSVEJGTmtJM1JqSTNOamM0UWpjMk1USTROREJHT1RGRlFUbEdOakF6TjBNM00wUXhOa1kyUWpFMU1rVkZNaUlzSW5acFpYZHBibWRmYTJWNUlqb2lJbjE5WFgxOSIsImNvbnRyYWN0X2FkZHIiOiJ0cnVzdDFndjA3ODQ2YTM4Njdlem4zdXFrazA4MmM1ZnRrZTdocGt6eGZuciIsImNvZGVfaGFzaCI6ImI5MGIwMjlmMjg5Y2JjZGFkMDE4MTkzYzNhMjk3MTExMzQxOTNkMTIzYmE5M2IwODg4NDczZWNmYjJjY2NhNmMifSwicHJuZ19zZWVkIjoiWFFCYzVNWXBra3RUeGErZVdkdnBrUktVL2srZElReVViNlRUSC82Q21EWT0ifQ==\",\"auto_msg\":null,\"send\":[],\"contract_id\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh-trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm-pair-trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr-3\",\"contract_duration\":\"\"}}}],\"log\":[{\"key\":\"action\",\"value\":[99,114,101,97,116,101,95,112,97,105,114],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true},{\"key\":\"pair\",\"value\":[116,114,117,115,116,49,56,118,100,56,102,112,119,120,122,99,107,57,51,113,108,119,103,104,97,106,54,97,114,104,52,112,55,99,53,110,56,57,52,108,120,118,100,104,45,116,114,117,115,116,49,56,114,53,115,122,109,97,56,104,109,57,51,112,118,120,54,108,119,112,106,119,121,120,114,117,119,50,55,101,48,107,53,52,110,101,121,113,109],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}],\"data\":null}}"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [50, 225, 25, 184, 18, 82, 42, 12, 191, 222, 12, 200, 64, 134, 140, 185, 214, 54, 93, 114, 39, 179, 82, 220, 27, 233, 64, 60, 117, 251, 247, 143, 101, 70, 185, 154, 46, 171, 1, 32, 33, 116, 178, 18, 15, 135, 38, 16, 31, 178, 81, 91, 178, 255, 101, 24, 10, 47, 3, 28, 56, 253, 122, 56, 174, 191, 156, 160, 231, 164, 210, 175, 233, 93, 61, 5, 166, 105, 237, 175, 146, 151, 79, 227, 218, 53, 11, 242, 221, 69, 74, 186, 34, 63, 121, 113, 250, 12, 230, 209, 128, 152, 196, 7, 13, 149, 119, 217, 133, 58, 10, 143, 119, 153, 14, 200, 29, 155, 247, 48, 143, 16, 197, 56, 245, 183, 135, 206, 220, 191, 174, 19, 86, 12, 22, 212, 136, 219, 238, 202, 214, 42, 99, 152, 158, 151, 107, 21, 0, 77, 111, 89, 69, 129, 19, 82, 246, 235, 97, 20, 92, 113, 52, 91, 203, 177, 171, 238, 91, 114, 213, 35, 7, 93, 93, 176, 225, 248, 158, 92, 115, 138, 182, 25, 6, 54, 234, 44, 150, 240, 35, 101, 215, 111, 84, 139, 108, 57, 130, 159, 51, 220, 199, 196, 255, 205, 106, 253, 247, 9, 153, 213, 10, 221, 27, 198, 251, 138, 184, 161, 226, 229, 37, 111, 241, 141, 185, 53, 213, 218, 50, 3, 36, 134, 234, 144, 22, 165, 229, 9, 83, 136, 248, 178, 197, 191, 209, 232, 85, 90, 14, 82, 193, 223, 81, 242, 155, 66, 159, 56, 121, 242, 83, 72, 252, 209, 123, 37, 9, 85, 97, 110, 173, 59, 90, 150, 61, 235, 7, 185, 222, 211, 144, 116, 49, 0, 213, 250, 49, 28, 139, 32, 247, 1, 144, 41, 169, 194, 245, 202, 166, 72, 247, 45, 103, 59, 217, 137, 138, 200, 205, 38, 14, 205, 76, 221, 222, 147, 226, 99, 36, 0, 26, 232, 111, 157, 103, 85, 17, 70, 30, 122, 22, 52, 154, 218, 56, 158, 233, 36, 56, 109, 173, 244, 138, 27, 174, 242, 245, 54, 15, 106, 148, 130, 149, 206, 147, 24, 203, 74, 200, 100, 179, 187, 11, 190, 140, 188, 36, 184, 75, 56, 101, 49, 3, 12, 180, 166, 109, 130, 122, 175, 234, 246, 151, 119, 226, 45, 209, 79, 140, 70, 145, 218, 125, 64, 191, 55, 236, 53, 130, 104, 252, 243, 27, 40, 182, 77, 129, 92, 71, 1, 70, 22, 184, 7, 66, 94, 84, 224, 66, 174, 180, 67, 138, 53, 38, 208, 8, 147, 119, 21, 243, 175, 171, 124, 17, 61, 164, 240, 245, 107, 39, 141, 175, 93, 48, 126, 139, 233, 1, 71, 97, 98, 193, 70, 204, 216, 188, 119, 128, 95, 247, 167, 49, 23, 36, 26, 163, 104, 82, 43, 14, 63, 171, 110, 19, 119, 38, 145, 205, 199, 147, 39, 253, 15, 183, 69, 25, 33, 50, 14, 29, 219, 209, 66, 204, 104, 165, 142, 134, 172, 205, 223, 139, 114, 174, 205, 129, 226, 44, 99, 60, 59, 4, 161, 58, 126, 127, 86, 104, 57, 126, 38, 80, 129, 214, 61, 208, 205, 116, 14, 55, 64, 61, 142, 57, 130, 200, 192, 208, 125, 101, 123, 231, 108, 236, 177, 27, 148, 27, 219, 67, 13, 159, 20, 130, 80, 40, 129, 90, 44, 114, 252, 192, 23, 97, 17, 145, 64, 197, 46, 5, 240, 22, 81, 181, 72, 249, 159, 219, 174, 179, 195, 68, 8, 196, 221, 76, 184, 235, 5, 57, 229, 47, 102, 194, 16, 187, 218, 17, 211, 120, 149, 56, 183, 92, 168, 199, 24, 215, 4, 43, 139, 104, 73, 29, 112, 48, 188, 193, 199, 131, 255, 242, 0, 106, 31, 247, 15, 177, 13, 243, 135, 231, 47, 109, 223, 228, 19, 141, 158, 21, 52, 76, 43, 82, 222, 139, 10, 137, 253, 158, 123, 112, 22, 176, 43, 54, 91, 106, 212, 57, 11, 23, 227, 99, 183, 39, 201, 26, 253, 87, 133, 129, 32, 103, 70, 52, 147, 165, 160, 92, 155, 97, 157, 117, 58, 54, 227, 249, 11, 156, 202, 27, 67, 209, 251, 223, 113, 6, 154, 101, 57, 234, 210, 87, 253, 117, 1, 45, 85, 149, 245, 142, 64, 236, 172, 162, 209, 181, 129, 162, 184, 22, 16, 252, 229, 152, 183, 114, 109, 239, 118, 135, 238, 177, 118, 25, 242, 158, 96, 213, 220, 234, 29, 234, 233, 50, 138, 48, 177, 50, 99, 235, 233, 69, 208, 104, 245, 54, 120, 206, 66, 103, 137, 226, 136, 92, 43, 89, 63, 108, 11, 46, 21, 167, 54, 252, 103, 71, 8, 29, 144, 93, 68, 163, 20, 180, 188, 199, 163, 23, 221, 78, 70, 158, 104, 49, 249, 207, 151, 94, 134, 223, 179, 139, 204, 109, 180, 101, 80, 23, 225, 102, 180, 19, 164, 180, 251, 47, 54, 207, 232, 147, 60, 224, 202, 126, 49, 84, 185, 115, 220, 254, 150, 56, 54, 119, 201, 85, 203, 16, 121, 193, 148, 130, 2, 129, 14, 172, 226, 249, 125, 83, 227, 44, 253, 171, 123, 44, 20, 172, 23, 45, 39, 198, 219, 132, 159, 220, 91, 156, 60, 218, 187, 19, 109, 40, 103, 209, 201, 102, 67, 215, 189, 126, 97, 2, 223, 69, 184, 219, 154, 69, 152, 226, 90, 140, 112, 229, 149, 137, 134, 28, 8, 99, 24, 167, 69, 67, 68, 125, 29, 177, 147, 150, 178, 34, 10, 89, 204, 221, 169, 176, 6, 116, 234, 53, 32, 144, 9, 248, 180, 28, 91, 37, 185, 23, 247, 170, 35, 58, 166, 121, 131, 6, 173, 205, 58, 69, 181, 182, 240, 53, 33, 201, 223, 82, 235, 201, 53, 40, 156, 5, 168, 220, 112, 129, 87, 148, 195, 54, 193, 82, 41, 123, 26, 67, 89, 187, 55, 246, 108, 21, 249, 182, 152, 118, 205, 70, 226, 16, 105, 223, 47, 143, 226, 143, 220, 75, 252, 37, 62, 100, 204, 13, 200, 54, 255, 177, 46, 190, 120, 204, 137, 16, 249, 164, 92, 205, 72, 200, 243, 106, 128, 41, 242, 169, 89, 69, 96, 107, 222, 3, 8, 33, 142, 178, 110, 206, 224, 209, 73, 207, 124, 48, 128, 200, 188, 236, 252, 133, 36, 244, 110, 50, 20, 64, 60, 144, 137, 250, 141, 120, 48, 239, 37, 203, 219, 166, 139, 57, 119, 123, 247, 222, 85, 169, 199, 209, 173, 101, 90, 80, 140, 95, 39, 159, 110, 100, 170, 0, 93, 108, 200, 44, 208, 106, 196, 44, 89, 110, 145, 196, 20, 84, 160, 234, 172, 245, 209, 221, 75, 194, 68, 121, 186, 144, 78, 2, 101, 49, 77, 19, 254, 124, 83, 51, 66, 66, 107, 24, 125, 211, 88, 111, 69, 132, 187, 94, 169, 27, 239, 46, 147, 203, 204, 214, 228, 14, 194, 162, 95, 92, 145, 111, 50, 252, 150, 181, 38, 58, 37, 172, 140, 56, 135, 230, 185, 97, 77, 70, 206, 33, 8, 255, 123, 8, 168, 75, 42, 175, 133, 166, 124, 100, 184, 43, 112, 98, 218, 136, 147, 138, 92, 188, 66, 94, 36, 194, 53, 190, 18, 180, 62, 146, 0, 79, 170, 20, 8, 250, 36, 12, 124, 247, 45, 226, 130, 190, 185, 110, 137, 197, 223, 134, 229, 35, 173, 92, 187, 163, 215, 18, 3, 191, 232, 97, 98, 41, 243, 216, 185, 165, 15, 244, 144, 80, 110, 33, 104, 78, 205, 214, 84, 88, 170, 165, 115, 164, 118, 55, 26, 150, 7, 244, 181, 15, 144, 88, 163, 140, 107, 186, 5, 37, 174, 173, 59, 139, 252, 55, 248, 146, 43, 192, 100, 31, 244] }
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [Wasm(Instantiate { code_id: 3, callback_code_hash: "41395186B730A70DB1185F81C83441654831C6D87D6F9FBC5B4EC380A110C989", msg: Binary([142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 50, 225, 25, 184, 18, 82, 42, 12, 191, 222, 12, 200, 64, 134, 140, 185, 214, 54, 93, 114, 39, 179, 82, 220, 27, 233, 64, 60, 117, 251, 247, 143, 101, 70, 185, 154, 46, 171, 1, 32, 33, 116, 178, 18, 15, 135, 38, 16, 31, 178, 81, 91, 178, 255, 101, 24, 10, 47, 3, 28, 56, 253, 122, 56, 174, 191, 156, 160, 231, 164, 210, 175, 233, 93, 61, 5, 166, 105, 237, 175, 146, 151, 79, 227, 218, 53, 11, 242, 221, 69, 74, 186, 34, 63, 121, 113, 250, 12, 230, 209, 128, 152, 196, 7, 13, 149, 119, 217, 133, 58, 10, 143, 119, 153, 14, 200, 29, 155, 247, 48, 143, 16, 197, 56, 245, 183, 135, 206, 220, 191, 174, 19, 86, 12, 22, 212, 136, 219, 238, 202, 214, 42, 99, 152, 158, 151, 107, 21, 0, 77, 111, 89, 69, 129, 19, 82, 246, 235, 97, 20, 92, 113, 52, 91, 203, 177, 171, 238, 91, 114, 213, 35, 7, 93, 93, 176, 225, 248, 158, 92, 115, 138, 182, 25, 6, 54, 234, 44, 150, 240, 35, 101, 215, 111, 84, 139, 108, 57, 130, 159, 51, 220, 199, 196, 255, 205, 106, 253, 247, 9, 153, 213, 10, 221, 27, 198, 251, 138, 184, 161, 226, 229, 37, 111, 241, 141, 185, 53, 213, 218, 50, 3, 36, 134, 234, 144, 22, 165, 229, 9, 83, 136, 248, 178, 197, 191, 209, 232, 85, 90, 14, 82, 193, 223, 81, 242, 155, 66, 159, 56, 121, 242, 83, 72, 252, 209, 123, 37, 9, 85, 97, 110, 173, 59, 90, 150, 61, 235, 7, 185, 222, 211, 144, 116, 49, 0, 213, 250, 49, 28, 139, 32, 247, 1, 144, 41, 169, 194, 245, 202, 166, 72, 247, 45, 103, 59, 217, 137, 138, 200, 205, 38, 14, 205, 76, 221, 222, 147, 226, 99, 36, 0, 26, 232, 111, 157, 103, 85, 17, 70, 30, 122, 22, 52, 154, 218, 56, 158, 233, 36, 56, 109, 173, 244, 138, 27, 174, 242, 245, 54, 15, 106, 148, 130, 149, 206, 147, 24, 203, 74, 200, 100, 179, 187, 11, 190, 140, 188, 36, 184, 75, 56, 101, 49, 3, 12, 180, 166, 109, 130, 122, 175, 234, 246, 151, 119, 226, 45, 209, 79, 140, 70, 145, 218, 125, 64, 191, 55, 236, 53, 130, 104, 252, 243, 27, 40, 182, 77, 129, 92, 71, 1, 70, 22, 184, 7, 66, 94, 84, 224, 66, 174, 180, 67, 138, 53, 38, 208, 8, 147, 119, 21, 243, 175, 171, 124, 17, 61, 164, 240, 245, 107, 39, 141, 175, 93, 48, 126, 139, 233, 1, 71, 97, 98, 193, 70, 204, 216, 188, 119, 128, 95, 247, 167, 49, 23, 36, 26, 163, 104, 82, 43, 14, 63, 171, 110, 19, 119, 38, 145, 205, 199, 147, 39, 253, 15, 183, 69, 25, 33, 50, 14, 29, 219, 209, 66, 204, 104, 165, 142, 134, 172, 205, 223, 139, 114, 174, 205, 129, 226, 44, 99, 60, 59, 4, 161, 58, 126, 127, 86, 104, 57, 126, 38, 80, 129, 214, 61, 208, 205, 116, 14, 55, 64, 61, 142, 57, 130, 200, 192, 208, 125, 101, 123, 231, 108, 236, 177, 27, 148, 27, 219, 67, 13, 159, 20, 130, 80, 40, 129, 90, 44, 114, 252, 192, 23, 97, 17, 145, 64, 197, 46, 5, 240, 22, 81, 181, 72, 249, 159, 219, 174, 179, 195, 68, 8, 196, 221, 76, 184, 235, 5, 57, 229, 47, 102, 194, 16, 187, 218, 17, 211, 120, 149, 56, 183, 92, 168, 199, 24, 215, 4, 43, 139, 104, 73, 29, 112, 48, 188, 193, 199, 131, 255, 242, 0, 106, 31, 247, 15, 177, 13, 243, 135, 231, 47, 109, 223, 228, 19, 141, 158, 21, 52, 76, 43, 82, 222, 139, 10, 137, 253, 158, 123, 112, 22, 176, 43, 54, 91, 106, 212, 57, 11, 23, 227, 99, 183, 39, 201, 26, 253, 87, 133, 129, 32, 103, 70, 52, 147, 165, 160, 92, 155, 97, 157, 117, 58, 54, 227, 249, 11, 156, 202, 27, 67, 209, 251, 223, 113, 6, 154, 101, 57, 234, 210, 87, 253, 117, 1, 45, 85, 149, 245, 142, 64, 236, 172, 162, 209, 181, 129, 162, 184, 22, 16, 252, 229, 152, 183, 114, 109, 239, 118, 135, 238, 177, 118, 25, 242, 158, 96, 213, 220, 234, 29, 234, 233, 50, 138, 48, 177, 50, 99, 235, 233, 69, 208, 104, 245, 54, 120, 206, 66, 103, 137, 226, 136, 92, 43, 89, 63, 108, 11, 46, 21, 167, 54, 252, 103, 71, 8, 29, 144, 93, 68, 163, 20, 180, 188, 199, 163, 23, 221, 78, 70, 158, 104, 49, 249, 207, 151, 94, 134, 223, 179, 139, 204, 109, 180, 101, 80, 23, 225, 102, 180, 19, 164, 180, 251, 47, 54, 207, 232, 147, 60, 224, 202, 126, 49, 84, 185, 115, 220, 254, 150, 56, 54, 119, 201, 85, 203, 16, 121, 193, 148, 130, 2, 129, 14, 172, 226, 249, 125, 83, 227, 44, 253, 171, 123, 44, 20, 172, 23, 45, 39, 198, 219, 132, 159, 220, 91, 156, 60, 218, 187, 19, 109, 40, 103, 209, 201, 102, 67, 215, 189, 126, 97, 2, 223, 69, 184, 219, 154, 69, 152, 226, 90, 140, 112, 229, 149, 137, 134, 28, 8, 99, 24, 167, 69, 67, 68, 125, 29, 177, 147, 150, 178, 34, 10, 89, 204, 221, 169, 176, 6, 116, 234, 53, 32, 144, 9, 248, 180, 28, 91, 37, 185, 23, 247, 170, 35, 58, 166, 121, 131, 6, 173, 205, 58, 69, 181, 182, 240, 53, 33, 201, 223, 82, 235, 201, 53, 40, 156, 5, 168, 220, 112, 129, 87, 148, 195, 54, 193, 82, 41, 123, 26, 67, 89, 187, 55, 246, 108, 21, 249, 182, 152, 118, 205, 70, 226, 16, 105, 223, 47, 143, 226, 143, 220, 75, 252, 37, 62, 100, 204, 13, 200, 54, 255, 177, 46, 190, 120, 204, 137, 16, 249, 164, 92, 205, 72, 200, 243, 106, 128, 41, 242, 169, 89, 69, 96, 107, 222, 3, 8, 33, 142, 178, 110, 206, 224, 209, 73, 207, 124, 48, 128, 200, 188, 236, 252, 133, 36, 244, 110, 50, 20, 64, 60, 144, 137, 250, 141, 120, 48, 239, 37, 203, 219, 166, 139, 57, 119, 123, 247, 222, 85, 169, 199, 209, 173, 101, 90, 80, 140, 95, 39, 159, 110, 100, 170, 0, 93, 108, 200, 44, 208, 106, 196, 44, 89, 110, 145, 196, 20, 84, 160, 234, 172, 245, 209, 221, 75, 194, 68, 121, 186, 144, 78, 2, 101, 49, 77, 19, 254, 124, 83, 51, 66, 66, 107, 24, 125, 211, 88, 111, 69, 132, 187, 94, 169, 27, 239, 46, 147, 203, 204, 214, 228, 14, 194, 162, 95, 92, 145, 111, 50, 252, 150, 181, 38, 58, 37, 172, 140, 56, 135, 230, 185, 97, 77, 70, 206, 33, 8, 255, 123, 8, 168, 75, 42, 175, 133, 166, 124, 100, 184, 43, 112, 98, 218, 136, 147, 138, 92, 188, 66, 94, 36, 194, 53, 190, 18, 180, 62, 146, 0, 79, 170, 20, 8, 250, 36, 12, 124, 247, 45, 226, 130, 190, 185, 110, 137, 197, 223, 134, 229, 35, 173, 92, 187, 163, 215, 18, 3, 191, 232, 97, 98, 41, 243, 216, 185, 165, 15, 244, 144, 80, 110, 33, 104, 78, 205, 214, 84, 88, 170, 165, 115, 164, 118, 55, 26, 150, 7, 244, 181, 15, 144, 88, 163, 140, 107, 186, 5, 37, 174, 173, 59, 139, 252, 55, 248, 146, 43, 192, 100, 31, 244]), auto_msg: None, send: [], contract_id: "trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh-trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm-pair-trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr-3", contract_duration: "", callback_sig: Some([1, 6, 136, 51, 168, 107, 38, 40, 113, 62, 25, 86, 228, 245, 71, 238, 148, 232, 38, 178, 81, 78, 244, 85, 192, 246, 65, 192, 85, 85, 238, 16]) })], log: [LogAttribute { key: "ftUfm0tUAwjzaRKhqELdc4QtsToyQg==", value: [147, 83, 38, 12, 146, 97, 79, 75, 147, 0, 184, 46, 7, 144, 136, 126, 13, 40, 148, 87, 214, 49, 183, 63, 135, 140, 58], pub_db: false, acc_pub_db: false, encrypted: true }, LogAttribute { key: "+GJgPm9MXc7bxdq6cJCrdnDxLi8=", value: [134, 214, 41, 6, 208, 121, 168, 36, 38, 177, 154, 230, 223, 87, 74, 176, 112, 58, 169, 78, 59, 94, 114, 142, 251, 60, 91, 244, 219, 47, 213, 24, 37, 148, 147, 122, 187, 125, 19, 97, 46, 118, 164, 220, 225, 197, 30, 173, 255, 123, 59, 175, 40, 191, 145, 217, 14, 16, 44, 245, 112, 36, 157, 93, 67, 125, 177, 3, 251, 41, 164, 204, 192, 228, 162, 137, 94, 104, 97, 83, 239, 160, 50, 0, 217, 111, 236, 77, 147, 74, 113, 149, 49, 95, 53, 221, 188, 179, 75, 25, 21, 214, 182, 186, 246], pub_db: false, acc_pub_db: false, encrypted: true }], data: None } }
dispatch msg 
init duration: 0s 
init sender: trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnrcallbackSig: 	 [1 6 136 51 168 107 38 40 113 62 25 86 228 245 71 238 148 232 38 178 81 78 244 85 192 246 65 192 85 85 238 16] 
code hash: 	 [65 57 81 134 183 48 167 13 177 24 95 129 200 52 65 101 72 49 198 216 125 111 159 188 91 78 195 128 161 16 201 137] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "41fc286dad09679bb57cd0fd1a72a8739c13f190185ec923c5124112d30da8d45680ea34470c8fddbbc3e504582739342b9a07ef57e2e8ea20285499c82b4d56"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "jiOfJcwNYQLINR80I/iXhrSytsQBeOv5LkYtVvGi/Q/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYTLhGbgSUioMv94MyECGjLnWNl1yJ7NS3BvpQDx1+/ePZUa5mi6rASAhdLISD4cmEB+yUVuy/2UYCi8DHDj9ejiuv5yg56TSr+ldPQWmae2vkpdP49o1C/LdRUq6Ij95cfoM5tGAmMQHDZV32YU6Co93mQ7IHZv3MI8QxTj1t4fO3L+uE1YMFtSI2+7K1ipjmJ6XaxUATW9ZRYETUvbrYRRccTRby7Gr7lty1SMHXV2w4fieXHOKthkGNuoslvAjZddvVItsOYKfM9zHxP/Nav33CZnVCt0bxvuKuKHi5SVv8Y25NdXaMgMkhuqQFqXlCVOI+LLFv9HoVVoOUsHfUfKbQp84efJTSPzReyUJVWFurTtalj3rB7ne05B0MQDV+jEciyD3AZApqcL1yqZI9y1nO9mJisjNJg7NTN3ek+JjJAAa6G+dZ1URRh56FjSa2jie6SQ4ba30ihuu8vU2D2qUgpXOkxjLSshks7sLvoy8JLhLOGUxAwy0pm2Ceq/q9pd34i3RT4xGkdp9QL837DWCaPzzGyi2TYFcRwFGFrgHQl5U4EKutEOKNSbQCJN3FfOvq3wRPaTw9Wsnja9dMH6L6QFHYWLBRszYvHeAX/enMRckGqNoUisOP6tuE3cmkc3Hkyf9D7dFGSEyDh3b0ULMaKWOhqzN34tyrs2B4ixjPDsEoTp+f1ZoOX4mUIHWPdDNdA43QD2OOYLIwNB9ZXvnbOyxG5Qb20MNnxSCUCiBWixy/MAXYRGRQMUuBfAWUbVI+Z/brrPDRAjE3Uy46wU55S9mwhC72hHTeJU4t1yoxxjXBCuLaEkdcDC8wceD//IAah/3D7EN84fnL23f5BONnhU0TCtS3osKif2ee3AWsCs2W2rUOQsX42O3J8ka/VeFgSBnRjSTpaBcm2GddTo24/kLnMobQ9H733EGmmU56tJX/XUBLVWV9Y5A7Kyi0bWBorgWEPzlmLdybe92h+6xdhnynmDV3Ood6ukyijCxMmPr6UXQaPU2eM5CZ4niiFwrWT9sCy4Vpzb8Z0cIHZBdRKMUtLzHoxfdTkaeaDH5z5deht+zi8xttGVQF+FmtBOktPsvNs/okzzgyn4xVLlz3P6WODZ3yVXLEHnBlIICgQ6s4vl9U+Ms/at7LBSsFy0nxtuEn9xbnDzauxNtKGfRyWZD171+YQLfRbjbmkWY4lqMcOWViYYcCGMYp0VDRH0dsZOWsiIKWczdqbAGdOo1IJAJ+LQcWyW5F/eqIzqmeYMGrc06RbW28DUhyd9S68k1KJwFqNxwgVeUwzbBUil7GkNZuzf2bBX5tph2zUbiEGnfL4/ij9xL/CU+ZMwNyDb/sS6+eMyJEPmkXM1IyPNqgCnyqVlFYGveAwghjrJuzuDRSc98MIDIvOz8hST0bjIUQDyQifqNeDDvJcvbpos5d3v33lWpx9GtZVpQjF8nn25kqgBdbMgs0GrELFlukcQUVKDqrPXR3UvCRHm6kE4CZTFNE/58UzNCQmsYfdNYb0WEu16pG+8uk8vM1uQOwqJfXJFvMvyWtSY6JayMOIfmuWFNRs4hCP97CKhLKq+FpnxkuCtwYtqIk4pcvEJeJMI1vhK0PpIAT6oUCPokDHz3LeKCvrluicXfhuUjrVy7o9cSA7/oYWIp89i5pQ/0kFBuIWhOzdZUWKqlc6R2NxqWB/S1D5BYo4xrugUlrq07i/w3+JIrwGQf9A=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([1, 6, 136, 51, 168, 107, 38, 40, 113, 62, 25, 86, 228, 245, 71, 238, 148, 232, 38, 178, 81, 78, 244, 85, 192, 246, 65, 192, 85, 85, 238, 16])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [50, 225, 25, 184, 18, 82, 42, 12, 191, 222, 12, 200, 64, 134, 140, 185, 214, 54, 93, 114, 39, 179, 82, 220, 27, 233, 64, 60, 117, 251, 247, 143, 101, 70, 185, 154, 46, 171, 1, 32, 33, 116, 178, 18, 15, 135, 38, 16, 31, 178, 81, 91, 178, 255, 101, 24, 10, 47, 3, 28, 56, 253, 122, 56, 174, 191, 156, 160, 231, 164, 210, 175, 233, 93, 61, 5, 166, 105, 237, 175, 146, 151, 79, 227, 218, 53, 11, 242, 221, 69, 74, 186, 34, 63, 121, 113, 250, 12, 230, 209, 128, 152, 196, 7, 13, 149, 119, 217, 133, 58, 10, 143, 119, 153, 14, 200, 29, 155, 247, 48, 143, 16, 197, 56, 245, 183, 135, 206, 220, 191, 174, 19, 86, 12, 22, 212, 136, 219, 238, 202, 214, 42, 99, 152, 158, 151, 107, 21, 0, 77, 111, 89, 69, 129, 19, 82, 246, 235, 97, 20, 92, 113, 52, 91, 203, 177, 171, 238, 91, 114, 213, 35, 7, 93, 93, 176, 225, 248, 158, 92, 115, 138, 182, 25, 6, 54, 234, 44, 150, 240, 35, 101, 215, 111, 84, 139, 108, 57, 130, 159, 51, 220, 199, 196, 255, 205, 106, 253, 247, 9, 153, 213, 10, 221, 27, 198, 251, 138, 184, 161, 226, 229, 37, 111, 241, 141, 185, 53, 213, 218, 50, 3, 36, 134, 234, 144, 22, 165, 229, 9, 83, 136, 248, 178, 197, 191, 209, 232, 85, 90, 14, 82, 193, 223, 81, 242, 155, 66, 159, 56, 121, 242, 83, 72, 252, 209, 123, 37, 9, 85, 97, 110, 173, 59, 90, 150, 61, 235, 7, 185, 222, 211, 144, 116, 49, 0, 213, 250, 49, 28, 139, 32, 247, 1, 144, 41, 169, 194, 245, 202, 166, 72, 247, 45, 103, 59, 217, 137, 138, 200, 205, 38, 14, 205, 76, 221, 222, 147, 226, 99, 36, 0, 26, 232, 111, 157, 103, 85, 17, 70, 30, 122, 22, 52, 154, 218, 56, 158, 233, 36, 56, 109, 173, 244, 138, 27, 174, 242, 245, 54, 15, 106, 148, 130, 149, 206, 147, 24, 203, 74, 200, 100, 179, 187, 11, 190, 140, 188, 36, 184, 75, 56, 101, 49, 3, 12, 180, 166, 109, 130, 122, 175, 234, 246, 151, 119, 226, 45, 209, 79, 140, 70, 145, 218, 125, 64, 191, 55, 236, 53, 130, 104, 252, 243, 27, 40, 182, 77, 129, 92, 71, 1, 70, 22, 184, 7, 66, 94, 84, 224, 66, 174, 180, 67, 138, 53, 38, 208, 8, 147, 119, 21, 243, 175, 171, 124, 17, 61, 164, 240, 245, 107, 39, 141, 175, 93, 48, 126, 139, 233, 1, 71, 97, 98, 193, 70, 204, 216, 188, 119, 128, 95, 247, 167, 49, 23, 36, 26, 163, 104, 82, 43, 14, 63, 171, 110, 19, 119, 38, 145, 205, 199, 147, 39, 253, 15, 183, 69, 25, 33, 50, 14, 29, 219, 209, 66, 204, 104, 165, 142, 134, 172, 205, 223, 139, 114, 174, 205, 129, 226, 44, 99, 60, 59, 4, 161, 58, 126, 127, 86, 104, 57, 126, 38, 80, 129, 214, 61, 208, 205, 116, 14, 55, 64, 61, 142, 57, 130, 200, 192, 208, 125, 101, 123, 231, 108, 236, 177, 27, 148, 27, 219, 67, 13, 159, 20, 130, 80, 40, 129, 90, 44, 114, 252, 192, 23, 97, 17, 145, 64, 197, 46, 5, 240, 22, 81, 181, 72, 249, 159, 219, 174, 179, 195, 68, 8, 196, 221, 76, 184, 235, 5, 57, 229, 47, 102, 194, 16, 187, 218, 17, 211, 120, 149, 56, 183, 92, 168, 199, 24, 215, 4, 43, 139, 104, 73, 29, 112, 48, 188, 193, 199, 131, 255, 242, 0, 106, 31, 247, 15, 177, 13, 243, 135, 231, 47, 109, 223, 228, 19, 141, 158, 21, 52, 76, 43, 82, 222, 139, 10, 137, 253, 158, 123, 112, 22, 176, 43, 54, 91, 106, 212, 57, 11, 23, 227, 99, 183, 39, 201, 26, 253, 87, 133, 129, 32, 103, 70, 52, 147, 165, 160, 92, 155, 97, 157, 117, 58, 54, 227, 249, 11, 156, 202, 27, 67, 209, 251, 223, 113, 6, 154, 101, 57, 234, 210, 87, 253, 117, 1, 45, 85, 149, 245, 142, 64, 236, 172, 162, 209, 181, 129, 162, 184, 22, 16, 252, 229, 152, 183, 114, 109, 239, 118, 135, 238, 177, 118, 25, 242, 158, 96, 213, 220, 234, 29, 234, 233, 50, 138, 48, 177, 50, 99, 235, 233, 69, 208, 104, 245, 54, 120, 206, 66, 103, 137, 226, 136, 92, 43, 89, 63, 108, 11, 46, 21, 167, 54, 252, 103, 71, 8, 29, 144, 93, 68, 163, 20, 180, 188, 199, 163, 23, 221, 78, 70, 158, 104, 49, 249, 207, 151, 94, 134, 223, 179, 139, 204, 109, 180, 101, 80, 23, 225, 102, 180, 19, 164, 180, 251, 47, 54, 207, 232, 147, 60, 224, 202, 126, 49, 84, 185, 115, 220, 254, 150, 56, 54, 119, 201, 85, 203, 16, 121, 193, 148, 130, 2, 129, 14, 172, 226, 249, 125, 83, 227, 44, 253, 171, 123, 44, 20, 172, 23, 45, 39, 198, 219, 132, 159, 220, 91, 156, 60, 218, 187, 19, 109, 40, 103, 209, 201, 102, 67, 215, 189, 126, 97, 2, 223, 69, 184, 219, 154, 69, 152, 226, 90, 140, 112, 229, 149, 137, 134, 28, 8, 99, 24, 167, 69, 67, 68, 125, 29, 177, 147, 150, 178, 34, 10, 89, 204, 221, 169, 176, 6, 116, 234, 53, 32, 144, 9, 248, 180, 28, 91, 37, 185, 23, 247, 170, 35, 58, 166, 121, 131, 6, 173, 205, 58, 69, 181, 182, 240, 53, 33, 201, 223, 82, 235, 201, 53, 40, 156, 5, 168, 220, 112, 129, 87, 148, 195, 54, 193, 82, 41, 123, 26, 67, 89, 187, 55, 246, 108, 21, 249, 182, 152, 118, 205, 70, 226, 16, 105, 223, 47, 143, 226, 143, 220, 75, 252, 37, 62, 100, 204, 13, 200, 54, 255, 177, 46, 190, 120, 204, 137, 16, 249, 164, 92, 205, 72, 200, 243, 106, 128, 41, 242, 169, 89, 69, 96, 107, 222, 3, 8, 33, 142, 178, 110, 206, 224, 209, 73, 207, 124, 48, 128, 200, 188, 236, 252, 133, 36, 244, 110, 50, 20, 64, 60, 144, 137, 250, 141, 120, 48, 239, 37, 203, 219, 166, 139, 57, 119, 123, 247, 222, 85, 169, 199, 209, 173, 101, 90, 80, 140, 95, 39, 159, 110, 100, 170, 0, 93, 108, 200, 44, 208, 106, 196, 44, 89, 110, 145, 196, 20, 84, 160, 234, 172, 245, 209, 221, 75, 194, 68, 121, 186, 144, 78, 2, 101, 49, 77, 19, 254, 124, 83, 51, 66, 66, 107, 24, 125, 211, 88, 111, 69, 132, 187, 94, 169, 27, 239, 46, 147, 203, 204, 214, 228, 14, 194, 162, 95, 92, 145, 111, 50, 252, 150, 181, 38, 58, 37, 172, 140, 56, 135, 230, 185, 97, 77, 70, 206, 33, 8, 255, 123, 8, 168, 75, 42, 175, 133, 166, 124, 100, 184, 43, 112, 98, 218, 136, 147, 138, 92, 188, 66, 94, 36, 194, 53, 190, 18, 180, 62, 146, 0, 79, 170, 20, 8, 250, 36, 12, 124, 247, 45, 226, 130, 190, 185, 110, 137, 197, 223, 134, 229, 35, 173, 92, 187, 163, 215, 18, 3, 191, 232, 97, 98, 41, 243, 216, 185, 165, 15, 244, 144, 80, 110, 33, 104, 78, 205, 214, 84, 88, 170, 165, 115, 164, 118, 55, 26, 150, 7, 244, 181, 15, 144, 88, 163, 140, 107, 186, 5, 37, 174, 173, 59, 139, 252, 55, 248, 146, 43, 192, 100, 31, 244] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"asset_infos\":[{\"token\":{\"contract_addr\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"viewing_key\":\"\"}},{\"token\":{\"contract_addr\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"viewing_key\":\"\"}}],\"token_code_id\":1,\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"init_hook\":{\"msg\":\"eyJyZWdpc3RlciI6eyJhc3NldF9pbmZvcyI6W3sidG9rZW4iOnsiY29udHJhY3RfYWRkciI6InRydXN0MTh2ZDhmcHd4emNrOTNxbHdnaGFqNmFyaDRwN2M1bjg5NGx4dmRoIiwidG9rZW5fY29kZV9oYXNoIjoiRTMyRDEwOEZGODdGNTIzNjRFRTBFNkI3RjI3Njc4Qjc2MTI4NDBGOTFFQTlGNjAzN0M3M0QxNkY2QjE1MkVFMiIsInZpZXdpbmdfa2V5IjoiIn19LHsidG9rZW4iOnsiY29udHJhY3RfYWRkciI6InRydXN0MThyNXN6bWE4aG05M3B2eDZsd3Bqd3l4cnV3MjdlMGs1NG5leXFtIiwidG9rZW5fY29kZV9oYXNoIjoiRTMyRDEwOEZGODdGNTIzNjRFRTBFNkI3RjI3Njc4Qjc2MTI4NDBGOTFFQTlGNjAzN0M3M0QxNkY2QjE1MkVFMiIsInZpZXdpbmdfa2V5IjoiIn19XX19\",\"contract_addr\":\"trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr\",\"code_hash\":\"b90b029f289cbcdad018193c3a29711134193d123ba93b0888473ecfb2ccca6c\"},\"prng_seed\":\"XQBc5MYpkktTxa+eWdvpkRKU/k+dIQyUb6TTH/6CmDY=\"}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] instance not found in cache. building a new one
INFO  [enclave_contract_engine::module_cache] Deserializing Wasm contract
INFO  [enclave_contract_engine::module_cache] Deserialized Wasm contract
INFO  [enclave_contract_engine::module_cache] Validating WASM memory demands
INFO  [enclave_contract_engine::module_cache] Validated WASM memory demands
INFO  [enclave_contract_engine::module_cache] Trying to create Wasmi module from parity...
INFO  [enclave_contract_engine::module_cache] Created Wasmi module from parity. Now checking for floating points...
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] storing module in cache
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\tpair_hash" value: "\"41395186b730a70db1185f81c83441654831c6d87d6f9fbc5b4ec380a110c989\""
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [82, 229, 177, 167, 138, 20, 200, 246, 228, 55, 17, 2, 217, 178, 80, 223, 23, 211, 57, 112, 189, 178, 229, 86, 241, 192, 213, 23, 227, 53, 253, 32]
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\tpair_info" value: "{\"asset_infos\":[{\"Token\":{\"contract_addr\":\"Oxp0hcYWLFiD7kX7LXR3qH2KTOU=\",\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"viewing_key\":\"BackSwap\"}},{\"Token\":{\"contract_addr\":\"OOkBb6e+yxCw2vuDJxDD45XsvtQ=\",\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"viewing_key\":\"BackSwap\"}}],\"contract_addr\":\"MDJNqPIpkMeEsQucvQMGSVbWJKI=\",\"liquidity_token\":\"\",\"token_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"asset0_volume\":\"0\",\"asset1_volume\":\"0\",\"factory\":{\"address\":\"trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr\",\"code_hash\":\"b90b029f289cbcdad018193c3a29711134193d123ba93b0888473ecfb2ccca6c\"}}"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [6, 145, 127, 203, 110, 169, 205, 45, 112, 28, 40, 47, 121, 209, 171, 66, 147, 50, 171, 105, 224, 198, 32, 219, 147, 242, 94, 7, 31, 134, 198, 49]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6IjQxMzk1MTg2YjczMGE3MGRiMTE4NWY4MWM4MzQ0MTY1NDgzMWM2ZDg3ZDZmOWZiYzViNGVjMzgwYTExMGM5ODkiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJzZXRfdmlld2luZ19rZXkiOnsia2V5IjoiQmFja1N3YXAiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7ImNvZGVfaGFzaCI6IjQxMzk1MTg2YjczMGE3MGRiMTE4NWY4MWM4MzQ0MTY1NDgzMWM2ZDg3ZDZmOWZiYzViNGVjMzgwYTExMGM5ODkiLCJwYWRkaW5nIjpudWxsfX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\",\"send\":[]}}},{\"wasm\":{\"instantiate\":{\"code_id\":1,\"callback_code_hash\":\"E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2\",\"msg\":\"eyJuYW1lIjoiTFAgdG9rZW4gZm9yIHRydXN0MTh2ZDhmcHd4emNrOTNxbHdnaGFqNmFyaDRwN2M1bjg5NGx4dmRoLXRydXN0MThyNXN6bWE4aG05M3B2eDZsd3Bqd3l4cnV3MjdlMGs1NG5leXFtIiwiYWRtaW4iOiJ0cnVzdDF4cWV5bTI4ajl4Z3YwcDkzcHd3dDZxY3hmOXRkdmY5enlzenVlZCIsInN5bWJvbCI6IlNXQVAtTFAiLCJkZWNpbWFscyI6NiwiaW5pdGlhbF9iYWxhbmNlcyI6bnVsbCwicHJuZ19zZWVkIjoiWFFCYzVNWXBra3RUeGErZVdkdnBrUktVL2srZElReVViNlRUSC82Q21EWT0iLCJpbml0X2hvb2siOnsibXNnIjoiZXlKd2IzTjBYMmx1YVhScFlXeHBlbVVpT250OWZRPT0iLCJjb250cmFjdF9hZGRyIjoidHJ1c3QxeHFleW0yOGo5eGd2MHA5M3B3d3Q2cWN4Zjl0ZHZmOXp5c3p1ZWQiLCJjb2RlX2hhc2giOiI0MTM5NTE4NmI3MzBhNzBkYjExODVmODFjODM0NDE2NTQ4MzFjNmQ4N2Q2ZjlmYmM1YjRlYzM4MGExMTBjOTg5In0sImNvbmZpZyI6eyJwdWJsaWNfdG90YWxfc3VwcGx5Ijp0cnVlfX0=\",\"auto_msg\":null,\"send\":[],\"contract_id\":\"trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh-trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm-LP-Token-trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued\",\"contract_duration\":\"\"}}},{\"wasm\":{\"execute\":{\"contract_addr\":\"trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr\",\"callback_code_hash\":\"b90b029f289cbcdad018193c3a29711134193d123ba93b0888473ecfb2ccca6c\",\"msg\":\"eyJyZWdpc3RlciI6eyJhc3NldF9pbmZvcyI6W3sidG9rZW4iOnsiY29udHJhY3RfYWRkciI6InRydXN0MTh2ZDhmcHd4emNrOTNxbHdnaGFqNmFyaDRwN2M1bjg5NGx4dmRoIiwidG9rZW5fY29kZV9oYXNoIjoiRTMyRDEwOEZGODdGNTIzNjRFRTBFNkI3RjI3Njc4Qjc2MTI4NDBGOTFFQTlGNjAzN0M3M0QxNkY2QjE1MkVFMiIsInZpZXdpbmdfa2V5IjoiIn19LHsidG9rZW4iOnsiY29udHJhY3RfYWRkciI6InRydXN0MThyNXN6bWE4aG05M3B2eDZsd3Bqd3l4cnV3MjdlMGs1NG5leXFtIiwidG9rZW5fY29kZV9oYXNoIjoiRTMyRDEwOEZGODdGNTIzNjRFRTBFNkI3RjI3Njc4Qjc2MTI4NDBGOTFFQTlGNjAzN0M3M0QxNkY2QjE1MkVFMiIsInZpZXdpbmdfa2V5IjoiIn19XX19\",\"send\":[]}}}],\"log\":[{\"key\":\"status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true},{\"key\":\"pair\",\"value\":[76,80,32,116,111,107,101,110,32,102,111,114,32,116,114,117,115,116,49,56,118,100,56,102,112,119,120,122,99,107,57,51,113,108,119,103,104,97,106,54,97,114,104,52,112,55,99,53,110,56,57,52,108,120,118,100,104,45,116,114,117,115,116,49,56,114,53,115,122,109,97,56,104,109,57,51,112,118,120,54,108,119,112,106,119,121,120,114,117,119,50,55,101,48,107,53,52,110,101,121,113,109],\"pub_db\":true,\"acc_pub_db\":false,\"encrypted\":false},{\"key\":\"initiated\",\"value\":[99,111,110,116,114,97,99,116],\"pub_db\":true,\"acc_pub_db\":true,\"encrypted\":false}]}}"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [4, 37, 55, 164, 111, 166, 225, 21, 242, 180, 194, 101, 68, 17, 128, 225, 248, 205, 195, 194, 203, 175, 138, 0, 36, 12, 225, 32, 220, 25, 140, 71, 142, 72, 117, 183, 143, 7, 248, 168, 185, 20, 38, 200, 185, 148, 173, 181, 254, 107, 139, 154, 162, 144, 80, 162, 197, 41, 102, 43, 16, 92, 241, 66, 219, 23, 125, 227, 232, 232, 218, 77, 10, 57, 36, 206, 166, 175, 231, 95, 116, 240, 154, 63, 183, 10, 67, 179, 64, 170, 77, 41, 163, 220, 111, 216, 187, 176, 241, 66, 59, 120, 222, 46, 90, 43, 249, 46, 100, 148, 133, 234, 209, 168, 240, 79, 91, 63, 105, 109, 35, 73, 37, 22, 154, 169, 248, 124, 172, 203, 120, 88, 110, 82, 41, 115, 243, 114, 245, 34, 47, 238, 120, 214, 62, 246, 233, 142, 143, 5, 198, 74, 209, 243, 169, 179, 14, 205, 93, 251, 167, 110, 47, 134, 30, 82, 13, 103, 19, 49, 75, 241, 111, 205, 76, 187, 126, 41, 10, 155, 151, 104, 168, 85, 195, 18, 162, 55, 126, 222, 60, 41, 177, 69, 106, 0, 180, 15, 105, 145, 115, 155, 124, 231, 39, 218, 117, 76, 168, 248, 83, 85, 208, 122, 5, 117, 71, 192, 7, 96, 47, 160, 235, 237, 2, 49, 89, 72, 127, 241, 45, 37, 137, 108, 129, 18, 82, 218, 61, 190, 140, 88, 83, 65, 244, 20, 170, 37, 213, 10, 71, 149, 162, 18, 160, 89, 249, 11, 74, 63, 140, 3, 53, 255, 32, 53, 189, 129, 232, 100, 36, 100, 200, 9, 117, 246, 41, 234, 176, 88, 200, 133, 106, 198, 105, 99, 169, 157, 170, 208, 60, 234, 234, 23, 179, 178, 82, 150, 156, 79, 135, 133, 17, 36, 76, 82, 251, 43, 151, 43, 70, 48, 165, 145, 90, 130, 185, 249, 180, 71, 5, 174, 243, 10, 216, 75, 67, 19, 36, 165, 45, 223, 120, 208, 128, 192] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [105, 177, 158, 81, 255, 101, 138, 120, 209, 124, 104, 15, 1, 3, 11, 186, 80, 171, 209, 140, 25, 60, 23, 209, 176, 217, 210, 210, 112, 79, 99, 173, 115, 64, 60, 217, 17, 200, 35, 26, 174, 216, 173, 77, 66, 227, 9, 174, 75, 226, 138, 167, 196, 210, 241, 124, 150, 163, 95, 184, 255, 48, 93, 37, 255, 179, 101, 112, 6, 45, 190, 48, 152, 120, 29, 30, 191, 223, 158, 242, 250, 214, 159, 150, 21, 71, 184, 123, 183, 234, 230, 69, 57, 5, 61, 24, 38, 127, 57, 43, 140, 227, 138, 152, 137, 230, 167, 232, 122, 135, 140, 3, 140, 108, 84, 217, 156, 124, 76, 56, 243, 146, 180, 43, 108, 205, 8, 165, 123, 160, 232, 65, 181, 208, 8, 163, 21, 208, 177, 189, 180, 81, 174, 7, 92, 201, 154, 18, 7, 235, 160, 35, 84, 99, 240, 45, 51, 45, 198, 67, 171, 13, 17, 221, 37, 194, 35, 51, 232, 43, 209, 117, 9, 201, 251, 198, 100, 4, 220, 176, 66, 12, 232, 193, 74, 92, 39, 177, 183, 106, 129, 127, 187, 179, 7, 186, 28, 194, 98, 218, 183, 87, 235, 129, 112, 27, 253, 165, 99, 43, 139, 77, 90, 32, 78, 249, 52, 44, 230, 185, 245, 213, 189, 249, 112, 22, 205, 233, 188, 244, 229, 192, 104, 219, 238, 208, 97, 210, 95, 250, 110, 52, 14, 147, 59, 64, 221, 222, 42, 168, 226, 252, 110, 171, 235, 207, 87, 18, 8, 3, 108, 158, 140, 32, 148, 95, 160, 133, 186, 28, 23, 244, 70, 134, 58, 17, 188, 169, 171, 107, 34, 135, 2, 33, 238, 102, 219, 128, 115, 241, 134, 84, 24, 221, 221, 150, 155, 247, 148, 59, 94, 5, 252, 40, 34, 121, 143, 249, 47, 193, 93, 58, 2, 192, 6, 129, 143, 183, 225, 6, 71, 255, 40, 153, 15, 251, 160, 8, 221, 125, 141, 227, 129, 107, 110, 180] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [4, 37, 55, 164, 111, 166, 225, 21, 242, 180, 194, 101, 68, 17, 128, 225, 248, 205, 195, 194, 203, 175, 138, 0, 36, 12, 225, 32, 220, 25, 140, 71, 142, 72, 117, 183, 143, 7, 248, 168, 185, 20, 38, 200, 185, 148, 173, 181, 254, 107, 139, 154, 162, 144, 80, 162, 197, 41, 102, 43, 16, 92, 241, 66, 219, 23, 125, 227, 232, 232, 218, 77, 10, 57, 36, 206, 166, 175, 231, 95, 116, 240, 154, 63, 183, 10, 67, 179, 64, 170, 77, 41, 163, 220, 111, 216, 187, 176, 241, 66, 59, 120, 222, 46, 90, 43, 249, 46, 100, 148, 133, 234, 209, 168, 240, 79, 91, 63, 105, 109, 35, 73, 37, 22, 154, 169, 248, 124, 172, 203, 120, 88, 110, 82, 41, 115, 243, 114, 245, 34, 47, 238, 120, 214, 62, 246, 233, 142, 143, 5, 198, 74, 209, 243, 169, 179, 14, 205, 93, 251, 167, 110, 47, 134, 30, 82, 13, 103, 19, 49, 75, 241, 111, 205, 76, 187, 126, 41, 10, 155, 151, 104, 168, 85, 195, 18, 162, 55, 126, 222, 60, 41, 177, 69, 106, 0, 180, 15, 105, 145, 115, 155, 124, 231, 39, 218, 117, 76, 168, 248, 83, 85, 208, 122, 5, 117, 71, 192, 7, 96, 47, 160, 235, 237, 2, 49, 89, 72, 127, 241, 45, 37, 137, 108, 129, 18, 82, 218, 61, 190, 140, 88, 83, 65, 244, 20, 170, 37, 213, 10, 71, 149, 162, 18, 160, 89, 249, 11, 74, 63, 140, 3, 53, 255, 32, 53, 189, 129, 232, 100, 36, 100, 200, 9, 117, 246, 41, 234, 176, 88, 200, 133, 106, 198, 105, 99, 169, 157, 170, 208, 60, 234, 234, 23, 179, 178, 82, 150, 156, 79, 135, 133, 17, 36, 76, 82, 251, 43, 151, 43, 70, 48, 165, 145, 90, 130, 185, 249, 180, 71, 5, 174, 243, 10, 216, 75, 67, 19, 36, 165, 45, 223, 120, 208, 128, 192] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [105, 177, 158, 81, 255, 101, 138, 120, 209, 124, 104, 15, 1, 3, 11, 186, 80, 171, 209, 140, 25, 60, 23, 209, 176, 217, 210, 210, 112, 79, 99, 173, 115, 64, 60, 217, 17, 200, 35, 26, 174, 216, 173, 77, 66, 227, 9, 174, 75, 226, 138, 167, 196, 210, 241, 124, 150, 163, 95, 184, 255, 48, 93, 37, 255, 179, 101, 112, 6, 45, 190, 48, 152, 120, 29, 30, 191, 223, 158, 242, 250, 214, 159, 150, 21, 71, 184, 123, 183, 234, 230, 69, 57, 5, 61, 24, 38, 127, 57, 43, 140, 227, 138, 152, 137, 230, 167, 232, 122, 135, 140, 3, 140, 108, 84, 217, 156, 124, 76, 56, 243, 146, 180, 43, 108, 205, 8, 165, 123, 160, 232, 65, 181, 208, 8, 163, 21, 208, 177, 189, 180, 81, 174, 7, 92, 201, 154, 18, 7, 235, 160, 35, 84, 99, 240, 45, 51, 45, 198, 67, 171, 13, 17, 221, 37, 194, 35, 51, 232, 43, 209, 117, 9, 201, 251, 198, 100, 4, 220, 176, 66, 12, 232, 193, 74, 92, 39, 177, 183, 106, 129, 127, 187, 179, 7, 186, 28, 194, 98, 218, 183, 87, 235, 129, 112, 27, 253, 165, 99, 43, 139, 77, 90, 32, 78, 249, 52, 44, 230, 185, 245, 213, 189, 249, 112, 22, 205, 233, 188, 244, 229, 192, 104, 219, 238, 208, 97, 210, 95, 250, 110, 52, 14, 147, 59, 64, 221, 222, 42, 168, 226, 252, 110, 171, 235, 207, 87, 18, 8, 3, 108, 158, 140, 32, 148, 95, 160, 133, 186, 28, 23, 244, 70, 134, 58, 17, 188, 169, 171, 107, 34, 135, 2, 33, 238, 102, 219, 128, 115, 241, 134, 84, 24, 221, 221, 150, 155, 247, 148, 59, 94, 5, 252, 40, 34, 121, 143, 249, 47, 193, 93, 58, 2, 192, 6, 129, 143, 183, 225, 6, 71, 255, 40, 153, 15, 251, 160, 8, 221, 125, 141, 227, 129, 107, 110, 180] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [24, 235, 46, 162, 188, 200, 33, 18, 96, 209, 61, 107, 145, 65, 86, 48, 10, 76, 33, 229, 233, 230, 147, 124, 134, 188, 164, 46, 201, 137, 211, 80, 9, 113, 246, 28, 209, 181, 80, 176, 19, 59, 196, 81, 242, 254, 125, 68, 51, 89, 120, 189, 92, 103, 19, 20, 156, 58, 104, 168, 249, 95, 145, 11, 6, 103, 24, 38, 80, 172, 197, 116, 228, 12, 202, 175, 155, 82, 129, 142, 112, 21, 67, 52, 30, 113, 120, 38, 63, 93, 18, 50, 254, 242, 192, 149, 220, 124, 182, 128, 149, 101, 211, 209, 66, 154, 207, 222, 35, 147, 55, 104, 33, 10, 105, 237, 63, 165, 25, 229, 70, 97, 33, 132, 141, 11, 214, 57, 144, 220, 161, 126, 247, 229, 111, 45, 74, 105, 149, 74, 209, 244, 242, 14, 75, 4, 38, 24, 145, 25, 108, 117, 128, 98, 203, 250, 229, 28, 208, 61, 5, 59, 206, 182, 4, 151, 138, 71, 96, 180, 119, 165, 114, 10, 93, 6, 50, 20, 18, 224, 246, 192, 96, 85, 234, 64, 255, 63, 238, 107, 40, 24, 66, 202, 144, 212, 253, 229, 128, 94, 231, 153, 241, 174, 198, 140, 237, 199, 194, 250, 195, 80, 249, 54, 133, 123, 36, 84, 118, 4, 20, 46, 155, 200, 118, 134, 132, 66, 226, 229, 210, 9, 32, 126, 226, 25, 254, 178, 213, 253, 132, 8, 105, 194, 198, 122, 218, 70, 193, 217, 76, 197, 229, 114, 59, 255, 15, 233, 214, 148, 85, 249, 126, 53, 33, 95, 137, 39, 177, 238, 243, 39, 178, 80, 123, 181, 30, 133, 203, 111, 76, 176, 206, 58, 219, 253, 65, 157, 161, 66, 246, 66, 40, 37, 117, 139, 208, 12, 136, 210, 117, 232, 216, 157, 244, 214, 113, 101, 142, 232, 144, 180, 218, 116, 28, 212, 144, 103, 229, 196, 9, 112, 156, 93, 149, 68, 112, 66, 123, 228, 178, 7, 222, 87, 57, 75, 226, 113, 30, 45, 215, 155, 98, 218, 219, 20, 184, 126, 150, 188, 138, 199, 202, 179, 188, 63, 159, 91, 63, 95, 69, 126, 78, 0, 195, 192, 182, 191, 139, 129, 220, 245, 247, 188, 23, 188, 210, 42, 54, 245, 65, 239, 79, 6, 22, 140, 225, 13, 76, 43, 231, 156, 233, 175, 155, 176, 117, 150, 249, 191, 246, 56, 255, 83, 122, 60, 50, 85, 193, 220, 182, 2, 170, 100, 251, 73, 103, 100, 24, 84, 71, 206, 0, 243, 233, 252, 28, 240, 219, 39, 143, 162, 108, 166, 162, 31, 68, 203, 100, 207, 26, 109, 71, 164, 158, 59, 84, 139, 199, 210, 204, 107, 183, 161, 213, 121, 254, 216, 213, 40, 224, 207, 12, 166, 216, 243, 1, 207, 165, 175, 167, 55, 42, 1, 79, 19, 44, 41, 81, 221, 24, 72, 159, 78, 85, 112, 155, 28, 0, 106, 217, 111, 56, 160, 87, 232, 254, 107, 234, 231, 132, 234, 98, 192, 204, 122, 210, 227, 201, 208, 121, 220, 247, 14, 16, 8, 157, 15, 125, 235, 225, 30, 204, 141, 89, 116, 188, 181, 255, 28, 119, 14, 74, 117, 249, 180, 17, 83, 117, 184, 155, 116, 166, 84, 247, 216, 84, 57, 85, 228, 166, 178, 235, 39, 105, 158, 162, 135, 152, 11, 74, 87, 99, 159, 127, 98, 149, 111, 173, 105, 156, 124, 135, 120, 54, 37, 116, 115, 89, 67, 177, 109, 77, 7, 197, 174, 24, 105, 171, 89, 52, 84, 97, 192, 99, 132, 70, 36] }
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [213, 71, 128, 95, 9, 244, 240, 53, 43, 31, 69, 44, 130, 157, 183, 140, 210, 180, 186, 201, 185, 174, 90, 229, 7, 253, 23, 96, 94, 116, 91, 100, 39, 123, 178, 100, 0, 178, 135, 110, 100, 92, 52, 39, 213, 48, 107, 188, 13, 5, 11, 138, 105, 82, 53, 13, 156, 20, 76, 9, 67, 124, 118, 211, 223, 21, 140, 134, 249, 200, 239, 88, 191, 179, 214, 35, 132, 69, 192, 253, 196, 184, 10, 191, 215, 79, 164, 155, 122, 221, 32, 171, 73, 59, 148, 157, 95, 77, 240, 220, 122, 60, 109, 124, 28, 16, 119, 139, 221, 180, 130, 5, 126, 107, 9, 40, 113, 108, 160, 162, 19, 40, 33, 14, 157, 150, 68, 135, 205, 207, 139, 165, 98, 217, 115, 2, 204, 81, 237, 16, 232, 233, 179, 191, 95, 100, 17, 93, 190, 238, 91, 21, 139, 158, 225, 5, 211, 181, 171, 207, 176, 235, 79, 4, 206, 103, 240, 159, 93, 177, 191, 97, 110, 95, 93, 33, 15, 74, 144, 66, 87, 85, 55, 94, 88, 10, 130, 43, 98, 132, 215, 223, 135, 123, 6, 189, 150, 159, 147, 27, 192, 68, 126, 37, 26, 167, 87, 201, 253, 230, 9, 13, 218, 140, 7, 218, 183, 78, 129, 230, 200, 196, 228, 65, 95, 199, 17, 222, 46, 196, 169, 185, 191, 228, 119, 241, 232, 94, 254, 146, 32, 183, 50, 32, 230, 59, 162, 23, 7, 194, 32, 227, 6, 122, 85, 7, 206, 16, 64, 115, 26, 240, 253, 43, 120, 205, 234, 218, 177, 229, 239, 214, 22, 143, 94, 178, 95, 140, 150, 120, 158, 148, 208, 46, 3, 64, 220, 221, 243, 41, 104, 131, 146, 39, 82, 171, 112, 97, 40, 181, 29, 116, 126, 107, 141, 33, 126, 20, 187, 137, 14, 67, 47, 2, 73, 60, 98, 237, 43, 134, 52, 248, 222, 216, 179, 243, 138, 9, 241, 16, 40, 11, 187, 132, 151, 97, 105, 9, 214, 0, 209, 157, 116, 160, 243, 37, 0, 5, 83, 20, 180, 0, 79, 242, 241, 176, 3, 230, 189, 47, 95, 145, 158, 133, 255, 226, 183, 138, 149, 241, 147, 231, 42, 41, 109, 70, 198, 90, 26, 50, 212, 233, 51, 10, 102, 169, 105, 129, 91, 232, 181, 98, 102, 11, 131, 193, 71, 203, 126, 94, 249, 107, 144, 35, 48, 71, 88, 133, 124, 149, 56, 253, 43, 152, 138, 178, 91, 134, 170, 45, 249, 146, 62, 250, 176, 15, 29, 121, 189, 70, 70, 130, 216, 17, 131, 156, 26, 109, 252, 123, 109, 109, 136, 197, 88, 201, 73, 205, 95, 90, 214, 139, 15, 90, 111, 225, 10, 207, 224, 20, 77, 93, 20, 184] }
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [Wasm(Execute { contract_addr: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 4, 37, 55, 164, 111, 166, 225, 21, 242, 180, 194, 101, 68, 17, 128, 225, 248, 205, 195, 194, 203, 175, 138, 0, 36, 12, 225, 32, 220, 25, 140, 71, 142, 72, 117, 183, 143, 7, 248, 168, 185, 20, 38, 200, 185, 148, 173, 181, 254, 107, 139, 154, 162, 144, 80, 162, 197, 41, 102, 43, 16, 92, 241, 66, 219, 23, 125, 227, 232, 232, 218, 77, 10, 57, 36, 206, 166, 175, 231, 95, 116, 240, 154, 63, 183, 10, 67, 179, 64, 170, 77, 41, 163, 220, 111, 216, 187, 176, 241, 66, 59, 120, 222, 46, 90, 43, 249, 46, 100, 148, 133, 234, 209, 168, 240, 79, 91, 63, 105, 109, 35, 73, 37, 22, 154, 169, 248, 124, 172, 203, 120, 88, 110, 82, 41, 115, 243, 114, 245, 34, 47, 238, 120, 214, 62, 246, 233, 142, 143, 5, 198, 74, 209, 243, 169, 179, 14, 205, 93, 251, 167, 110, 47, 134, 30, 82, 13, 103, 19, 49, 75, 241, 111, 205, 76, 187, 126, 41, 10, 155, 151, 104, 168, 85, 195, 18, 162, 55, 126, 222, 60, 41, 177, 69, 106, 0, 180, 15, 105, 145, 115, 155, 124, 231, 39, 218, 117, 76, 168, 248, 83, 85, 208, 122, 5, 117, 71, 192, 7, 96, 47, 160, 235, 237, 2, 49, 89, 72, 127, 241, 45, 37, 137, 108, 129, 18, 82, 218, 61, 190, 140, 88, 83, 65, 244, 20, 170, 37, 213, 10, 71, 149, 162, 18, 160, 89, 249, 11, 74, 63, 140, 3, 53, 255, 32, 53, 189, 129, 232, 100, 36, 100, 200, 9, 117, 246, 41, 234, 176, 88, 200, 133, 106, 198, 105, 99, 169, 157, 170, 208, 60, 234, 234, 23, 179, 178, 82, 150, 156, 79, 135, 133, 17, 36, 76, 82, 251, 43, 151, 43, 70, 48, 165, 145, 90, 130, 185, 249, 180, 71, 5, 174, 243, 10, 216, 75, 67, 19, 36, 165, 45, 223, 120, 208, 128, 192]), send: [], callback_sig: Some([119, 192, 252, 168, 166, 163, 154, 208, 166, 232, 43, 78, 177, 181, 91, 62, 231, 64, 33, 95, 148, 27, 81, 215, 75, 81, 100, 236, 213, 153, 76, 111]) }), Wasm(Execute { contract_addr: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 105, 177, 158, 81, 255, 101, 138, 120, 209, 124, 104, 15, 1, 3, 11, 186, 80, 171, 209, 140, 25, 60, 23, 209, 176, 217, 210, 210, 112, 79, 99, 173, 115, 64, 60, 217, 17, 200, 35, 26, 174, 216, 173, 77, 66, 227, 9, 174, 75, 226, 138, 167, 196, 210, 241, 124, 150, 163, 95, 184, 255, 48, 93, 37, 255, 179, 101, 112, 6, 45, 190, 48, 152, 120, 29, 30, 191, 223, 158, 242, 250, 214, 159, 150, 21, 71, 184, 123, 183, 234, 230, 69, 57, 5, 61, 24, 38, 127, 57, 43, 140, 227, 138, 152, 137, 230, 167, 232, 122, 135, 140, 3, 140, 108, 84, 217, 156, 124, 76, 56, 243, 146, 180, 43, 108, 205, 8, 165, 123, 160, 232, 65, 181, 208, 8, 163, 21, 208, 177, 189, 180, 81, 174, 7, 92, 201, 154, 18, 7, 235, 160, 35, 84, 99, 240, 45, 51, 45, 198, 67, 171, 13, 17, 221, 37, 194, 35, 51, 232, 43, 209, 117, 9, 201, 251, 198, 100, 4, 220, 176, 66, 12, 232, 193, 74, 92, 39, 177, 183, 106, 129, 127, 187, 179, 7, 186, 28, 194, 98, 218, 183, 87, 235, 129, 112, 27, 253, 165, 99, 43, 139, 77, 90, 32, 78, 249, 52, 44, 230, 185, 245, 213, 189, 249, 112, 22, 205, 233, 188, 244, 229, 192, 104, 219, 238, 208, 97, 210, 95, 250, 110, 52, 14, 147, 59, 64, 221, 222, 42, 168, 226, 252, 110, 171, 235, 207, 87, 18, 8, 3, 108, 158, 140, 32, 148, 95, 160, 133, 186, 28, 23, 244, 70, 134, 58, 17, 188, 169, 171, 107, 34, 135, 2, 33, 238, 102, 219, 128, 115, 241, 134, 84, 24, 221, 221, 150, 155, 247, 148, 59, 94, 5, 252, 40, 34, 121, 143, 249, 47, 193, 93, 58, 2, 192, 6, 129, 143, 183, 225, 6, 71, 255, 40, 153, 15, 251, 160, 8, 221, 125, 141, 227, 129, 107, 110, 180]), send: [], callback_sig: Some([80, 39, 43, 205, 61, 50, 78, 140, 83, 217, 156, 199, 220, 227, 44, 60, 126, 95, 171, 44, 204, 102, 230, 228, 135, 215, 120, 155, 41, 163, 175, 126]) }), Wasm(Execute { contract_addr: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 4, 37, 55, 164, 111, 166, 225, 21, 242, 180, 194, 101, 68, 17, 128, 225, 248, 205, 195, 194, 203, 175, 138, 0, 36, 12, 225, 32, 220, 25, 140, 71, 142, 72, 117, 183, 143, 7, 248, 168, 185, 20, 38, 200, 185, 148, 173, 181, 254, 107, 139, 154, 162, 144, 80, 162, 197, 41, 102, 43, 16, 92, 241, 66, 219, 23, 125, 227, 232, 232, 218, 77, 10, 57, 36, 206, 166, 175, 231, 95, 116, 240, 154, 63, 183, 10, 67, 179, 64, 170, 77, 41, 163, 220, 111, 216, 187, 176, 241, 66, 59, 120, 222, 46, 90, 43, 249, 46, 100, 148, 133, 234, 209, 168, 240, 79, 91, 63, 105, 109, 35, 73, 37, 22, 154, 169, 248, 124, 172, 203, 120, 88, 110, 82, 41, 115, 243, 114, 245, 34, 47, 238, 120, 214, 62, 246, 233, 142, 143, 5, 198, 74, 209, 243, 169, 179, 14, 205, 93, 251, 167, 110, 47, 134, 30, 82, 13, 103, 19, 49, 75, 241, 111, 205, 76, 187, 126, 41, 10, 155, 151, 104, 168, 85, 195, 18, 162, 55, 126, 222, 60, 41, 177, 69, 106, 0, 180, 15, 105, 145, 115, 155, 124, 231, 39, 218, 117, 76, 168, 248, 83, 85, 208, 122, 5, 117, 71, 192, 7, 96, 47, 160, 235, 237, 2, 49, 89, 72, 127, 241, 45, 37, 137, 108, 129, 18, 82, 218, 61, 190, 140, 88, 83, 65, 244, 20, 170, 37, 213, 10, 71, 149, 162, 18, 160, 89, 249, 11, 74, 63, 140, 3, 53, 255, 32, 53, 189, 129, 232, 100, 36, 100, 200, 9, 117, 246, 41, 234, 176, 88, 200, 133, 106, 198, 105, 99, 169, 157, 170, 208, 60, 234, 234, 23, 179, 178, 82, 150, 156, 79, 135, 133, 17, 36, 76, 82, 251, 43, 151, 43, 70, 48, 165, 145, 90, 130, 185, 249, 180, 71, 5, 174, 243, 10, 216, 75, 67, 19, 36, 165, 45, 223, 120, 208, 128, 192]), send: [], callback_sig: Some([119, 192, 252, 168, 166, 163, 154, 208, 166, 232, 43, 78, 177, 181, 91, 62, 231, 64, 33, 95, 148, 27, 81, 215, 75, 81, 100, 236, 213, 153, 76, 111]) }), Wasm(Execute { contract_addr: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm"), callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 105, 177, 158, 81, 255, 101, 138, 120, 209, 124, 104, 15, 1, 3, 11, 186, 80, 171, 209, 140, 25, 60, 23, 209, 176, 217, 210, 210, 112, 79, 99, 173, 115, 64, 60, 217, 17, 200, 35, 26, 174, 216, 173, 77, 66, 227, 9, 174, 75, 226, 138, 167, 196, 210, 241, 124, 150, 163, 95, 184, 255, 48, 93, 37, 255, 179, 101, 112, 6, 45, 190, 48, 152, 120, 29, 30, 191, 223, 158, 242, 250, 214, 159, 150, 21, 71, 184, 123, 183, 234, 230, 69, 57, 5, 61, 24, 38, 127, 57, 43, 140, 227, 138, 152, 137, 230, 167, 232, 122, 135, 140, 3, 140, 108, 84, 217, 156, 124, 76, 56, 243, 146, 180, 43, 108, 205, 8, 165, 123, 160, 232, 65, 181, 208, 8, 163, 21, 208, 177, 189, 180, 81, 174, 7, 92, 201, 154, 18, 7, 235, 160, 35, 84, 99, 240, 45, 51, 45, 198, 67, 171, 13, 17, 221, 37, 194, 35, 51, 232, 43, 209, 117, 9, 201, 251, 198, 100, 4, 220, 176, 66, 12, 232, 193, 74, 92, 39, 177, 183, 106, 129, 127, 187, 179, 7, 186, 28, 194, 98, 218, 183, 87, 235, 129, 112, 27, 253, 165, 99, 43, 139, 77, 90, 32, 78, 249, 52, 44, 230, 185, 245, 213, 189, 249, 112, 22, 205, 233, 188, 244, 229, 192, 104, 219, 238, 208, 97, 210, 95, 250, 110, 52, 14, 147, 59, 64, 221, 222, 42, 168, 226, 252, 110, 171, 235, 207, 87, 18, 8, 3, 108, 158, 140, 32, 148, 95, 160, 133, 186, 28, 23, 244, 70, 134, 58, 17, 188, 169, 171, 107, 34, 135, 2, 33, 238, 102, 219, 128, 115, 241, 134, 84, 24, 221, 221, 150, 155, 247, 148, 59, 94, 5, 252, 40, 34, 121, 143, 249, 47, 193, 93, 58, 2, 192, 6, 129, 143, 183, 225, 6, 71, 255, 40, 153, 15, 251, 160, 8, 221, 125, 141, 227, 129, 107, 110, 180]), send: [], callback_sig: Some([80, 39, 43, 205, 61, 50, 78, 140, 83, 217, 156, 199, 220, 227, 44, 60, 126, 95, 171, 44, 204, 102, 230, 228, 135, 215, 120, 155, 41, 163, 175, 126]) }), Wasm(Instantiate { code_id: 1, callback_code_hash: "E32D108FF87F52364EE0E6B7F27678B7612840F91EA9F6037C73D16F6B152EE2", msg: Binary([142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 24, 235, 46, 162, 188, 200, 33, 18, 96, 209, 61, 107, 145, 65, 86, 48, 10, 76, 33, 229, 233, 230, 147, 124, 134, 188, 164, 46, 201, 137, 211, 80, 9, 113, 246, 28, 209, 181, 80, 176, 19, 59, 196, 81, 242, 254, 125, 68, 51, 89, 120, 189, 92, 103, 19, 20, 156, 58, 104, 168, 249, 95, 145, 11, 6, 103, 24, 38, 80, 172, 197, 116, 228, 12, 202, 175, 155, 82, 129, 142, 112, 21, 67, 52, 30, 113, 120, 38, 63, 93, 18, 50, 254, 242, 192, 149, 220, 124, 182, 128, 149, 101, 211, 209, 66, 154, 207, 222, 35, 147, 55, 104, 33, 10, 105, 237, 63, 165, 25, 229, 70, 97, 33, 132, 141, 11, 214, 57, 144, 220, 161, 126, 247, 229, 111, 45, 74, 105, 149, 74, 209, 244, 242, 14, 75, 4, 38, 24, 145, 25, 108, 117, 128, 98, 203, 250, 229, 28, 208, 61, 5, 59, 206, 182, 4, 151, 138, 71, 96, 180, 119, 165, 114, 10, 93, 6, 50, 20, 18, 224, 246, 192, 96, 85, 234, 64, 255, 63, 238, 107, 40, 24, 66, 202, 144, 212, 253, 229, 128, 94, 231, 153, 241, 174, 198, 140, 237, 199, 194, 250, 195, 80, 249, 54, 133, 123, 36, 84, 118, 4, 20, 46, 155, 200, 118, 134, 132, 66, 226, 229, 210, 9, 32, 126, 226, 25, 254, 178, 213, 253, 132, 8, 105, 194, 198, 122, 218, 70, 193, 217, 76, 197, 229, 114, 59, 255, 15, 233, 214, 148, 85, 249, 126, 53, 33, 95, 137, 39, 177, 238, 243, 39, 178, 80, 123, 181, 30, 133, 203, 111, 76, 176, 206, 58, 219, 253, 65, 157, 161, 66, 246, 66, 40, 37, 117, 139, 208, 12, 136, 210, 117, 232, 216, 157, 244, 214, 113, 101, 142, 232, 144, 180, 218, 116, 28, 212, 144, 103, 229, 196, 9, 112, 156, 93, 149, 68, 112, 66, 123, 228, 178, 7, 222, 87, 57, 75, 226, 113, 30, 45, 215, 155, 98, 218, 219, 20, 184, 126, 150, 188, 138, 199, 202, 179, 188, 63, 159, 91, 63, 95, 69, 126, 78, 0, 195, 192, 182, 191, 139, 129, 220, 245, 247, 188, 23, 188, 210, 42, 54, 245, 65, 239, 79, 6, 22, 140, 225, 13, 76, 43, 231, 156, 233, 175, 155, 176, 117, 150, 249, 191, 246, 56, 255, 83, 122, 60, 50, 85, 193, 220, 182, 2, 170, 100, 251, 73, 103, 100, 24, 84, 71, 206, 0, 243, 233, 252, 28, 240, 219, 39, 143, 162, 108, 166, 162, 31, 68, 203, 100, 207, 26, 109, 71, 164, 158, 59, 84, 139, 199, 210, 204, 107, 183, 161, 213, 121, 254, 216, 213, 40, 224, 207, 12, 166, 216, 243, 1, 207, 165, 175, 167, 55, 42, 1, 79, 19, 44, 41, 81, 221, 24, 72, 159, 78, 85, 112, 155, 28, 0, 106, 217, 111, 56, 160, 87, 232, 254, 107, 234, 231, 132, 234, 98, 192, 204, 122, 210, 227, 201, 208, 121, 220, 247, 14, 16, 8, 157, 15, 125, 235, 225, 30, 204, 141, 89, 116, 188, 181, 255, 28, 119, 14, 74, 117, 249, 180, 17, 83, 117, 184, 155, 116, 166, 84, 247, 216, 84, 57, 85, 228, 166, 178, 235, 39, 105, 158, 162, 135, 152, 11, 74, 87, 99, 159, 127, 98, 149, 111, 173, 105, 156, 124, 135, 120, 54, 37, 116, 115, 89, 67, 177, 109, 77, 7, 197, 174, 24, 105, 171, 89, 52, 84, 97, 192, 99, 132, 70, 36]), auto_msg: None, send: [], contract_id: "trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh-trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm-LP-Token-trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued", contract_duration: "", callback_sig: Some([123, 232, 15, 25, 115, 9, 210, 236, 150, 124, 48, 130, 252, 193, 79, 60, 20, 46, 5, 91, 210, 158, 60, 187, 112, 6, 231, 159, 147, 135, 110, 107]) }), Wasm(Execute { contract_addr: HumanAddr("trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr"), callback_code_hash: "b90b029f289cbcdad018193c3a29711134193d123ba93b0888473ecfb2ccca6c", msg: Binary([142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15, 196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97, 213, 71, 128, 95, 9, 244, 240, 53, 43, 31, 69, 44, 130, 157, 183, 140, 210, 180, 186, 201, 185, 174, 90, 229, 7, 253, 23, 96, 94, 116, 91, 100, 39, 123, 178, 100, 0, 178, 135, 110, 100, 92, 52, 39, 213, 48, 107, 188, 13, 5, 11, 138, 105, 82, 53, 13, 156, 20, 76, 9, 67, 124, 118, 211, 223, 21, 140, 134, 249, 200, 239, 88, 191, 179, 214, 35, 132, 69, 192, 253, 196, 184, 10, 191, 215, 79, 164, 155, 122, 221, 32, 171, 73, 59, 148, 157, 95, 77, 240, 220, 122, 60, 109, 124, 28, 16, 119, 139, 221, 180, 130, 5, 126, 107, 9, 40, 113, 108, 160, 162, 19, 40, 33, 14, 157, 150, 68, 135, 205, 207, 139, 165, 98, 217, 115, 2, 204, 81, 237, 16, 232, 233, 179, 191, 95, 100, 17, 93, 190, 238, 91, 21, 139, 158, 225, 5, 211, 181, 171, 207, 176, 235, 79, 4, 206, 103, 240, 159, 93, 177, 191, 97, 110, 95, 93, 33, 15, 74, 144, 66, 87, 85, 55, 94, 88, 10, 130, 43, 98, 132, 215, 223, 135, 123, 6, 189, 150, 159, 147, 27, 192, 68, 126, 37, 26, 167, 87, 201, 253, 230, 9, 13, 218, 140, 7, 218, 183, 78, 129, 230, 200, 196, 228, 65, 95, 199, 17, 222, 46, 196, 169, 185, 191, 228, 119, 241, 232, 94, 254, 146, 32, 183, 50, 32, 230, 59, 162, 23, 7, 194, 32, 227, 6, 122, 85, 7, 206, 16, 64, 115, 26, 240, 253, 43, 120, 205, 234, 218, 177, 229, 239, 214, 22, 143, 94, 178, 95, 140, 150, 120, 158, 148, 208, 46, 3, 64, 220, 221, 243, 41, 104, 131, 146, 39, 82, 171, 112, 97, 40, 181, 29, 116, 126, 107, 141, 33, 126, 20, 187, 137, 14, 67, 47, 2, 73, 60, 98, 237, 43, 134, 52, 248, 222, 216, 179, 243, 138, 9, 241, 16, 40, 11, 187, 132, 151, 97, 105, 9, 214, 0, 209, 157, 116, 160, 243, 37, 0, 5, 83, 20, 180, 0, 79, 242, 241, 176, 3, 230, 189, 47, 95, 145, 158, 133, 255, 226, 183, 138, 149, 241, 147, 231, 42, 41, 109, 70, 198, 90, 26, 50, 212, 233, 51, 10, 102, 169, 105, 129, 91, 232, 181, 98, 102, 11, 131, 193, 71, 203, 126, 94, 249, 107, 144, 35, 48, 71, 88, 133, 124, 149, 56, 253, 43, 152, 138, 178, 91, 134, 170, 45, 249, 146, 62, 250, 176, 15, 29, 121, 189, 70, 70, 130, 216, 17, 131, 156, 26, 109, 252, 123, 109, 109, 136, 197, 88, 201, 73, 205, 95, 90, 214, 139, 15, 90, 111, 225, 10, 207, 224, 20, 77, 93, 20, 184]), send: [], callback_sig: Some([80, 20, 18, 184, 255, 204, 194, 250, 212, 147, 49, 39, 19, 58, 215, 120, 55, 59, 16, 254, 160, 62, 75, 215, 255, 162, 42, 128, 24, 17, 30, 182]) })], log: [LogAttribute { key: "YLRB78qMvQrV4C8uXyx7UxPoeIeWCw==", value: [70, 0, 79, 113, 65, 190, 246, 9, 30, 238, 71, 101, 99, 63, 62, 186, 235, 146, 226, 231, 8, 212, 207], pub_db: false, acc_pub_db: false, encrypted: true }, LogAttribute { key: "pair", value: [76, 80, 32, 116, 111, 107, 101, 110, 32, 102, 111, 114, 32, 116, 114, 117, 115, 116, 49, 56, 118, 100, 56, 102, 112, 119, 120, 122, 99, 107, 57, 51, 113, 108, 119, 103, 104, 97, 106, 54, 97, 114, 104, 52, 112, 55, 99, 53, 110, 56, 57, 52, 108, 120, 118, 100, 104, 45, 116, 114, 117, 115, 116, 49, 56, 114, 53, 115, 122, 109, 97, 56, 104, 109, 57, 51, 112, 118, 120, 54, 108, 119, 112, 106, 119, 121, 120, 114, 117, 119, 50, 55, 101, 48, 107, 53, 52, 110, 101, 121, 113, 109], pub_db: true, acc_pub_db: false, encrypted: false }, LogAttribute { key: "initiated", value: [99, 111, 110, 116, 114, 97, 99, 116], pub_db: true, acc_pub_db: true, encrypted: false }], data: None } }
 contrAddr: trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued 
set state key pair 
, caller: trust1gv07846a3867ezn3uqkk082c5ftke7hpkzxfnr 
set acc state key initiated 
,error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 14, time: 1656756757, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh") }, contract_key: Some("1dlCRcd3x/shWByvZaGXfozYlQwahvKPoJDmqtVrnW76ZAB0oZM+kAAiDeA2oS8xU960V7wCcDWN+MRGoWH9Mw=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "jiOfJcwNYQLINR80I/iXhrSytsQBeOv5LkYtVvGi/Q/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYQQlN6RvpuEV8rTCZUQRgOH4zcPCy6+KACQM4SDcGYxHjkh1t48H+Ki5FCbIuZSttf5ri5qikFCixSlmKxBc8ULbF33j6OjaTQo5JM6mr+dfdPCaP7cKQ7NAqk0po9xv2Luw8UI7eN4uWiv5LmSUherRqPBPWz9pbSNJJRaaqfh8rMt4WG5SKXPzcvUiL+541j726Y6PBcZK0fOpsw7NXfunbi+GHlINZxMxS/FvzUy7fikKm5doqFXDEqI3ft48KbFFagC0D2mRc5t85yfadUyo+FNV0HoFdUfAB2AvoOvtAjFZSH/xLSWJbIESUto9voxYU0H0FKol1QpHlaISoFn5C0o/jAM1/yA1vYHoZCRkyAl19inqsFjIhWrGaWOpnarQPOrqF7OyUpacT4eFESRMUvsrlytGMKWRWoK5+bRHBa7zCthLQxMkpS3feNCAwA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([119, 192, 252, 168, 166, 163, 154, 208, 166, 232, 43, 78, 177, 181, 91, 62, 231, 64, 33, 95, 148, 27, 81, 215, 75, 81, 100, 236, 213, 153, 76, 111])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [4, 37, 55, 164, 111, 166, 225, 21, 242, 180, 194, 101, 68, 17, 128, 225, 248, 205, 195, 194, 203, 175, 138, 0, 36, 12, 225, 32, 220, 25, 140, 71, 142, 72, 117, 183, 143, 7, 248, 168, 185, 20, 38, 200, 185, 148, 173, 181, 254, 107, 139, 154, 162, 144, 80, 162, 197, 41, 102, 43, 16, 92, 241, 66, 219, 23, 125, 227, 232, 232, 218, 77, 10, 57, 36, 206, 166, 175, 231, 95, 116, 240, 154, 63, 183, 10, 67, 179, 64, 170, 77, 41, 163, 220, 111, 216, 187, 176, 241, 66, 59, 120, 222, 46, 90, 43, 249, 46, 100, 148, 133, 234, 209, 168, 240, 79, 91, 63, 105, 109, 35, 73, 37, 22, 154, 169, 248, 124, 172, 203, 120, 88, 110, 82, 41, 115, 243, 114, 245, 34, 47, 238, 120, 214, 62, 246, 233, 142, 143, 5, 198, 74, 209, 243, 169, 179, 14, 205, 93, 251, 167, 110, 47, 134, 30, 82, 13, 103, 19, 49, 75, 241, 111, 205, 76, 187, 126, 41, 10, 155, 151, 104, 168, 85, 195, 18, 162, 55, 126, 222, 60, 41, 177, 69, 106, 0, 180, 15, 105, 145, 115, 155, 124, 231, 39, 218, 117, 76, 168, 248, 83, 85, 208, 122, 5, 117, 71, 192, 7, 96, 47, 160, 235, 237, 2, 49, 89, 72, 127, 241, 45, 37, 137, 108, 129, 18, 82, 218, 61, 190, 140, 88, 83, 65, 244, 20, 170, 37, 213, 10, 71, 149, 162, 18, 160, 89, 249, 11, 74, 63, 140, 3, 53, 255, 32, 53, 189, 129, 232, 100, 36, 100, 200, 9, 117, 246, 41, 234, 176, 88, 200, 133, 106, 198, 105, 99, 169, 157, 170, 208, 60, 234, 234, 23, 179, 178, 82, 150, 156, 79, 135, 133, 17, 36, 76, 82, 251, 43, 151, 43, 70, 48, 165, 145, 90, 130, 185, 249, 180, 71, 5, 174, 243, 10, 216, 75, 67, 19, 36, 165, 45, 223, 120, 208, 128, 192] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"set_viewing_key\":{\"key\":\"BackSwap\",\"padding\":null}}                                                                                                                                                                                                           "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "d5d94245c777c7fb21581caf65a1977e8cd8950c1a86f28fa090e6aad56b9d6efa640074a1933e9000220de036a12f3153deb457bc0270358df8c446a161fd33"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [209, 71, 30, 208, 179, 35, 93, 129, 9, 171, 33, 17, 160, 42, 22, 55, 104, 220, 250, 108, 38, 164, 229, 162, 16, 213, 132, 231, 198, 36, 53, 50]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\nviewingkey02M��)�Ǆ�\u{b}��\u{3}\u{6}IV�$�" value: "�\u{1}k�\u{6}2;\u{6}SQj��M�Ԫ\\�\u{1e}�J���&��.\'|"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [191, 136, 64, 193, 212, 156, 202, 247, 105, 49, 86, 77, 22, 10, 107, 179, 71, 179, 20, 140, 248, 78, 75, 62, 115, 146, 164, 129, 145, 128, 92, 248]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[],\"data\":\"eyJzZXRfdmlld2luZ19rZXkiOnsic3RhdHVzIjoic3VjY2VzcyJ9fSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: Some(Binary([102, 191, 140, 75, 115, 209, 239, 136, 212, 95, 129, 155, 70, 94, 204, 217, 107, 231, 214, 18, 102, 60, 18, 91, 44, 135, 91, 90, 131, 95, 181, 218, 10, 45, 218, 48, 236, 152, 239, 220, 67, 100, 116, 204, 148, 40, 218, 67, 30, 41, 59, 32, 110, 163, 82, 239, 122, 112, 70, 212, 36, 88, 9, 91, 92, 101, 181, 234, 201, 220, 100, 101, 28, 13, 220, 163, 59, 200, 6, 238, 2, 74, 202, 73, 145, 107, 139, 173, 197, 147, 178, 145, 226, 238, 143, 130, 137, 39, 149, 11, 217, 176, 151, 80, 120, 40, 68, 87, 108, 253, 206, 31, 149, 126, 240, 139, 185, 142, 1, 184, 98, 220, 171, 179, 80, 9, 107, 204, 33, 169, 18, 189, 212, 240, 208, 34, 239, 152, 113, 253, 229, 239, 117, 169, 234, 247, 206, 238, 8, 207, 151, 183, 200, 156, 86, 53, 33, 204, 196, 113, 77, 135, 95, 244, 117, 213, 44, 61, 70, 12, 174, 226, 95, 54, 51, 111, 161, 222, 190, 153, 215, 184, 168, 207, 64, 211, 161, 73, 139, 244, 12, 70, 199, 224, 12, 19, 58, 13, 103, 77, 94, 172, 225, 215, 129, 217, 33, 120, 153, 125, 155, 53, 50, 135, 171, 125, 178, 237, 26, 27, 172, 78, 82, 125, 221, 199, 90, 86, 64, 159, 25, 150, 234, 176, 218, 23, 250, 91, 76, 60, 52, 25, 187, 94, 194, 88, 183, 154, 248, 32, 37, 93, 22, 204, 188, 33, 11, 133, 179, 95, 21, 50, 251, 146, 205, 187, 130, 82, 77, 159, 207, 16, 174, 237, 65, 73, 70, 85, 104, 126, 211, 110, 37, 100, 170, 36, 73, 103, 45, 81, 111, 168, 141, 183, 147, 36, 71, 85, 174, 157, 112, 240, 15, 79, 39, 234, 220, 161, 142, 149, 226, 178, 106, 79, 159, 129, 237, 250, 64, 250, 223, 31, 24, 50, 14, 5, 240, 5, 88, 2, 247, 251, 23, 223, 10, 177, 1, 46, 212, 121, 137, 200, 129, 159, 45, 2, 14, 16, 253, 124, 250, 107, 101, 136, 82, 54, 135, 114, 216, 120])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 14, time: 1656756757, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh") }, contract_key: Some("1dlCRcd3x/shWByvZaGXfozYlQwahvKPoJDmqtVrnW76ZAB0oZM+kAAiDeA2oS8xU960V7wCcDWN+MRGoWH9Mw=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "jiOfJcwNYQLINR80I/iXhrSytsQBeOv5LkYtVvGi/Q/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYWmxnlH/ZYp40XxoDwEDC7pQq9GMGTwX0bDZ0tJwT2Otc0A82RHIIxqu2K1NQuMJrkviiqfE0vF8lqNfuP8wXSX/s2VwBi2+MJh4HR6/357y+taflhVHuHu36uZFOQU9GCZ/OSuM44qYiean6HqHjAOMbFTZnHxMOPOStCtszQile6DoQbXQCKMV0LG9tFGuB1zJmhIH66AjVGPwLTMtxkOrDRHdJcIjM+gr0XUJyfvGZATcsEIM6MFKXCext2qBf7uzB7ocwmLat1frgXAb/aVjK4tNWiBO+TQs5rn11b35cBbN6bz05cBo2+7QYdJf+m40DpM7QN3eKqji/G6r689XEggDbJ6MIJRfoIW6HBf0RoY6Ebypq2sihwIh7mbbgHPxhlQY3d2Wm/eUO14F/CgieY/5L8FdOgLABoGPt+EGR/8omQ/7oAjdfY3jgWtutA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([80, 39, 43, 205, 61, 50, 78, 140, 83, 217, 156, 199, 220, 227, 44, 60, 126, 95, 171, 44, 204, 102, 230, 228, 135, 215, 120, 155, 41, 163, 175, 126])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [105, 177, 158, 81, 255, 101, 138, 120, 209, 124, 104, 15, 1, 3, 11, 186, 80, 171, 209, 140, 25, 60, 23, 209, 176, 217, 210, 210, 112, 79, 99, 173, 115, 64, 60, 217, 17, 200, 35, 26, 174, 216, 173, 77, 66, 227, 9, 174, 75, 226, 138, 167, 196, 210, 241, 124, 150, 163, 95, 184, 255, 48, 93, 37, 255, 179, 101, 112, 6, 45, 190, 48, 152, 120, 29, 30, 191, 223, 158, 242, 250, 214, 159, 150, 21, 71, 184, 123, 183, 234, 230, 69, 57, 5, 61, 24, 38, 127, 57, 43, 140, 227, 138, 152, 137, 230, 167, 232, 122, 135, 140, 3, 140, 108, 84, 217, 156, 124, 76, 56, 243, 146, 180, 43, 108, 205, 8, 165, 123, 160, 232, 65, 181, 208, 8, 163, 21, 208, 177, 189, 180, 81, 174, 7, 92, 201, 154, 18, 7, 235, 160, 35, 84, 99, 240, 45, 51, 45, 198, 67, 171, 13, 17, 221, 37, 194, 35, 51, 232, 43, 209, 117, 9, 201, 251, 198, 100, 4, 220, 176, 66, 12, 232, 193, 74, 92, 39, 177, 183, 106, 129, 127, 187, 179, 7, 186, 28, 194, 98, 218, 183, 87, 235, 129, 112, 27, 253, 165, 99, 43, 139, 77, 90, 32, 78, 249, 52, 44, 230, 185, 245, 213, 189, 249, 112, 22, 205, 233, 188, 244, 229, 192, 104, 219, 238, 208, 97, 210, 95, 250, 110, 52, 14, 147, 59, 64, 221, 222, 42, 168, 226, 252, 110, 171, 235, 207, 87, 18, 8, 3, 108, 158, 140, 32, 148, 95, 160, 133, 186, 28, 23, 244, 70, 134, 58, 17, 188, 169, 171, 107, 34, 135, 2, 33, 238, 102, 219, 128, 115, 241, 134, 84, 24, 221, 221, 150, 155, 247, 148, 59, 94, 5, 252, 40, 34, 121, 143, 249, 47, 193, 93, 58, 2, 192, 6, 129, 143, 183, 225, 6, 71, 255, 40, 153, 15, 251, 160, 8, 221, 125, 141, 227, 129, 107, 110, 180] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"register_receive\":{\"code_hash\":\"41395186b730a70db1185f81c83441654831c6d87d6f9fbc5b4ec380a110c989\",\"padding\":null}}                                                                                                                                            "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "d5d94245c777c7fb21581caf65a1977e8cd8950c1a86f28fa090e6aad56b9d6efa640074a1933e9000220de036a12f3153deb457bc0270358df8c446a161fd33"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [209, 71, 30, 208, 179, 35, 93, 129, 9, 171, 33, 17, 160, 42, 22, 55, 104, 220, 250, 108, 38, 164, 229, 162, 16, 213, 132, 231, 198, 36, 53, 50]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\treceiverstrust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued" value: "41395186b730a70db1185f81c83441654831c6d87d6f9fbc5b4ec380a110c989"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [91, 211, 218, 136, 149, 29, 42, 131, 178, 222, 197, 202, 142, 90, 23, 116, 210, 60, 79, 3, 71, 61, 203, 82, 91, 29, 100, 10, 20, 215, 12, 15]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"register_status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}],\"data\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7InN0YXR1cyI6InN1Y2Nlc3MifX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [LogAttribute { key: "XO6qC7LFbofhZnYrs0lEu1TXgN6eG5rx6oy3UGERsQ==", value: [70, 0, 79, 113, 65, 190, 246, 9, 30, 238, 71, 101, 99, 63, 62, 186, 235, 146, 226, 231, 8, 212, 207], pub_db: false, acc_pub_db: false, encrypted: true }], data: Some(Binary([119, 139, 175, 117, 20, 17, 30, 7, 143, 156, 196, 120, 247, 235, 117, 126, 148, 191, 239, 47, 207, 135, 23, 247, 167, 185, 57, 254, 31, 6, 187, 188, 219, 68, 244, 135, 217, 190, 44, 96, 126, 120, 82, 149, 165, 28, 255, 127, 190, 135, 98, 178, 186, 30, 238, 20, 49, 114, 77, 208, 196, 184, 40, 101, 144, 153, 171, 15, 62, 246, 79, 75, 83, 207, 235, 10, 52, 145, 218, 155, 75, 177, 126, 25, 203, 141, 92, 78, 78, 226, 151, 255, 80, 146, 14, 196, 227, 202, 125, 1, 20, 14, 26, 251, 32, 30, 40, 217, 57, 32, 246, 238, 195, 225, 67, 146, 161, 73, 246, 108, 178, 108, 79, 128, 72, 113, 254, 160, 230, 35, 237, 42, 197, 142, 97, 230, 168, 254, 93, 172, 196, 36, 150, 84, 62, 144, 192, 247, 54, 3, 139, 235, 169, 108, 221, 155, 78, 137, 1, 12, 195, 102, 29, 109, 152, 51, 11, 76, 58, 218, 218, 204, 189, 89, 47, 59, 83, 112, 192, 97, 183, 244, 10, 116, 99, 204, 233, 206, 199, 73, 184, 29, 196, 64, 194, 138, 215, 83, 22, 66, 91, 204, 58, 155, 243, 119, 204, 220, 120, 207, 168, 113, 57, 39, 50, 132, 28, 194, 212, 181, 209, 19, 156, 71, 56, 75, 29, 128, 219, 98, 242, 120, 163, 175, 63, 10, 133, 203, 209, 133, 219, 177, 152, 68, 96, 147, 184, 92, 17, 81, 128, 231, 199, 220, 229, 164, 150, 177, 102, 162, 234, 32, 244, 108, 186, 235, 200, 174, 109, 51, 151, 47, 40, 88, 211, 27, 255, 93, 89, 42, 231, 26, 219, 223, 230, 52, 43, 152, 57, 51, 14, 117, 170, 37, 141, 151, 192, 171, 70, 154, 22, 67, 141, 252, 167, 196, 76, 69, 102, 94, 105, 92, 81, 104, 140, 150, 110, 186, 207, 91, 95, 209, 6, 226, 233, 154, 112, 95, 100, 87, 92, 68, 42, 182, 145, 95, 188, 92, 76, 167, 160, 223, 64, 194, 0, 118, 1, 174, 46, 77, 77, 243, 231, 133, 28, 200, 68, 206, 140, 171])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 14, time: 1656756757, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm") }, contract_key: Some("OdIncD8dP7twHPxsb4Tlt9kSojCI83JMamJMGICGJjvaqH46BAbZOI2OmZzZyJmis2A8ZJ1Mj5Ltoi36buztlA=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "jiOfJcwNYQLINR80I/iXhrSytsQBeOv5LkYtVvGi/Q/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYQQlN6RvpuEV8rTCZUQRgOH4zcPCy6+KACQM4SDcGYxHjkh1t48H+Ki5FCbIuZSttf5ri5qikFCixSlmKxBc8ULbF33j6OjaTQo5JM6mr+dfdPCaP7cKQ7NAqk0po9xv2Luw8UI7eN4uWiv5LmSUherRqPBPWz9pbSNJJRaaqfh8rMt4WG5SKXPzcvUiL+541j726Y6PBcZK0fOpsw7NXfunbi+GHlINZxMxS/FvzUy7fikKm5doqFXDEqI3ft48KbFFagC0D2mRc5t85yfadUyo+FNV0HoFdUfAB2AvoOvtAjFZSH/xLSWJbIESUto9voxYU0H0FKol1QpHlaISoFn5C0o/jAM1/yA1vYHoZCRkyAl19inqsFjIhWrGaWOpnarQPOrqF7OyUpacT4eFESRMUvsrlytGMKWRWoK5+bRHBa7zCthLQxMkpS3feNCAwA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([119, 192, 252, 168, 166, 163, 154, 208, 166, 232, 43, 78, 177, 181, 91, 62, 231, 64, 33, 95, 148, 27, 81, 215, 75, 81, 100, 236, 213, 153, 76, 111])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [4, 37, 55, 164, 111, 166, 225, 21, 242, 180, 194, 101, 68, 17, 128, 225, 248, 205, 195, 194, 203, 175, 138, 0, 36, 12, 225, 32, 220, 25, 140, 71, 142, 72, 117, 183, 143, 7, 248, 168, 185, 20, 38, 200, 185, 148, 173, 181, 254, 107, 139, 154, 162, 144, 80, 162, 197, 41, 102, 43, 16, 92, 241, 66, 219, 23, 125, 227, 232, 232, 218, 77, 10, 57, 36, 206, 166, 175, 231, 95, 116, 240, 154, 63, 183, 10, 67, 179, 64, 170, 77, 41, 163, 220, 111, 216, 187, 176, 241, 66, 59, 120, 222, 46, 90, 43, 249, 46, 100, 148, 133, 234, 209, 168, 240, 79, 91, 63, 105, 109, 35, 73, 37, 22, 154, 169, 248, 124, 172, 203, 120, 88, 110, 82, 41, 115, 243, 114, 245, 34, 47, 238, 120, 214, 62, 246, 233, 142, 143, 5, 198, 74, 209, 243, 169, 179, 14, 205, 93, 251, 167, 110, 47, 134, 30, 82, 13, 103, 19, 49, 75, 241, 111, 205, 76, 187, 126, 41, 10, 155, 151, 104, 168, 85, 195, 18, 162, 55, 126, 222, 60, 41, 177, 69, 106, 0, 180, 15, 105, 145, 115, 155, 124, 231, 39, 218, 117, 76, 168, 248, 83, 85, 208, 122, 5, 117, 71, 192, 7, 96, 47, 160, 235, 237, 2, 49, 89, 72, 127, 241, 45, 37, 137, 108, 129, 18, 82, 218, 61, 190, 140, 88, 83, 65, 244, 20, 170, 37, 213, 10, 71, 149, 162, 18, 160, 89, 249, 11, 74, 63, 140, 3, 53, 255, 32, 53, 189, 129, 232, 100, 36, 100, 200, 9, 117, 246, 41, 234, 176, 88, 200, 133, 106, 198, 105, 99, 169, 157, 170, 208, 60, 234, 234, 23, 179, 178, 82, 150, 156, 79, 135, 133, 17, 36, 76, 82, 251, 43, 151, 43, 70, 48, 165, 145, 90, 130, 185, 249, 180, 71, 5, 174, 243, 10, 216, 75, 67, 19, 36, 165, 45, 223, 120, 208, 128, 192] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"set_viewing_key\":{\"key\":\"BackSwap\",\"padding\":null}}                                                                                                                                                                                                           "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "39d227703f1d3fbb701cfc6c6f84e5b7d912a23088f3724c6a624c188086263bdaa87e3a0406d9388d8e999cd9c899a2b3603c649d4c8f92eda22dfa6eeced94"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [91, 236, 157, 51, 177, 120, 24, 141, 181, 38, 19, 54, 151, 253, 35, 2, 121, 76, 179, 38, 94, 179, 127, 177, 175, 232, 221, 160, 251, 49, 224, 17]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] canonicalize_address() was called from WASM code with "trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\nviewingkey02M��)�Ǆ�\u{b}��\u{3}\u{6}IV�$�" value: "�\u{1}k�\u{6}2;\u{6}SQj��M�Ԫ\\�\u{1e}�J���&��.\'|"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [123, 8, 135, 124, 183, 122, 116, 71, 90, 197, 192, 201, 73, 174, 170, 19, 61, 115, 213, 119, 82, 152, 214, 39, 72, 187, 137, 196, 26, 129, 179, 201]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[],\"data\":\"eyJzZXRfdmlld2luZ19rZXkiOnsic3RhdHVzIjoic3VjY2VzcyJ9fSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [], data: Some(Binary([102, 191, 140, 75, 115, 209, 239, 136, 212, 95, 129, 155, 70, 94, 204, 217, 107, 231, 214, 18, 102, 60, 18, 91, 44, 135, 91, 90, 131, 95, 181, 218, 10, 45, 218, 48, 236, 152, 239, 220, 67, 100, 116, 204, 148, 40, 218, 67, 30, 41, 59, 32, 110, 163, 82, 239, 122, 112, 70, 212, 36, 88, 9, 91, 92, 101, 181, 234, 201, 220, 100, 101, 28, 13, 220, 163, 59, 200, 6, 238, 2, 74, 202, 73, 145, 107, 139, 173, 197, 147, 178, 145, 226, 238, 143, 130, 137, 39, 149, 11, 217, 176, 151, 80, 120, 40, 68, 87, 108, 253, 206, 31, 149, 126, 240, 139, 185, 142, 1, 184, 98, 220, 171, 179, 80, 9, 107, 204, 33, 169, 18, 189, 212, 240, 208, 34, 239, 152, 113, 253, 229, 239, 117, 169, 234, 247, 206, 238, 8, 207, 151, 183, 200, 156, 86, 53, 33, 204, 196, 113, 77, 135, 95, 244, 117, 213, 44, 61, 70, 12, 174, 226, 95, 54, 51, 111, 161, 222, 190, 153, 215, 184, 168, 207, 64, 211, 161, 73, 139, 244, 12, 70, 199, 224, 12, 19, 58, 13, 103, 77, 94, 172, 225, 215, 129, 217, 33, 120, 153, 125, 155, 53, 50, 135, 171, 125, 178, 237, 26, 27, 172, 78, 82, 125, 221, 199, 90, 86, 64, 159, 25, 150, 234, 176, 218, 23, 250, 91, 76, 60, 52, 25, 187, 94, 194, 88, 183, 154, 248, 32, 37, 93, 22, 204, 188, 33, 11, 133, 179, 95, 21, 50, 251, 146, 205, 187, 130, 82, 77, 159, 207, 16, 174, 237, 65, 73, 70, 85, 104, 126, 211, 110, 37, 100, 170, 36, 73, 103, 45, 81, 111, 168, 141, 183, 147, 36, 71, 85, 174, 157, 112, 240, 15, 79, 39, 234, 220, 161, 142, 149, 226, 178, 106, 79, 159, 129, 237, 250, 64, 250, 223, 31, 24, 50, 14, 5, 240, 5, 88, 2, 247, 251, 23, 223, 10, 177, 1, 46, 212, 121, 137, 200, 129, 159, 45, 2, 14, 16, 253, 124, 250, 107, 101, 136, 82, 54, 135, 114, 216, 120])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
TRACE  [enclave_contract_engine::contract_operations] handle parsed_env: Env { block: BlockInfo { height: 14, time: 1656756757, chain_id: "trst_chain_1" }, message: MessageInfo { sender: HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm") }, contract_key: Some("OdIncD8dP7twHPxsb4Tlt9kSojCI83JMamJMGICGJjvaqH46BAbZOI2OmZzZyJmis2A8ZJ1Mj5Ltoi36buztlA=="), contract_code_hash: "e32d108ff87f52364ee0e6b7f27678b7612840f91ea9f6037c73d16f6b152ee2" }
TRACE  [enclave_contract_engine::contract_operations] Handle input before decryption: "jiOfJcwNYQLINR80I/iXhrSytsQBeOv5LkYtVvGi/Q/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYWmxnlH/ZYp40XxoDwEDC7pQq9GMGTwX0bDZ0tJwT2Otc0A82RHIIxqu2K1NQuMJrkviiqfE0vF8lqNfuP8wXSX/s2VwBi2+MJh4HR6/357y+taflhVHuHu36uZFOQU9GCZ/OSuM44qYiean6HqHjAOMbFTZnHxMOPOStCtszQile6DoQbXQCKMV0LG9tFGuB1zJmhIH66AjVGPwLTMtxkOrDRHdJcIjM+gr0XUJyfvGZATcsEIM6MFKXCext2qBf7uzB7ocwmLat1frgXAb/aVjK4tNWiBO+TQs5rn11b35cBbN6bz05cBo2+7QYdJf+m40DpM7QN3eKqji/G6r689XEggDbJ6MIJRfoIW6HBf0RoY6Ebypq2sihwIh7mbbgHPxhlQY3d2Wm/eUO14F/CgieY/5L8FdOgLABoGPt+EGR/8omQ/7oAjdfY3jgWtutA=="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([80, 39, 43, 205, 61, 50, 78, 140, 83, 217, 156, 199, 220, 227, 44, 60, 126, 95, 171, 44, 204, 102, 230, 228, 135, 215, 120, 155, 41, 163, 175, 126])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [105, 177, 158, 81, 255, 101, 138, 120, 209, 124, 104, 15, 1, 3, 11, 186, 80, 171, 209, 140, 25, 60, 23, 209, 176, 217, 210, 210, 112, 79, 99, 173, 115, 64, 60, 217, 17, 200, 35, 26, 174, 216, 173, 77, 66, 227, 9, 174, 75, 226, 138, 167, 196, 210, 241, 124, 150, 163, 95, 184, 255, 48, 93, 37, 255, 179, 101, 112, 6, 45, 190, 48, 152, 120, 29, 30, 191, 223, 158, 242, 250, 214, 159, 150, 21, 71, 184, 123, 183, 234, 230, 69, 57, 5, 61, 24, 38, 127, 57, 43, 140, 227, 138, 152, 137, 230, 167, 232, 122, 135, 140, 3, 140, 108, 84, 217, 156, 124, 76, 56, 243, 146, 180, 43, 108, 205, 8, 165, 123, 160, 232, 65, 181, 208, 8, 163, 21, 208, 177, 189, 180, 81, 174, 7, 92, 201, 154, 18, 7, 235, 160, 35, 84, 99, 240, 45, 51, 45, 198, 67, 171, 13, 17, 221, 37, 194, 35, 51, 232, 43, 209, 117, 9, 201, 251, 198, 100, 4, 220, 176, 66, 12, 232, 193, 74, 92, 39, 177, 183, 106, 129, 127, 187, 179, 7, 186, 28, 194, 98, 218, 183, 87, 235, 129, 112, 27, 253, 165, 99, 43, 139, 77, 90, 32, 78, 249, 52, 44, 230, 185, 245, 213, 189, 249, 112, 22, 205, 233, 188, 244, 229, 192, 104, 219, 238, 208, 97, 210, 95, 250, 110, 52, 14, 147, 59, 64, 221, 222, 42, 168, 226, 252, 110, 171, 235, 207, 87, 18, 8, 3, 108, 158, 140, 32, 148, 95, 160, 133, 186, 28, 23, 244, 70, 134, 58, 17, 188, 169, 171, 107, 34, 135, 2, 33, 238, 102, 219, 128, 115, 241, 134, 84, 24, 221, 221, 150, 155, 247, 148, 59, 94, 5, 252, 40, 34, 121, 143, 249, 47, 193, 93, 58, 2, 192, 6, 129, 143, 183, 225, 6, 71, 255, 40, 153, 15, 251, 160, 8, 221, 125, 141, 227, 129, 107, 110, 180] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::contract_operations] Handle input afer decryption: "{\"register_receive\":{\"code_hash\":\"41395186b730a70db1185f81c83441654831c6d87d6f9fbc5b4ec380a110c989\",\"padding\":null}}                                                                                                                                            "
TRACE  [enclave_contract_engine::contract_operations] Successfully authenticated the contract!
TRACE  [enclave_contract_engine::contract_operations] Handle: Contract Key: "39d227703f1d3fbb701cfc6c6f84e5b7d912a23088f3724c6a624c188086263bdaa87e3a0406d9388d8e999cd9c899a2b3603c649d4c8f92eda22dfa6eeced94"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
INFO  [enclave_contract_engine::wasm::engine] Invoking handle() in wasm
TRACE  [enclave_contract_engine::wasm::contract] read_db() was called from WASM code with state_key_name: "\u{0}\u{6}configcontract_status"
INFO  [enclave_contract_engine::db] Reading from scrambled field name: [91, 236, 157, 51, 177, 120, 24, 141, 181, 38, 19, 54, 151, 253, 35, 2, 121, 76, 179, 38, 94, 179, 127, 177, 175, 232, 221, 160, 251, 49, 224, 17]
TRACE  [enclave_contract_engine::wasm::contract] read_db() got value with len 1: '[0]'
TRACE  [enclave_contract_engine::wasm::contract] write_db() was called from WASM code with state_key_name: "\u{0}\treceiverstrust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued" value: "41395186b730a70db1185f81c83441654831c6d87d6f9fbc5b4ec380a110c989"
INFO  [enclave_contract_engine::db] Writing to scrambled field name: [142, 152, 74, 194, 225, 218, 3, 151, 32, 27, 36, 79, 217, 208, 48, 163, 118, 8, 79, 101, 80, 72, 94, 227, 46, 115, 156, 119, 130, 169, 91, 182]
DEBUG  [enclave_contract_engine::contract_operations] (2) nonce just before encrypt_output: nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97]
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Ok\":{\"messages\":[],\"log\":[{\"key\":\"register_status\",\"value\":[115,117,99,99,101,115,115],\"pub_db\":false,\"acc_pub_db\":false,\"encrypted\":true}],\"data\":\"eyJyZWdpc3Rlcl9yZWNlaXZlIjp7InN0YXR1cyI6InN1Y2Nlc3MifX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==\"}}"
TRACE  [enclave_contract_engine::io] WasmOutput: OkObject { ok: ContractResult { messages: [], log: [LogAttribute { key: "XO6qC7LFbofhZnYrs0lEu1TXgN6eG5rx6oy3UGERsQ==", value: [70, 0, 79, 113, 65, 190, 246, 9, 30, 238, 71, 101, 99, 63, 62, 186, 235, 146, 226, 231, 8, 212, 207], pub_db: false, acc_pub_db: false, encrypted: true }], data: Some(Binary([119, 139, 175, 117, 20, 17, 30, 7, 143, 156, 196, 120, 247, 235, 117, 126, 148, 191, 239, 47, 207, 135, 23, 247, 167, 185, 57, 254, 31, 6, 187, 188, 219, 68, 244, 135, 217, 190, 44, 96, 126, 120, 82, 149, 165, 28, 255, 127, 190, 135, 98, 178, 186, 30, 238, 20, 49, 114, 77, 208, 196, 184, 40, 101, 144, 153, 171, 15, 62, 246, 79, 75, 83, 207, 235, 10, 52, 145, 218, 155, 75, 177, 126, 25, 203, 141, 92, 78, 78, 226, 151, 255, 80, 146, 14, 196, 227, 202, 125, 1, 20, 14, 26, 251, 32, 30, 40, 217, 57, 32, 246, 238, 195, 225, 67, 146, 161, 73, 246, 108, 178, 108, 79, 128, 72, 113, 254, 160, 230, 35, 237, 42, 197, 142, 97, 230, 168, 254, 93, 172, 196, 36, 150, 84, 62, 144, 192, 247, 54, 3, 139, 235, 169, 108, 221, 155, 78, 137, 1, 12, 195, 102, 29, 109, 152, 51, 11, 76, 58, 218, 218, 204, 189, 89, 47, 59, 83, 112, 192, 97, 183, 244, 10, 116, 99, 204, 233, 206, 199, 73, 184, 29, 196, 64, 194, 138, 215, 83, 22, 66, 91, 204, 58, 155, 243, 119, 204, 220, 120, 207, 168, 113, 57, 39, 50, 132, 28, 194, 212, 181, 209, 19, 156, 71, 56, 75, 29, 128, 219, 98, 242, 120, 163, 175, 63, 10, 133, 203, 209, 133, 219, 177, 152, 68, 96, 147, 184, 92, 17, 81, 128, 231, 199, 220, 229, 164, 150, 177, 102, 162, 234, 32, 244, 108, 186, 235, 200, 174, 109, 51, 151, 47, 40, 88, 211, 27, 255, 93, 89, 42, 231, 26, 219, 223, 230, 52, 43, 152, 57, 51, 14, 117, 170, 37, 141, 151, 192, 171, 70, 154, 22, 67, 141, 252, 167, 196, 76, 69, 102, 94, 105, 92, 81, 104, 140, 150, 110, 186, 207, 91, 95, 209, 6, 226, 233, 154, 112, 95, 100, 87, 92, 68, 42, 182, 145, 95, 188, 92, 76, 167, 160, 223, 64, 194, 0, 118, 1, 174, 46, 77, 77, 243, 231, 133, 28, 200, 68, 206, 140, 171])) } }
error claiming tokens: address does not have claim record: invalid address [/root/trst/x/claim/keeper/claim.go:98] 
dispatch msg 
init duration: 0s 
init sender: trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszuedcallbackSig: 	 [123 232 15 25 115 9 210 236 150 124 48 130 252 193 79 60 20 46 5 91 210 158 60 187 112 6 231 159 147 135 110 107] 
code hash: 	 [227 45 16 143 248 127 82 54 78 224 230 183 242 118 120 183 97 40 64 249 30 169 246 3 124 115 209 111 107 21 46 226] 
TRACE  [enclave_contract_engine::contract_operations] Init: Contract Key: "286485c0b5784914c0ad3dd760e5c8e3ecc265cb8517e1b3042714482f3b088a739efc4c7c77f81d0e1e6d71134183e1315adb5c82af8311284c8be485241ec8"
TRACE  [enclave_contract_engine::contract_operations] Init input before decryption: "jiOfJcwNYQLINR80I/iXhrSytsQBeOv5LkYtVvGi/Q/EOnNkWbIKWFdzYvlJbAJuhqTBJveIAyCCDJ89U5DoYRjrLqK8yCESYNE9a5FBVjAKTCHl6eaTfIa8pC7JidNQCXH2HNG1ULATO8RR8v59RDNZeL1cZxMUnDpoqPlfkQsGZxgmUKzFdOQMyq+bUoGOcBVDNB5xeCY/XRIy/vLAldx8toCVZdPRQprP3iOTN2ghCmntP6UZ5UZhIYSNC9Y5kNyhfvflby1KaZVK0fTyDksEJhiRGWx1gGLL+uUc0D0FO862BJeKR2C0d6VyCl0GMhQS4PbAYFXqQP8/7msoGELKkNT95YBe55nxrsaM7cfC+sNQ+TaFeyRUdgQULpvIdoaEQuLl0gkgfuIZ/rLV/YQIacLGetpGwdlMxeVyO/8P6daUVfl+NSFfiSex7vMnslB7tR6Fy29MsM462/1BnaFC9kIoJXWL0AyI0nXo2J301nFljuiQtNp0HNSQZ+XECXCcXZVEcEJ75LIH3lc5S+JxHi3Xm2La2xS4fpa8isfKs7w/n1s/X0V+TgDDwLa/i4Hc9fe8F7zSKjb1Qe9PBhaM4Q1MK+ec6a+bsHWW+b/2OP9TejwyVcHctgKqZPtJZ2QYVEfOAPPp/Bzw2yePomymoh9Ey2TPGm1HpJ47VIvH0sxrt6HVef7Y1Sjgzwym2PMBz6WvpzcqAU8TLClR3RhIn05VcJscAGrZbzigV+j+a+rnhOpiwMx60uPJ0Hnc9w4QCJ0PfevhHsyNWXS8tf8cdw5Kdfm0EVN1uJt0plT32FQ5VeSmsusnaZ6ih5gLSldjn39ilW+taZx8h3g2JXRzWUOxbU0Hxa4YaatZNFRhwGOERiQ="
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15] pubkey = "c43a736459b20a58577362f9496c026e86a4c126f7880320820c9f3d5390e861"
INFO  [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { sign_bytes: Binary([]), sign_mode: SIGN_MODE_UNSPECIFIED, mode_info: Binary([]), public_key: Binary([]), signature: Binary([]), callback_sig: Some(Binary([123, 232, 15, 25, 115, 9, 210, 236, 150, 124, 48, 130, 252, 193, 79, 60, 20, 46, 5, 91, 210, 158, 60, 187, 112, 6, 231, 159, 147, 135, 110, 107])) }
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [142, 35, 159, 37, 204, 13, 97, 2, 200, 53, 31, 52, 35, 248, 151, 134, 180, 178, 182, 196, 1, 120, 235, 249, 46, 70, 45, 86, 241, 162, 253, 15], user_public_key: [196, 58, 115, 100, 89, 178, 10, 88, 87, 115, 98, 249, 73, 108, 2, 110, 134, 164, 193, 38, 247, 136, 3, 32, 130, 12, 159, 61, 83, 144, 232, 97], msg: [24, 235, 46, 162, 188, 200, 33, 18, 96, 209, 61, 107, 145, 65, 86, 48, 10, 76, 33, 229, 233, 230, 147, 124, 134, 188, 164, 46, 201, 137, 211, 80, 9, 113, 246, 28, 209, 181, 80, 176, 19, 59, 196, 81, 242, 254, 125, 68, 51, 89, 120, 189, 92, 103, 19, 20, 156, 58, 104, 168, 249, 95, 145, 11, 6, 103, 24, 38, 80, 172, 197, 116, 228, 12, 202, 175, 155, 82, 129, 142, 112, 21, 67, 52, 30, 113, 120, 38, 63, 93, 18, 50, 254, 242, 192, 149, 220, 124, 182, 128, 149, 101, 211, 209, 66, 154, 207, 222, 35, 147, 55, 104, 33, 10, 105, 237, 63, 165, 25, 229, 70, 97, 33, 132, 141, 11, 214, 57, 144, 220, 161, 126, 247, 229, 111, 45, 74, 105, 149, 74, 209, 244, 242, 14, 75, 4, 38, 24, 145, 25, 108, 117, 128, 98, 203, 250, 229, 28, 208, 61, 5, 59, 206, 182, 4, 151, 138, 71, 96, 180, 119, 165, 114, 10, 93, 6, 50, 20, 18, 224, 246, 192, 96, 85, 234, 64, 255, 63, 238, 107, 40, 24, 66, 202, 144, 212, 253, 229, 128, 94, 231, 153, 241, 174, 198, 140, 237, 199, 194, 250, 195, 80, 249, 54, 133, 123, 36, 84, 118, 4, 20, 46, 155, 200, 118, 134, 132, 66, 226, 229, 210, 9, 32, 126, 226, 25, 254, 178, 213, 253, 132, 8, 105, 194, 198, 122, 218, 70, 193, 217, 76, 197, 229, 114, 59, 255, 15, 233, 214, 148, 85, 249, 126, 53, 33, 95, 137, 39, 177, 238, 243, 39, 178, 80, 123, 181, 30, 133, 203, 111, 76, 176, 206, 58, 219, 253, 65, 157, 161, 66, 246, 66, 40, 37, 117, 139, 208, 12, 136, 210, 117, 232, 216, 157, 244, 214, 113, 101, 142, 232, 144, 180, 218, 116, 28, 212, 144, 103, 229, 196, 9, 112, 156, 93, 149, 68, 112, 66, 123, 228, 178, 7, 222, 87, 57, 75, 226, 113, 30, 45, 215, 155, 98, 218, 219, 20, 184, 126, 150, 188, 138, 199, 202, 179, 188, 63, 159, 91, 63, 95, 69, 126, 78, 0, 195, 192, 182, 191, 139, 129, 220, 245, 247, 188, 23, 188, 210, 42, 54, 245, 65, 239, 79, 6, 22, 140, 225, 13, 76, 43, 231, 156, 233, 175, 155, 176, 117, 150, 249, 191, 246, 56, 255, 83, 122, 60, 50, 85, 193, 220, 182, 2, 170, 100, 251, 73, 103, 100, 24, 84, 71, 206, 0, 243, 233, 252, 28, 240, 219, 39, 143, 162, 108, 166, 162, 31, 68, 203, 100, 207, 26, 109, 71, 164, 158, 59, 84, 139, 199, 210, 204, 107, 183, 161, 213, 121, 254, 216, 213, 40, 224, 207, 12, 166, 216, 243, 1, 207, 165, 175, 167, 55, 42, 1, 79, 19, 44, 41, 81, 221, 24, 72, 159, 78, 85, 112, 155, 28, 0, 106, 217, 111, 56, 160, 87, 232, 254, 107, 234, 231, 132, 234, 98, 192, 204, 122, 210, 227, 201, 208, 121, 220, 247, 14, 16, 8, 157, 15, 125, 235, 225, 30, 204, 141, 89, 116, 188, 181, 255, 28, 119, 14, 74, 117, 249, 180, 17, 83, 117, 184, 155, 116, 166, 84, 247, 216, 84, 57, 85, 228, 166, 178, 235, 39, 105, 158, 162, 135, 152, 11, 74, 87, 99, 159, 127, 98, 149, 111, 173, 105, 156, 124, 135, 120, 54, 37, 116, 115, 89, 67, 177, 109, 77, 7, 197, 174, 24, 105, 171, 89, 52, 84, 97, 192, 99, 132, 70, 36] }
INFO  [enclave_contract_engine::contract_validation] Message verified! the msg address is from the callback sig
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::contract_operations] Init input after decryption: "{\"name\":\"LP token for trust18vd8fpwxzck93qlwghaj6arh4p7c5n894lxvdh-trust18r5szma8hm93pvx6lwpjwyxruw27e0k54neyqm\",\"admin\":\"trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued\",\"symbol\":\"SWAP-LP\",\"decimals\":6,\"initial_balances\":null,\"prng_seed\":\"XQBc5MYpkktTxa+eWdvpkRKU/k+dIQyUb6TTH/6CmDY=\",\"init_hook\":{\"msg\":\"eyJwb3N0X2luaXRpYWxpemUiOnt9fQ==\",\"contract_addr\":\"trust1xqeym28j9xgv0p93pwwt6qcxf9tdvf9zyszued\",\"code_hash\":\"41395186b730a70db1185f81c83441654831c6d87d6f9fbc5b4ec380a110c989\"},\"config\":{\"public_total_supply\":true}}"
DEBUG  [enclave_contract_engine::module_cache] fetching module from cache
DEBUG  [enclave_contract_engine::module_cache] cache is enabled
DEBUG  [enclave_contract_engine::module_cache] peeking in cache
DEBUG  [enclave_contract_engine::module_cache] found instance in cache!
DEBUG  [enclave_contract_engine::module_cache] updating cache
DEBUG  [enclave_contract_engine::module_cache] updating LRU without storing anything
DEBUG  [enclave_contract_engine::module_cache] returning built instance
DEBUG  [enclave_contract_engine::types] ContractMessage::from_slice nonce = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] pubkey = "0000000000000000000000000000000000000000000000000000000000000000"
TRACE  [enclave_contract_engine::contract_operations] sent_funds []...
TRACE  [enclave_contract_engine::io] callback sig sender_addr: Ok(HumanAddr("trust1l0dj9xalgeszlhzexjqd7zryvz0af7uaw0m6ul"))
TRACE  [enclave_contract_engine::io] callback sig msg_to_sign: ContractMessage { nonce: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], user_public_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], msg: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
INFO  [enclave_contract_engine::wasm::engine] Invoking init() in wasm
TRACE  [enclave_contract_engine::io] rust tx_encryption_key [244, 72, 85, 123, 118, 159, 178, 92, 58, 80, 149, 233, 247, 120, 119, 81, 204, 232, 206, 158, 75, 192, 53, 181, 35, 175, 57, 173, 10, 147, 19, 195]
TRACE  [enclave_contract_engine::io] Output before encryption: "{\"Err\":{\"generic_err\":{\"msg\":\"Ticker symbol is not in expected format [A-Z]{3,6}\"}}}"
TRACE  [enclave_contract_engine::io] WasmOutput: ErrObject { err: Object({"generic_err": Object({"msg": String("k3akfjTrib9P0RJr9zFIktNbOZsJNhZX2jABHNoUSVaa1oxslKCcaCiasnsw0IcpJvPL+/gvLV2/Amj8mJs8YsW8r4Pnmw7nYtIozdPSDbrjHSBZKnLCcPi2yOE=")})}) }
error dispatching messages 
error dispatching messages 
